dataset @security-camera language "en" {
    action (p_power :Enum(on,off)) := @security-camera.set_power(power=p_power)
    #_[utterances=["turn ${p_power} my security camera",
                   "switch ${p_power} the security camera",
                   "set the power on my security camera to ${p_power}"]];

    query := @security-camera.current_event()
    #_[utterances=["my security camera live feed",
                   "a snapshot of my security camera",
                   "my security camera",
                   "the last event detected by my security camera"]];

    stream := monitor (@security-camera.current_event())
    #_[utterances=["when there is a new event detected on my security camera",
                   "if something happens on my security camera",
                   "when something is detected by my security camera"]];

    action := @security-camera.set_power(power=enum(off))
    #_[utterances=["shut down my security camera",
                   "disable my security camera",
                   "make my security camera stop recording",
                   "stop the security camera"]];

    action := @security-camera.set_power(power=enum(on))
    #_[utterances=["enable my security camera",
                   "have the security camera start recording",
                   "start my security camera"]];

    stream := monitor ((@security-camera.current_event()), has_person == true)
    #_[utterances=["when my security camera detects a person",
                   "when there is a person in front of my security camera",
                   "when a person is detected by my security camera",
                   "when the security camera detects someone",
                   "when someone is detected by my security camera"]];

    stream := monitor ((@security-camera.current_event()), has_person == false)
    #_[utterances=["when my security camera detects no person",
                   "when the security camera is not detecting anyone",
                   "when nobody is detected by my security camera",
                   "when no one is detected by my security camera"]];

    stream := monitor ((@security-camera.current_event()), has_motion == true)
    #_[utterances=["when my security camera detects motion",
                   "when something moves in front of my security camera",
                   "when the security camera sees something moving"]];

    stream := monitor ((@security-camera.current_event()), has_motion == false)
    #_[utterances=["when my security camera does not detect motion",
                   "when the security camera stops detecting motion",
                   "when motion is no longer detected by my security camera"]];

    stream := monitor ((@security-camera.current_event()), has_sound == true)
    #_[utterances=["when my security camera hears sound",
                   "when the security camera hears something",
                   "when a sound is detected by my security camera"]];

    stream := monitor ((@security-camera.current_event()), has_sound == false)
    #_[utterances=["when my security camera stops hearing sound",
                   "when nothing is heard by my security camera"]];

    action (p_name : String, p_power :Enum(on,off)) := @security-camera(name=p_name).set_power(power=p_power)
    #_[utterances=["turn ${p_power} my ${p_name} security camera",
                   "switch ${p_power} the ${p_name} security camera",
                   "set the power on my ${p_name} security camera to ${p_power}"]];

    query (p_name : String) := @security-camera(name=p_name).current_event()
    #_[utterances=["my ${p_name} security camera live feed",
                   "a snapshot of my ${p_name} security camera",
                   "my ${p_name} security camera",
                   "the last event detected by my ${p_name} security camera"]];

    stream (p_name : String) := monitor (@security-camera(name=p_name).current_event())
    #_[utterances=["when there is a new event detected on my ${p_name} security camera",
                   "if something happens on my ${p_name} security camera",
                   "when something is detected by my ${p_name} security camera"]];

    action (p_name : String) := @security-camera(name=p_name).set_power(power=enum(off))
    #_[utterances=["shut down my ${p_name} security camera",
                   "disable my ${p_name} security camera",
                   "make my ${p_name} security camera stop recording",
                   "stop the ${p_name} security camera"]];

    action (p_name : String) := @security-camera(name=p_name).set_power(power=enum(on))
    #_[utterances=["enable my ${p_name} security camera",
                   "have the ${p_name} security camera start recording",
                   "start my ${p_name} security camera"]];

    stream (p_name : String) := monitor ((@security-camera(name=p_name).current_event()), has_person == true)
    #_[utterances=["when my ${p_name} security camera detects a person",
                   "when there is a person in front of my ${p_name} security camera",
                   "when a person is detected by my ${p_name} security camera",
                   "when the ${p_name} security camera detects someone",
                   "when someone is detected by my ${p_name} security camera"]];

    stream (p_name : String) := monitor ((@security-camera(name=p_name).current_event()), has_person == false)
    #_[utterances=["when my ${p_name} security camera detects no person",
                   "when the ${p_name} security camera is not detecting anyone",
                   "when nobody is detected by my ${p_name} security camera",
                   "when no one is detected by my ${p_name} security camera"]];

    stream (p_name : String) := monitor ((@security-camera(name=p_name).current_event()), has_motion == true)
    #_[utterances=["when my ${p_name} security camera detects motion",
                   "when something moves in front of my ${p_name} security camera",
                   "when the ${p_name} security camera sees something moving"]];

    stream (p_name : String) := monitor ((@security-camera(name=p_name).current_event()), has_motion == false)
    #_[utterances=["when my ${p_name} security camera does not detect motion",
                   "when the ${p_name} security camera stops detecting motion",
                   "when motion is no longer detected by my ${p_name} security camera"]];

    stream (p_name : String) := monitor ((@security-camera(name=p_name).current_event()), has_sound == true)
    #_[utterances=["when my ${p_name} security camera hears sound",
                   "when the ${p_name} security camera hears something",
                   "when a sound is detected by my ${p_name} security camera"]];

    stream (p_name : String) := monitor ((@security-camera(name=p_name).current_event()), has_sound == false)
    #_[utterances=["when my ${p_name} security camera stops hearing sound",
                   "when nothing is heard by my ${p_name} security camera"]];
}