class @com.smartnews
{
  import loader from @org.thingpedia.v2();
  import config from @org.thingpedia.config.none();
  entity article #_[name="Articles on SmartNews"] #[has_ner=false];

  monitorable list query article(in opt counter: Number #_[prompt="how many news articles do you want"],
    			  out id: Entity(com.smartnews:article),
            out title: String,
            out audio: Entity(tt:url),
            out date: Date,
    			  out site_name: String,
    			  out content: String)
  #_[confirmation="top news on SmartNews"]
  #_[formatted=[{type="rdl", webCallback="${audio}", displayTitle= "${title}", displayText="ID: ${id}\nPublished: ${date}\nSource: ${site_name}"}]]
  //#_[formatted=[{type="text", text="Id: ${id}\nTitle: ${title}\nPublished: ${date}\nSource: ${site_name}\nAudio: ${audio}\nContent: ${content}"}]]
  #[doc="get the top news from SmartNews"];
  #[poll_interval=1h];

  list query reading_list(out title: String,
			      out id: Entity(com.smartnews:article),
            out title: String,
            out link: Entity(tt:url),
            out date: Date,
    			  out site_name: String,
    			  out content: String)
  #_[confirmation="reading list on SmartNews"]
  #_[formatted=[{type="rdl", webCallback="${audio}", displayTitle= "${title}", displayText="ID: ${id}\nPublished: ${date}\nSource: ${site_name}"}]]
  //#_[formatted=[{type="text", text="Id: ${id}\nTitle: ${title}\nPublished: ${date}\nSource: ${site_name}\nAudio: ${audio}\nContent: ${content}"}]]
  #[doc="get reading list from SmartNews"];

  action pocket(in req id: Entity(com.smartnews:article))//#[confirm=false])
  #_[confirmation="pocket ${id:select:null {the news}}"];

  action drop(in req id: Entity(com.smartnews:article))
  #_[confirmation="drop ${id:select:null {the news}}"];

}