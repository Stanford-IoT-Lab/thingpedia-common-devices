dataset @proj.finassistant language "en" {

    program (p_company : Entity(tt:stock_id)) :=
    now => @proj.finassistant.price(company=p_company) => notify
    #_[utterances=["what is ${p_company} trading at?",
                    "how much is a share of ${p_company}?",
                    "what is the price of ${p_company?",
                    "what is the stock price of ${p_company}?",
                    "what is ${p_company} trading at?",
                    "how much is ${p_company} trading for?",
                    "what is the stock price for ${p_company}?",
                    "show me the stock chart for ${p_company}",
                    "show me a stock chart for ${p_company}",
                    "${p_company} stock price",
                    "stock price of ${p_company}"
                    ]];

    program (p_company :Entity(tt:stock_id)) :=
      now => @proj.finassistant.pe(company=p_company) => notify
      #_[utterances=["what is the pe ratio of ${p_company}?",
                     "what is the pe ratio for ${p_company}?",
                     "show me the historical pe ratio of ${p_company}",
                     "${p_company} pe ratio",
                     "pe of ${p_company}"
                     ]];

    program (p_company :Entity(tt:stock_id)) :=
      now => @proj.finassistant.ps(company=p_company) => notify
      #_[utterances=["what is the ps ratio of ${p_company}?",
                        "what is the ps ratio for ${p_company}?",
                        "show me the historical ps ratio of ${p_company}",
                        "${p_company} ps ratio",
                        "ps of ${p_company}",
                        "what is the price sales ratio for ${p_company}?",
                        "show me the historical price sales ratio of ${p_company}",
                        "${p_company} price sales ratio",
                        "price sales of ${p_company}"
                        ]];

     program (p_company :Entity(tt:stock_id)) :=
       now => @proj.finassistant.revenue(company=p_company) => notify
       #_[utterances=["how much does ${p_company} make in revenue?",
                        "what is the revenue of ${p_company}?",
                        "how much sales does ${p_company} have?",
                        "revenue of ${p_company}",
                        "${p_company} revenue",
                        "show me historical revenues for ${p_company}",
                        "sales of ${p_company}",
                        "${p_company} sales",
                        "show me historical sales for ${p_company}"
                        ]];

    program (p_company :Entity(tt:stock_id)) :=
    now => @proj.finassistant.earnings(company=p_company) => notify
    #_[utterances=["what is the earnings of ${p_company}?",
                    "how much profit does ${p_company} make?",
                    "what is the net income of ${p_company}",
                    "net income of ${p_company}",
                    "${p_company} net income",
                    "net profit of ${p_company}",
                    "${p_company} net profit",
                    "earnings of ${p_company}",
                    "${p_company} earnings"
                    ]];

    program (p_company :Entity(tt:stock_id)) :=
    now => @proj.finassistant.market_cap(company=p_company) => notify
    #_[utterances=["what is the market cap of ${p_company}?",
                    "what is the equity value of ${p_company}?",
                    "what is the total equity value of ${p_company}?",
                    "what is the market capitalization of ${p_company}",
                    "${p_company} market cap",
                    "${p_company} equity value",
                    "${p_company} total equity value",
                    "${p_company} market capitalization",
                    "market cap of ${p_company}",
                    "equity value of ${p_company}",
                    "total equity value of ${p_company}",
                    "market capitalization of ${p_company}"
                   ]];

    program (p_company :Entity(tt:stock_id)) :=
    now => @proj.finassistant.ebitda(company=p_company) => notify
    #_[utterances=["${p_company} ebitda",
                    "ebitda of ${p_company}",
                    "what is the ebitda of ${p_company}?"
                  ]];

    program (p_company :Entity(tt:stock_id)) :=
    now => @proj.finassistant.operating_profit(company=p_company) => notify
    #_[utterances=["what is the operating profit of ${p_company}?",
                    "${p_company} operating profit",
                    "operating profit of ${p_company}",
                    "what is the operating margin of ${p_company}?",
                    "${p_company} operating margin",
                    "operating margin of ${p_company}",
                    "what is the ebit of ${p_company}?",
                    "${p_company} ebit",
                    "ebit of ${p_company}"
                    ]];

    program (p_company :Entity(tt:stock_id)) :=
    now => @proj.finassistant.gross_profit(company=p_company) => notify
    #_[utterances=["what is the gross profit of ${p_company}?",
                    "${p_company} gross profit",
                    "gross profit of ${p_company}",
                    "what is the gross margin of ${p_company}?",
                    "${p_company} gross margin",
                    "gross margin of ${p_company}"
                  ]];


}
