turking/333482	null	if the astronomy picture of the day concerns the QUOTED_STRING_0 , retrieve it and play something on my QUOTED_STRING_1 tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter description =~ QUOTED_STRING_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_1 ) . play_url ( ) ;
turking/333483	null	if nasa 's astronomy picture of the day description contains QUOTED_STRING_0 , then my QUOTED_STRING_1 tv should play something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter description =~ QUOTED_STRING_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_1 ) . play_url ( ) ;
turking/333484	null	get nasa 's astronomy picture of the day if the description says QUOTED_STRING_0 and then put something on my QUOTED_STRING_1 tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter description =~ QUOTED_STRING_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_1 ) . play_url ( ) ;
turking/333485	null	get curiosity rover photos from the GENERIC_ENTITY_gov.nasa:curiosity_rover_camera_0 and lower the volume of my QUOTED_STRING_0 tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( ) filter camera_used == GENERIC_ENTITY_gov.nasa:curiosity_rover_camera_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_0 ) . lower_volume ( ) ;
turking/333486	null	search twitter ask QUOTED_STRING_0 send on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . send ( ) ;
turking/333487	null	search twitter with the query QUOTED_STRING_0 then send a slack message	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . send ( ) ;
turking/333488	null	send a message on slack when finding QUOTED_STRING_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . send ( ) ;
turking/333494	null	show a pop up message saying QUOTED_STRING_0 when retrieving curiosity rover photos from nasa .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/333498	null	show a pop up message saying QUOTED_STRING_0 when retrieving curiosity rover photos from nasa .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/333556	null	search giphy for a gif with the tag HASHTAG_0 , then play it on continuous loop on my device .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333557	null	look through giphy for a gif with the HASHTAG_0 tag then loop my light bulb colors	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333558	null	loop light bulb colors when HASHTAG_0 gif is posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333559	null	loop colors on my light bulb after getting a gif with the tag HASHTAG_0 from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333567	null	post something on facebook with a gif from giphy with the tag HASHTAG_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @com.facebook . post ( ) ;
turking/333568	null	post gif with HASHTAG_0 to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @com.facebook . post ( ) ;
turking/333578	null	loop light bulb colors when tag HASHTAG_0 gif comes from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333579	null	loop colors on my light bulb after getting a gif with the HASHTAG_0 tag from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333580	null	loop colors on my light bulb after getting a gif with the tag HASHTAG_0 from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333581	null	decrease the volume on my QUOTED_STRING_0 tv and retrieve nasa 's astronomy picture of the day if the title is QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_1 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_0 ) . lower_volume ( ) ;
turking/333582	null	if nasa 's astronomy picture of the day is titled QUOTED_STRING_0 , then retrieve the picture and decrease the volume on my QUOTED_STRING_1 tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_1 ) . lower_volume ( ) ;
turking/333583	null	find a picture of the QUOTED_STRING_0 on nasa astronomy picture of the day then decrease the volume on my QUOTED_STRING_1 tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_1 ) . lower_volume ( ) ;
turking/333584	null	decrease the volume on my QUOTED_STRING_0 tv and retrieve nasa 's astronomy picture of the day if the title is QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_1 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_0 ) . lower_volume ( ) ;
turking/333603	null	search HASHTAG_0 on twitter then turn off security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/333604	null	turn off my security camera and lookup HASHTAG_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/333605	null	first search for HASHTAG_0 on twitter , then second , turn off my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/333606	null	turn off my security camera after searching for HASHTAG_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/333638	null	update the purpose of slack channel to QUOTED_STRING_0 and search QUOTED_STRING_1 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_1 ; @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_0 ) ;
turking/333639	null	search twitter for QUOTED_STRING_0 and update the the slack channel to QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_1 ) ;
turking/333640	null	get nasa 's astronomy picture of the day , with the title QUOTED_STRING_0 and update the topic of slack channel something to QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @com.slack . updateChannelTopic ( topic = QUOTED_STRING_1 ) ;
turking/333641	null	get nasa 's astronomy picture of the day and title is QUOTED_STRING_0 then update topic of slack channel to QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @com.slack . updateChannelTopic ( topic = QUOTED_STRING_1 ) ;
turking/333642	null	retrieve nasa 's astronomy picture of the day with the title QUOTED_STRING_0 and update the topic of my slack channel to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @com.slack . updateChannelTopic ( topic = QUOTED_STRING_1 ) ;
turking/333655	null	search twitter for HASHTAG_0 and then turn my security camera on .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/333656	null	turn on security camera while searching HASHTAG_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/333657	null	turn on my security camera and search HASHTAG_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/333658	null	turn on my security camera after searching for HASHTAG_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/333695	null	get my HASHTAG_0 pictures from instagram . set my thermostat at NUMBER_0 - NUMBER_1 fahrenheit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.thermostat . set_minmax_temperature ( high = NUMBER_1 F , low = NUMBER_0 F ) ;
turking/333696	null	get recent instagram pictures with HASHTAG_0 and set thermostat between NUMBER_0 f and NUMBER_1 f.	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.thermostat . set_minmax_temperature ( high = NUMBER_1 F , low = NUMBER_0 F ) ;
turking/333697	null	send instagram photos filtered with the hashtag HASHTAG_0 and then adjust the thermostat within the parameters of NUMBER_0 to NUMBER_1 degrees fahrenheit	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.thermostat . set_minmax_temperature ( high = NUMBER_1 F , low = NUMBER_0 F ) ;
turking/335803	null	if nasa posts a picture and the description contains the word QUOTED_STRING_0 on their astronomy picture of the day then play something on my QUOTED_STRING_1 tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter description =~ QUOTED_STRING_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_1 ) . play_url ( ) ;
turking/335805	null	send a message on slack when finding QUOTED_STRING_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . send ( ) ;
turking/335806	null	search QUOTED_STRING_0 on twitter and send it through slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . send ( ) ;
turking/335828	null	get a gif tagged HASHTAG_0 from giphy then loop colors on my light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/335830	null	post something on facebook when giphy gifs tagged HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @com.facebook . post ( ) ;
turking/335831	null	post something on facebook after getting a gif with the tag HASHTAG_0 from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @com.facebook . post ( ) ;
turking/335834	null	find a gif with tag HASHTAG_0 then loop light bulb colors .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/335835	null	get a gif with the tag HASHTAG_0 from giphy then loop colors on my light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/335836	null	if nasa 's picture of the day is titled QUOTED_STRING_0 , then turn down the volume on my tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @org.thingpedia.iot.tv . lower_volume ( ) ;
turking/335842	null	post QUOTED_STRING_0 on facebook after searching for HASHTAG_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/335843	null	find HASHTAG_0 on twitter . post QUOTED_STRING_0 to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/335844	null	turn off my security camera after searching for HASHTAG_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/335857	null	search on twitter for the query QUOTED_STRING_0 then update the purpose of my slack channel to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_1 ) ;
turking/335858	null	search for QUOTED_STRING_0 on twitter and then update the channel on slack to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_1 ) ;
turking/335859	null	search on twitter for the query QUOTED_STRING_0 then update the purpose of my slack channel to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_1 ) ;
turking/335860	null	nasa 's astronomy picture of the day titled QUOTED_STRING_0 then update slack channel QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @com.slack . updateChannelTopic ( topic = QUOTED_STRING_1 ) ;
turking/335861	null	retrieve nasa 's astronomy picture of the day with the title QUOTED_STRING_0 and update the topic of my slack channel to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @com.slack . updateChannelTopic ( topic = QUOTED_STRING_1 ) ;
turking/335874	null	search HASHTAG_0 on twitter and turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350571	null	when the moon changes at home change the name to QUOTED_STRING_0 in dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( location = $location . home ) ; @com.dropbox . move ( new_name = QUOTED_STRING_0 ) ;
turking/350583	null	create a meme with the word QUOTED_STRING_0 at the top and QUOTED_STRING_1 at the bottom using imgflip , then turn on my security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 , text_bottom = QUOTED_STRING_1 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350584	null	create imgflip meme with text QUOTED_STRING_0 at the top and QUOTED_STRING_1 at the bottom , then turn on security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 , text_bottom = QUOTED_STRING_1 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350585	null	generate the meme QUOTED_STRING_0 with a specified message at the top and QUOTED_STRING_1 at the bottom using imgflip , then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 , text_bottom = QUOTED_STRING_1 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350587	null	using imgflip generate the meme QUOTED_STRING_0 with something at the top and QUOTED_STRING_1 at the bottom , and then turn on my security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 , text_bottom = QUOTED_STRING_1 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350599	null	make github post on issue NUMBER_0 after getting eta for uber	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @com.github . comment_issue ( issue_number = NUMBER_0 ) ;
turking/350600	null	first look somewhere to find the eta for an uber , and then comment on uber 's issue NUMBER_0 in github	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @com.github . comment_issue ( issue_number = NUMBER_0 ) ;
turking/350645	null	turn on my security camera after getting etas for uber services .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350646	null	turn on security camera after getting etas for uber services here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350647	null	see how long an uber will take to get here and then turn on my security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350649	null	identify uber eta from here and turn on security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350710	null	if the latest email on gmail is labeled QUOTED_STRING_0 , update the purpose of slack HASHTAG_0 to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ; @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_1 ) ;
turking/350712	null	if the label is QUOTED_STRING_0 on an email in gmail then update the purpose of slack channel HASHTAG_0 to QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ; @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_1 ) ;
turking/350714	null	if my newest gmail e-mail is labeled QUOTED_STRING_0 , the update the purpose of the slack channel HASHTAG_0 to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ; @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_1 ) ;
turking/350718	null	if i get a gmail email with subject QUOTED_STRING_0 then update slack channel HASHTAG_0 to QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ; @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_1 ) ;
turking/350836	null	search on bing images for an image that has the title QUOTED_STRING_0 then rename the image as QUOTED_STRING_1 in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . image_search ( ) filter title == QUOTED_STRING_0 ; @com.dropbox . move ( new_name = QUOTED_STRING_1 ) ;
turking/350837	null	search QUOTED_STRING_0 on bing images and save file as QUOTED_STRING_1 to my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . image_search ( ) filter title == QUOTED_STRING_0 ; @com.dropbox . move ( new_name = QUOTED_STRING_1 ) ;
turking/350838	null	search bing images for QUOTED_STRING_0 and rename them to QUOTED_STRING_1 in dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . image_search ( ) filter title == QUOTED_STRING_0 ; @com.dropbox . move ( new_name = QUOTED_STRING_1 ) ;
turking/350840	null	search and rename to QUOTED_STRING_0 bing image title with QUOTED_STRING_1 in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . image_search ( ) filter title == QUOTED_STRING_1 ; @com.dropbox . move ( new_name = QUOTED_STRING_0 ) ;
turking/350841	null	make meme beginning with QUOTED_STRING_0 and ending with imgflip then turn off security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/350844	null	using imgflip , make a meme with QUOTED_STRING_0 at the top and something at the bottom and turn off the security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/350845	null	generate a meme with the word QUOTED_STRING_0 on top with a random flip image and then turn off my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/351085	null	send a message on slack with a random number from NUMBER_0 to NUMBER_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ; @com.slack . send ( ) ;
turking/351086	null	give me a random number between NUMBER_0 and NUMBER_1 and send it on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ; @com.slack . send ( ) ;
turking/351087	null	generate a random integer between NUMBER_0 and NUMBER_1 and send a message on slack saying anything .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ; @com.slack . send ( ) ;
turking/351088	null	pick a random number between NUMBER_0 and NUMBER_1 and send a message on slack to saying something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ; @com.slack . send ( ) ;
turking/351099	null	scan twitter for the hashtag HASHTAG_0 and then set my slack presence to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @com.slack . setPresence ( presence = enum away ) ;
turking/351101	null	search for HASHTAG_0 on twitter and set my presence to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @com.slack . setPresence ( presence = enum away ) ;
turking/351105	null	find HASHTAG_0 on twitter then set my slack presence to away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @com.slack . setPresence ( presence = enum away ) ;
turking/351122	null	get uber rates from home and show colors on my light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . home ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/351123	null	get the estimate for an uber from home to here and then loop colors on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location , start = $location . home ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/351124	null	get me the cost of uber from home to there and then loop colors on my light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location , start = $location . home ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/351125	null	find estimates for uber from home to here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location , start = $location . home ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/351126	null	loop colors in my light bulb to let me know when you get price estimates from uber for rides from home to here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location , start = $location . home ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/351129	null	if the estimate is less than DURATION_0 , get etas for uber services to places and turn on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) filter estimate <= DURATION_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/351130	null	get uber estimates and turn on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/351131	null	turn on light bulb if uber eta is less than DURATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) filter estimate <= DURATION_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/351438	null	get estimated prices for uber from some place to here and then create a folder called QUOTED_STRING_0 in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location ) ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/351852	null	change my thermostat to a specific setting after getting a HASHTAG_0 gif from giphy .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/351855	null	collect a gif tagged HASHTAG_0 from giphy , then set my thermostat to a value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/351858	null	get a HASHTAG_0 gif from giphy , and then set my thermostat to some value	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/351861	null	set my thermostat to some value and then get a gif with the tag HASHTAG_0 from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/351864	null	find a gif with a HASHTAG_0 tag on giphy , then set my thermostat .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/352798	null	get estimate uber prices for routes from work to some place . put the estimates in a new folder labeled something in dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . work ) ; @com.dropbox . create_new_folder ( ) ;
turking/352801	null	get prices for ubering from work to some place then make a file in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . work ) ; @com.dropbox . create_new_folder ( ) ;
turking/352807	null	get estimate price for uber from work to the corner market then create a folder called traveling in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . work ) ; @com.dropbox . create_new_folder ( ) ;
turking/352812	null	search for the phrase HASHTAG_0 on twitter and then set my thermostat to a random temperature	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/352818	null	search HASHTAG_0 on twitter . set my thermostat to number degrees .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/352820	null	set my thermostat and search for HASHTAG_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/352900	null	if my dropbox quota total is less than NUMBER_0 mb retrieve it and create a file on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . get_space_usage ( ) filter total_space <= NUMBER_0 MB ; @com.google.drive . create_new_drive_file ( ) ;
turking/352902	null	if quota on dropbox is less than NUMBER_0 mb then create a file named something on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . get_space_usage ( ) filter total_space <= NUMBER_0 MB ; @com.google.drive . create_new_drive_file ( ) ;
turking/352904	null	create file with name something on google drive if dropbox quota info is less than NUMBER_0 mb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . get_space_usage ( ) filter total_space <= NUMBER_0 MB ; @com.google.drive . create_new_drive_file ( ) ;
turking/353340	null	use imgflip to create a meme with something with something at the top and QUOTED_STRING_0 at the bottom then put it on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_0 ) ; @com.google.drive . create_new_drive_file ( ) ;
turking/353356	null	generate meme with something at top and QUOTED_STRING_0 at bottom	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_0 ) ; @org.thingpedia.iot.thermostat . set_hvac_mode ( mode = enum cool ) ;
turking/353362	null	generate a meme with imgflip something with something on the top and then add QUOTED_STRING_0 at the bottom then set my hvac on the cool setting	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_0 ) ; @org.thingpedia.iot.thermostat . set_hvac_mode ( mode = enum cool ) ;
turking/353564	null	after searching for QUOTED_STRING_0 on bing , turn on light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . web_search ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/353565	null	turn on my light bulb after searching for QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . web_search ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/353566	null	search QUOTED_STRING_0 on bing and turn on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . web_search ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/353567	null	do a bing search for QUOTED_STRING_0 and then switch my light bulb on	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . web_search ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/353568	null	search for QUOTED_STRING_0 on bing , then turn on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . web_search ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/353569	null	get a random integer between NUMBER_0 and some value . send an email with the subject something on gmail with the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/353571	null	generate a number between NUMBER_0 and some random number , then send an email with subject line gmail and message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/353572	null	pick a random integer between NUMBER_0 and some value then email it from gmail to something with the subject something and message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/354280	null	if label of gmail email is QUOTED_STRING_0 then make QUOTED_STRING_1 google drive file	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ; @com.google.drive . create_new_drive_file ( file_name = QUOTED_STRING_1 ) ;
turking/354414	null	get estimated prices for uber between two places and with duration less than hour , increase the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( ) filter duration <= 1 h ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/354416	null	get estimated prices on uber from my current location to a specified destination ; if it will take less than an hour , increase the volume of my computer .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . current_location ) filter duration <= 1 h ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/354417	null	get estimated price for uber and if duration is less than DURATION_0 , raise volume on speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( ) filter duration <= 1 h ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/354587	null	yandex translate QUOTED_STRING_0 to something and turn my speaker volume down	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . lower_volume ( ) ;
turking/354588	null	translate QUOTED_STRING_0 with yandex and reduce my speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . lower_volume ( ) ;
turking/354589	null	translate QUOTED_STRING_0 using yandex , then turn down the volume of my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . lower_volume ( ) ;
turking/354590	null	use yandex to translate QUOTED_STRING_0 and turn down the volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . lower_volume ( ) ;
turking/354621	null	use yandex to detect the language of QUOTED_STRING_0 and increase the volume of the speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/354628	null	turn up my speaker volume when yandex hears QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/354637	null	tell me the weather at home and then make my speaker the default audio .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . home ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/354639	null	set my speaker to be the default audio output and show the current weather for home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . home ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/354643	null	show the weather at home and set my speaker to default	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . home ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/355495	null	if title is QUOTED_STRING_0 , get xkcd comic and follow something on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . get_comic ( ) filter title == QUOTED_STRING_0 ; @com.twitter . follow ( ) ;
turking/355530	null	if QUOTED_STRING_0 is organizing and sequence is under NUMBER_0 create new folder called QUOTED_STRING_1 in my list off calendar events .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 && sequence <= NUMBER_0 ; @com.google.drive . create_new_drive_file ( file_name = QUOTED_STRING_1 ) ;
turking/355531	null	please list singular events in my calendar that are created by QUOTED_STRING_0 and insert them into a created file with the name QUOTED_STRING_1 on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ; @com.google.drive . create_new_drive_file ( file_name = QUOTED_STRING_1 ) ;
turking/355533	null	create a file named QUOTED_STRING_0 on google drive and list any events from my calendar where the organizer of the event is named QUOTED_STRING_1 and the sequence is less than NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_1 && sequence <= NUMBER_0 ; @com.google.drive . create_new_drive_file ( file_name = QUOTED_STRING_0 ) ;
turking/355539	null	generate a random number between 0 and 1 then comment not he issue number on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ; @com.github . comment_issue ( ) ;
turking/355560	null	show the current weather for work if the weather is sunny then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . work ) filter status == enum sunny ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/355561	null	show the current weather for at work if it is sunny then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . work ) filter status == enum sunny ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/355818	null	get a random integer between NUMBER_0 and some value . update the purpose of slack channel something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.slack . updateChannelPurpose ( ) ;
turking/355821	null	update the purpose of slack channel to a random integer between NUMBER_0 and some value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.slack . updateChannelPurpose ( ) ;
turking/355873	null	generate meme QUOTED_STRING_0 with something at top and QUOTED_STRING_1 on bottom using imgflip and tweet with picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 , text_bottom = QUOTED_STRING_1 ) ; @com.twitter . post_picture ( ) ;
turking/356169	null	set my hvac to heat and search for youtube videos matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.thermostat . set_hvac_mode ( mode = enum heat ) ;
turking/356172	null	search for QUOTED_STRING_0 on youtube videos , then set hvac to heat .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.thermostat . set_hvac_mode ( mode = enum heat ) ;
turking/356175	null	turn on my heart when searching youtube for videos with the subject QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.thermostat . set_hvac_mode ( mode = enum heat ) ;
turking/356178	null	set my hvac to heat after searching videos on youtube matching QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.thermostat . set_hvac_mode ( mode = enum heat ) ;
turking/356186	null	show the weather , then turn off the security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . home ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/356189	null	show the current weather for my home then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . home ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/356192	null	show the current weather for home then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . home ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/356194	null	show weather then turn on my security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . home ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/356405	null	turn on my security camera if a random number between 0 and 1 is less than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) filter random <= NUMBER_0 ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/356511	null	get estimated prices for uber for traveling from home to work . if the estimate is greater than CURRENCY_0 , add something to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . work , start = $location . home ) filter high_estimate >= CURRENCY_0 ; @com.github . add_email ( ) ;
turking/356523	null	find the sun time information for my location then set the volume on my speakers to a percent of the value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . sunrise ( location = $location . current_location ) ; @org.thingpedia.iot.speaker . set_volume ( ) ;
turking/356524	null	find out sun time info here , then turn volume on my speaker to some percent .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . sunrise ( location = $location . current_location ) ; @org.thingpedia.iot.speaker . set_volume ( ) ;
turking/356525	null	set speaker to some value when getting sun time info	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . sunrise ( ) ; @org.thingpedia.iot.speaker . set_volume ( ) ;
turking/356732	null	create a file named QUOTED_STRING_0 on google drive after searching youtube channels matching QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_channel ( query = QUOTED_STRING_1 ) ; @com.google.drive . create_new_drive_file ( file_name = QUOTED_STRING_0 ) ;
turking/357184	null	use yandex to translate QUOTED_STRING_0 and send a message titled QUOTED_STRING_1 to twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @com.twitter . send_direct_message ( message = QUOTED_STRING_1 ) ;
turking/357189	null	translate something to QUOTED_STRING_0 using yandex , and then send a direct message on twitter to something saying QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @com.twitter . send_direct_message ( message = QUOTED_STRING_1 ) ;
turking/357194	null	send QUOTED_STRING_0 a message on twitter saying QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @com.twitter . send_direct_message ( message = QUOTED_STRING_1 ) ;
turking/357199	null	using yandex , auto correct the word QUOTED_STRING_0 on twitter to the word QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @com.twitter . send_direct_message ( message = QUOTED_STRING_1 ) ;
turking/357302	null	get uber etas and comment on issue some value in QUOTED_STRING_0 on github with QUOTED_STRING_1 as the body	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @com.github . comment_issue ( body = QUOTED_STRING_0 , repo_name = QUOTED_STRING_1 ) ;
turking/357314	null	if a random xkcd comic contains QUOTED_STRING_0 adjust thermostat to NUMBER_0 c	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.thermostat . set_target_temperature ( value = NUMBER_0 C ) ;
turking/357319	null	if the title contains QUOTED_STRING_0 pick a random xkcd comic and set my thermostat to NUMBER_0 c.	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.thermostat . set_target_temperature ( value = NUMBER_0 C ) ;
turking/357328	null	select a random xkcd comic and if the title contains QUOTED_STRING_0 set my thermostat to NUMBER_0 c.	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.thermostat . set_target_temperature ( value = NUMBER_0 C ) ;
turking/357333	null	set my thermostat to NUMBER_0 c after getting a random xkcd comic with title QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.thermostat . set_target_temperature ( value = NUMBER_0 C ) ;
turking/357363	null	create an event that has an end date of DATE_0 and on that date set my thermostat NUMBER_0 c.	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter end_date == DATE_0 ; @org.thingpedia.iot.thermostat . set_minmax_temperature ( high = NUMBER_0 C ) ;
turking/357368	null	list event in my calendar if end date is DATE_0 then set thermostat to NUMBER_0 c	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter end_date == DATE_0 ; @org.thingpedia.iot.thermostat . set_target_temperature ( value = NUMBER_0 C ) ;
turking/357373	null	lust the event in my calendar eighth end date if wednesday , DATE_0 . then set my thermostat at NUMBER_0 c.	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter end_date == DATE_0 ; @org.thingpedia.iot.thermostat . set_minmax_temperature ( high = NUMBER_0 C ) ;
turking/357618	null	show weather if wind speed is NUMBER_0 kph and create new folder called something in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter wind_speed == NUMBER_0 kmph ; @com.dropbox . create_new_folder ( ) ;
turking/357628	null	if wind speed here is less than NUMBER_0 kph , create a new dropbox folder called something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . current_location ) filter wind_speed == NUMBER_0 kmph ; @com.dropbox . create_new_folder ( ) ;
turking/357633	null	if wind speed is more than NUMBER_0 kph , show the current weather and create new file something in dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter wind_speed == NUMBER_0 kmph ; @com.dropbox . create_new_folder ( ) ;
turking/357637	null	loop the colors on my light bulb if humidity is less than NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.humidity . humidity ( ) filter value <= NUMBER_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/357642	null	check and notate the thermostat 's reported humidity level in the case of value dropping below NUMBER_0 and when that 's done , start looping my light bulb colors	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.humidity . humidity ( ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/357647	null	if humidity on my thermostat reads under NUMBER_0 then adjust my light bulb to loop colors	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.humidity . humidity ( ) filter value <= NUMBER_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/357651	null	if the humidity reported by the thermostat is less than NUMBER_0 , loop the colors on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.humidity . humidity ( ) filter value <= NUMBER_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/357656	null	if the thermostat 's value is less than NUMBER_0 , record the humidity and loop the light bulb 's colors .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.humidity . humidity ( ) filter value <= NUMBER_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/357686	null	get prices from uber from here to someone and set volume on my speaker to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location ) ; @org.thingpedia.iot.speaker . set_volume ( volume = NUMBER_0 ) ;
turking/357688	null	find moon phase for work and turn on my camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( location = $location . work ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357691	null	set my speaker volume to NUMBER_0 % when you get estimated prices from some place to here	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location ) ; @org.thingpedia.iot.speaker . set_volume ( volume = NUMBER_0 ) ;
turking/357693	null	turn off my security camera after getting the moon phase for at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( location = $location . work ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357698	null	get the moon phase and turn on my security camera at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( location = $location . work ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357701	null	estimate uber price from someplace to here , then set the volume on my speaker to NUMBER_0 percent .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location ) ; @org.thingpedia.iot.speaker . set_volume ( volume = NUMBER_0 ) ;
turking/357706	null	set the volume on my speaker to NUMBER_0 % after getting estimated prices from uber .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( ) ; @org.thingpedia.iot.speaker . set_volume ( volume = NUMBER_0 ) ;
turking/357812	null	recover my current instagram pictures if area is here and afterward set my indoor regulator to some esteem .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . current_location ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/357817	null	if location on a recent instagram picture is here , set my thermostat to some value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . current_location ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/357822	null	set my thermostat and get my recent instagram pictures if the location is here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . current_location ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/357829	null	if my location is here , get my instagram pictures and set my thermostat to a value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . current_location ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/357862	null	generate a meme with the caption , QUOTED_STRING_0 at the top and something at the bottom using imgflip and then set my thermostat between NUMBER_0 f and some value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.thermostat . set_minmax_temperature ( low = NUMBER_0 F ) ;
turking/357867	null	while generating the meme QUOTED_STRING_0 at the top and something else at the bottom , using imgflip , then set my thermostat NUMBER_0 f and some value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.thermostat . set_minmax_temperature ( low = NUMBER_0 F ) ;
turking/357872	null	using imgflip create a meme that says QUOTED_STRING_0 at the top and put something at the bottom , then change my thermostat to NUMBER_0 degrees	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.thermostat . set_minmax_temperature ( low = NUMBER_0 F ) ;
turking/357908	null	get a xkcd comic and tweet with pic	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . get_comic ( ) ; @com.twitter . post_picture ( ) ;
turking/357968	null	list the content of QUOTED_STRING_0 in my dropbox , then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357976	null	turn on my security camera after listing the contests of QUOTED_STRING_0 in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357979	null	read the file QUOTED_STRING_0 from dropbox and turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357983	null	turn on camera after listing content of QUOTED_STRING_0 in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357991	null	yandex translate QUOTED_STRING_0 and turn the speaker volume down .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . lower_volume ( ) ;
turking/357996	null	using yandex , translate something to QUOTED_STRING_0 and then turn down the volume for the speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . lower_volume ( ) ;
turking/358001	null	use yandex to translate something to QUOTED_STRING_0 , and lower speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . lower_volume ( ) ;
turking/358012	null	report the sun time info at work for the date DATE_0 and then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . sunrise ( date = DATE_0 , location = $location . work ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/358020	null	turn on my security camera after getting the sun time info for work on DATE_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . sunrise ( date = DATE_0 , location = $location . work ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/358055	null	when a listed event in my calendar 's organizer is QUOTED_STRING_0 then increases the volume of my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/358065	null	turn up my volume when an event called QUOTED_STRING_0 is added to my calendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/358070	null	increase speaker volume for QUOTED_STRING_0 events	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/358075	null	if the organizer is QUOTED_STRING_0 list the event in my calendar and increase the volume on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/358087	null	get price estimates from place to place for uber . if the distance is more than NUMBER_0 then create a folder titled QUOTED_STRING_0 in by dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( ) filter distance >= NUMBER_0 m ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/358097	null	get estimated prices for uber from here to there , if the distance is more than NUMBER_0 m create a new folder called QUOTED_STRING_0 in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . current_location ) filter distance >= NUMBER_0 m ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/358279	null	get arrival time for uber for uber x and turn off security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) filter uber_type == enum uber_x ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/358389	null	turn on light after translating QUOTED_STRING_0 using yandex .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/358394	null	translate QUOTED_STRING_0 to something with yandex before turning off light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum off ) ;
turking/358403	null	please translate QUOTED_STRING_0 using spandex then turn on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/358408	null	translate QUOTED_STRING_0 using yandex and then turn on my light .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/358563	null	when twitter query is QUOTED_STRING_0 increase my speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/358566	null	if a twitter search is done for QUOTED_STRING_0 then turn up my speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/358572	null	search on twitter and if the query is QUOTED_STRING_0 , then increase the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/358577	null	use the meme QUOTED_STRING_0 with something at the top and bottom using imgflip	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/358578	null	make a meme titled QUOTED_STRING_0 on imgflip with top and bottom captions and turn off the light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum off ) ;
turking/358579	null	make QUOTED_STRING_0 meme with top and bottom using imgflip and turn on light .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/358580	null	create a meme with QUOTED_STRING_0 with images on the top and bottom , then turn off light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum off ) ;
turking/358581	null	generate an QUOTED_STRING_0 meme with text at the top and bottom using imgflip then turn on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/358718	null	if xkcd comic is entitled QUOTED_STRING_0 then create a comment in issue NUMBER_0 on QUOTED_STRING_1 on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title == QUOTED_STRING_0 ; @com.github . comment_issue ( issue_number = NUMBER_0 , repo_name = QUOTED_STRING_1 ) ;
turking/358722	null	get random xkcd comic if title is QUOTED_STRING_0 comment on issue in QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title == QUOTED_STRING_0 ; @com.github . comment_issue ( repo_name = QUOTED_STRING_1 ) ;
turking/358726	null	choose an xkcd comic and if the title is QUOTED_STRING_0 comment on issue NUMBER_0 in the QUOTED_STRING_1 thread in github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title == QUOTED_STRING_0 ; @com.github . comment_issue ( issue_number = NUMBER_0 , repo_name = QUOTED_STRING_1 ) ;
turking/358730	null	if the title is QUOTED_STRING_0 get a random xkcd comic , then post comment on issue NUMBER_0 in QUOTED_STRING_1 on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title == QUOTED_STRING_0 ; @com.github . comment_issue ( issue_number = NUMBER_0 , repo_name = QUOTED_STRING_1 ) ;
turking/358744	null	if summary contains QUOTED_STRING_0 , list event in calendar . if description is QUOTED_STRING_1 , and sequence is above NUMBER_0 , mute QUOTED_STRING_2 tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter description =~ QUOTED_STRING_1 && sequence >= NUMBER_0 && summary =~ QUOTED_STRING_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_2 ) . mute ( ) ;
turking/358750	null	list the event in my calendar . play music on my speaker if the sequence is less than NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter sequence <= NUMBER_0 ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/358751	null	play music on speaker if event on calendar sequence is less than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter sequence <= NUMBER_0 ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/358756	null	find a random integer starting from the number NUMBER_0 . decrease my speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @org.thingpedia.iot.speaker . lower_volume ( ) ;
turking/358954	null	if my recent instagram picture 's location is work , increase my speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . work ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/358958	null	raise speaker volume after getting instagram pics with work as location	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . work ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/358962	null	can my recent instagram pictures and increase the volume on my speakers if any of the pictures are from work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . work ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/358966	null	i would like to look at my newest instagram photos and turn up my speaker volume when at work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . work ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/358970	null	get photos for instagram if the are about work and increase speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . work ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/359195	null	set speaker volume to NUMBER_0 % after getting estimated prices for uber	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( ) ; @org.thingpedia.iot.speaker . set_volume ( volume = NUMBER_0 ) ;
turking/359199	null	set volume to NUMBER_0 % after getting uber estimated here to there price	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location ) ; @org.thingpedia.iot.speaker . set_volume ( volume = NUMBER_0 ) ;
turking/359203	null	set the volume on my speaker to NUMBER_0 % after you get the estimates from uber for a trip from here to xxx .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location ) ; @org.thingpedia.iot.speaker . set_volume ( volume = NUMBER_0 ) ;
turking/359211	null	get quotes for uber and then set my speaker volume at NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( ) ; @org.thingpedia.iot.speaker . set_volume ( volume = NUMBER_0 ) ;
turking/359497	null	lower volume on my speaker after getting a random integer between some value and NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_0 ) ; @org.thingpedia.iot.speaker . lower_volume ( ) ;
turking/359500	null	find a random integer between NUMBER_0 and another value then decrease the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_0 ) ; @org.thingpedia.iot.speaker . lower_volume ( ) ;
turking/359754	null	if there is a curiosity rover photo from nasa is uploaded on wed , DATE_0 , turn the volume of my speaker up .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/359759	null	if it 's DATE_0 get curiosity rover photos from nasa and turn my speaker volume up .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/359767	null	increase the volume on my speaker if the curiosity rover photos retrieved are from DATE_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/359772	null	open curiosity rover photos from nasa on DATE_0 and turn up the volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/372146	null	if the title of an xkcd comic is QUOTED_STRING_0 follow something on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . get_comic ( ) filter title == QUOTED_STRING_0 ; @com.twitter . follow ( ) ;
turking/372147	null	if headline is QUOTED_STRING_0 on an xkcd then share something on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . get_comic ( ) filter title == QUOTED_STRING_0 ; @com.twitter . post ( ) ;
turking/372148	null	if an xkcd comic is titled QUOTED_STRING_0 follow something on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . get_comic ( ) filter title == QUOTED_STRING_0 ; @com.twitter . follow ( ) ;
turking/372149	null	if an xkcd comic has a title of QUOTED_STRING_0 follow something on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . get_comic ( ) filter title == QUOTED_STRING_0 ; @com.twitter . follow ( ) ;
turking/372150	null	retrieve etas for uber then set thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/372151	null	set thermostat after eta is received from uber	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/372152	null	find eta 's for uber services in this area and then change my thermostat to some value	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/372153	null	after getting eta for uber set thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/372154	null	set thermostat after finding uber eta	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.thermostat . set_target_temperature ( ) ;
turking/372439	null	if youtube videos are QUOTED_STRING_0 and have a description of QUOTED_STRING_1 rename the QUOTED_STRING_2 files to QUOTED_STRING_3 in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) filter description == QUOTED_STRING_1 ; @com.dropbox . move ( new_name = QUOTED_STRING_3 , old_name = QUOTED_STRING_2 ) ;
turking/372440	null	look up youtube videos matching QUOTED_STRING_0 if QUOTED_STRING_1 is description then rename file QUOTED_STRING_2 to QUOTED_STRING_3 in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) filter description == QUOTED_STRING_1 ; @com.dropbox . move ( new_name = QUOTED_STRING_3 , old_name = QUOTED_STRING_2 ) ;
turking/372441	null	rename QUOTED_STRING_0 to QUOTED_STRING_1 in my dropbox if description in youtube videos search matching QUOTED_STRING_2 is QUOTED_STRING_3	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_2 ) filter description == QUOTED_STRING_3 ; @com.dropbox . move ( new_name = QUOTED_STRING_1 , old_name = QUOTED_STRING_0 ) ;
turking/372442	null	in my dropbox rename QUOTED_STRING_0 to QUOTED_STRING_1 if description in youtube videos search matching QUOTED_STRING_2 is QUOTED_STRING_3	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_2 ) filter description == QUOTED_STRING_3 ; @com.dropbox . move ( new_name = QUOTED_STRING_1 , old_name = QUOTED_STRING_0 ) ;
turking/372483	null	make a new dropbox folder entitled something and add the event to my calendar , whenever there 's an event that begins on the DATE_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter start_date == DATE_0 ; @com.dropbox . create_new_folder ( ) ;
turking/372484	null	show the event in my calendar if it starts on the DATE_0 , then make me a new folder in my dropbox and call it something	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter start_date == DATE_0 ; @com.dropbox . create_new_folder ( ) ;
turking/372485	null	make me a folder named something in my dropbox when there 's an event beginning on DATE_0 after first adding the event to my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter start_date == DATE_0 ; @com.dropbox . create_new_folder ( ) ;
turking/372487	null	look for start date DATE_0 , list event in my calendar , then create folder named something in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter start_date == DATE_0 ; @com.dropbox . create_new_folder ( ) ;
turking/372490	null	make a new folder in my dropbox for any event in my calendar that starts DATE_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter start_date == DATE_0 ; @com.dropbox . create_new_folder ( ) ;
turking/372689	null	if USERNAME_0 is in the reply to of any returned result of a twitter search , change the QUOTED_STRING_0 file name to something in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @com.dropbox . move ( old_name = QUOTED_STRING_0 ) ;
turking/372690	null	look at twitter and see if there is something that says USERNAME_0 and if so rename QUOTED_STRING_0 to drop box .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @com.dropbox . move ( old_name = QUOTED_STRING_0 ) ;
turking/372691	null	search on twitter for USERNAME_0 and rename QUOTED_STRING_0 to dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @com.dropbox . move ( old_name = QUOTED_STRING_0 ) ;
turking/372692	null	find USERNAME_0 on twitter and rename QUOTED_STRING_0 to drop box .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @com.dropbox . move ( old_name = QUOTED_STRING_0 ) ;
turking/372693	null	search twitter for replies to USERNAME_0 , rename to QUOTED_STRING_0 in dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @com.dropbox . move ( old_name = QUOTED_STRING_0 ) ;
turking/372694	null	in dropbox rename replies to USERNAME_0 to QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @com.dropbox . move ( old_name = QUOTED_STRING_0 ) ;
turking/372712	null	activate security camera after using dropbox to open QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372714	null	turn the security camera on after opening QUOTED_STRING_0 on dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372715	null	open QUOTED_STRING_0 on dropbox ; power up my security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372718	null	go to my dropbox and open QUOTED_STRING_0 and then turn my security camera on	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372719	null	open the file QUOTED_STRING_0 that 's in my dropbox and turn the security camera on too	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372721	null	switch on my security camera , after you show me QUOTED_STRING_0 , located in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372722	null	retrieve QUOTED_STRING_0 , which can be found in my dropbox , and afterwards switch on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372783	null	check nasa 's astronomy picture of the day , if title contains QUOTED_STRING_0 an email should be sent to something with the subject of something at gmail , message should read QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title =~ QUOTED_STRING_0 ; @com.gmail . send_email ( message = QUOTED_STRING_1 ) ;
turking/372784	null	if nasa 's astronomy picture of the day title has QUOTED_STRING_0 in it , email something use subject something and use message QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title =~ QUOTED_STRING_0 ; @com.gmail . send_email ( message = QUOTED_STRING_1 ) ;
turking/372785	null	check nasa 's pic of the day title for QUOTED_STRING_0 , if it is QUOTED_STRING_1 email something subject something message QUOTED_STRING_2	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title =~ QUOTED_STRING_0 ; @com.gmail . send_email ( message = QUOTED_STRING_2 ) ;
turking/372786	null	use gmail to send the message QUOTED_STRING_0 to something , subject something , if the word QUOTED_STRING_1 is in nasa 's astronomy picture of the day .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title =~ QUOTED_STRING_1 ; @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/372844	null	estimate prices for uber from work to some place if surge is greater than NUMBER_0 then turn off my security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . work ) filter surge >= NUMBER_0 ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/372846	null	if the surge is higher than NUMBER_0 , then get estimated prices for uber from my job to a destination and then turn off my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . work ) filter surge >= NUMBER_0 ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/372847	null	for surges that are greater than NUMBER_0 for uber ride prices from my job to a certain destination please turn off my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . work ) filter surge >= NUMBER_0 ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/372930	null	list QUOTED_STRING_0 content in my dropbox and set presence on slack to auto	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.slack . setPresence ( presence = enum auto ) ;
turking/372935	null	my QUOTED_STRING_0 folder needs to have its contents listing , and my slack account needs to be set to auto .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.slack . setPresence ( presence = enum auto ) ;
turking/372936	null	list what is in my QUOTED_STRING_0 in the dropbox and put auto as my slack presence .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.slack . setPresence ( presence = enum auto ) ;
turking/373129	null	all recent ig post labeled QUOTED_STRING_0 should be retrieved and next set my status on slack to away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373130	null	i want all post on instagram captioned QUOTED_STRING_0 to be pulled up and then my status on slack set to away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373132	null	set my slack to away and get my recent insta picture when the caption says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373133	null	get my recent insta pic if the caption has QUOTED_STRING_0 in it and set my slack status to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373135	null	make dropbox folder named QUOTED_STRING_0 after getting random integer between NUMBER_0 and some value	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/373136	null	after getting random integer between NUMBER_0 and some value make dropbox folder entitled QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/373140	null	browse twitter QUOTED_STRING_0 text under HASHTAG_0 then send out email using gmail with subject QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && text == QUOTED_STRING_0 ; @com.gmail . send_email ( subject = QUOTED_STRING_1 ) ;
turking/373141	null	create a dropbox folder named QUOTED_STRING_0 but only after select a random integer between NUMBER_0 and some value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/373143	null	search twitter for HASHTAG_0 , if you find the text QUOTED_STRING_0 then compose and send a new gmail message to something with the subject , QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && text == QUOTED_STRING_0 ; @com.gmail . send_email ( subject = QUOTED_STRING_1 ) ;
turking/373144	null	if QUOTED_STRING_0 is found when searching twitter for HASHTAG_0 , then send a message to something via gmail with the subject QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && text == QUOTED_STRING_0 ; @com.gmail . send_email ( subject = QUOTED_STRING_1 ) ;
turking/373145	null	get a random integer between NUMBER_0 and some other number and then make a new folder named QUOTED_STRING_0 in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/373147	null	run a search for HASHTAG_0 on twitter . if the text reads QUOTED_STRING_0 then use gmail to send an email to something with the subject QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && text == QUOTED_STRING_0 ; @com.gmail . send_email ( subject = QUOTED_STRING_1 ) ;
turking/373148	null	on twitter , search for HASHTAG_0 if the text says QUOTED_STRING_0 then send an email to something using gmail , use QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && text == QUOTED_STRING_0 ; @com.gmail . send_email ( subject = QUOTED_STRING_1 ) ;
turking/373314	null	when uber estimated price from here to place is greater than CURRENCY_0 , turn off security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . current_location ) filter low_estimate >= CURRENCY_0 ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/373337	null	flash an alert with my light bulb after you check dropbox for a list of the content QUOTED_STRING_0 and QUOTED_STRING_1 content is sized NUMBER_0 kb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) filter file_size == NUMBER_0 KB ; @org.thingpedia.iot.light-bulb . alert_long ( ) ;
turking/373338	null	my speaker should be on the default audio output then search for QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . web_search ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373339	null	use bing to find QUOTED_STRING_0 and then set my speaker to play it .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . web_search ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373343	null	check if my heating system is in the state of cooling then turn up the volume on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.thermostat . get_hvac_state ( ) filter state == enum cooling ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/373345	null	check the state of the heating system and if it is cooling increase my speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.thermostat . get_hvac_state ( ) filter state == enum cooling ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/373346	null	if the heating system is cooling when it is checked increase the volume on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.thermostat . get_hvac_state ( ) filter state == enum cooling ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/373347	null	my speaker volume will go up if my heater cools down .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.thermostat . get_hvac_state ( ) filter state == enum cooling ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/373348	null	when my heating system cools down i will turn up my speakers .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.thermostat . get_hvac_state ( ) filter state == enum cooling ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/373351	null	stop cooling by increasing the volume of the speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.thermostat . get_hvac_state ( ) filter state == enum cooling ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/373506	null	update the topic on HASHTAG_0 on slack to something is the url is URL_0 when an xkcd is pulled randomly	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter link == URL_0 ; @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/373508	null	set the default audio output to my speakers after you search twitter , if reply to is USERNAME_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373510	null	if in reply to USERNAME_0 , do a twitter search and afterwards turn the default output for audio to my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373511	null	if reply on twitter is to USERNAME_0 then set my speaker to be the default audio output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373512	null	if twitter search in reply to result is USERNAME_0 then set my speaker as default audio output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373513	null	if USERNAME_0 is replied to on twitter make my speaker the default audio output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373514	null	specify my speaker as default audio output if twitter reply is USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373516	null	look for an xkcd comic that includes QUOTED_STRING_0 in the title and change my thermostat to a value between NUMBER_0 and some value	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.thermostat . set_minmax_temperature ( low = NUMBER_0 F ) ;
turking/373517	null	find videos matching title QUOTED_STRING_0 next set my speaker as the default output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373518	null	set my speaker as the default audio output upon finding youtube videos titled QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373519	null	after searching youtube for QUOTED_STRING_0 videos set my speaker as the default for the audio output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373520	null	look for youtube videos that match QUOTED_STRING_0 and set my speaker to the default audio output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373521	null	set default audio output on my speaker an find youtube videos matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373522	null	set the temperature above NUMBER_0 degrees after getting me an xkcd comic that contains the word QUOTED_STRING_0 in the title	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.thermostat . set_minmax_temperature ( low = NUMBER_0 F ) ;
turking/373523	null	do a youtube search for QUOTED_STRING_0 and then use default audio output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373524	null	program thermostat between NUMBER_0 and some value after finding xkcd comic with QUOTED_STRING_0 in the title	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.thermostat . set_minmax_temperature ( low = NUMBER_0 F ) ;
turking/373525	null	if youtube video is found matching QUOTED_STRING_0 set speaker to default audio	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373555	null	if the number is below NUMBER_0 then grab the random xkcd comic and turn off my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter number <= NUMBER_0 ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/373800	null	please show the current weather and if fog it at NUMBER_0 , then turn the volume up on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter fog == NUMBER_0 ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/373801	null	look up the weather , if fog is at NUMBER_0 , turn the volume up on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter fog == NUMBER_0 ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/373802	null	when fog for my locations is NUMBER_0 , turn my speaker up .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . current_location ) filter fog == NUMBER_0 ; @org.thingpedia.iot.speaker . raise_volume ( ) ;
turking/373803	null	get the curiosity rover pics from nasa that were shot DATE_0 then play some tunes though the speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/373804	null	grab the curiosity rover pictures from nasa that were taken DATE_0 , then have my speakers play some music	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/373805	null	get the nasa curiosity rover shots that were taken on DATE_0 , then set up my speakers to play music	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/373807	null	load nasa photos of curiosity rover on DATE_0 , then use speakers to play some music	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/373808	null	if nasa curiosity rover takes a photo on DATE_0 , play music on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/373862	null	if sequence is NUMBER_0 and summary contains QUOTED_STRING_0 while listing event in my calendar set my presence on slack to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter sequence == NUMBER_0 && summary =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373863	null	see my calendar and if any QUOTED_STRING_0 is scheduled for NUMBER_0 then set my nearness on slack to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter sequence == NUMBER_0 && summary =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373865	null	mark me as away on slack if sequence is NUMBER_0 and summary has the word QUOTED_STRING_0 and put the event in my calendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter sequence == NUMBER_0 && summary =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373921	null	get uber etas here , then set speaker as audio	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373922	null	pull etas for uber here . set default audio to speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373923	null	pull uber etas from here . make speaker audio output .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373924	null	find when the uber services arrive here than set the volume to go to my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373925	null	look for uber eta 's at here then enable my speaker as the default audio output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373926	null	search for uber services eta 's to here and establish my speakers as the default audio output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373927	null	find eta 's for uber at this location and set my speaker to be default audio	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/373928	null	get eta 's for uber services and then set my speaker to be default audio output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374269	null	if the date is DATE_0 when you check the moon phase somewhere , make my speaker default audio output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( date = DATE_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374272	null	get the moon phase for a place with the date of DATE_0 then set my speaker to be the default audio output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( date = DATE_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374273	null	set my speaker to be the default audio output when you get the moon phase for some place with the date of DATE_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( date = DATE_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374276	null	tell me the moon phase in a certain place if the date is DATE_0 and after that set my speaker to be the default audio output	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( date = DATE_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374378	null	set my speaker to be the default audio output if yandex detects language of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374379	null	make my speaker the default audio output after detecting the language of QUOTED_STRING_0 using yandex .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374380	null	detect the language of the phrase QUOTED_STRING_0 on yandex , then set my speaker as the default audio output .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374381	null	using yandex , detect the language of QUOTED_STRING_0 and set my speaker to the default audio output .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374382	null	the speaker should be set to the default audio output every time QUOTED_STRING_0 is detected by yandex .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374476	null	if a location contains QUOTED_STRING_0 , list the event in my calendar and loop colors on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/374477	null	if language of QUOTED_STRING_0 is detected by yandex , play music on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374478	null	add all calendar events if QUOTED_STRING_0 is the location display all colors on light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/374479	null	loop colors on my light bulb every time the location in my calendar for an event contains QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/374480	null	use yandex to detect the language of QUOTED_STRING_0 and then play music on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374481	null	when language of QUOTED_STRING_0 is detected through yandex , play music on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374483	null	when QUOTED_STRING_0 is posted to a location , add an event to my calendar and loop through my light bulb 's colors .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/374484	null	p ; ay music on my speaker when yandex find QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374487	null	if the phrase QUOTED_STRING_0 is in the location , then list the event in my calendar and loop the colors on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/374488	null	using yandex , detect the language of QUOTED_STRING_0 and play some music on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374566	null	update the moon cycle for some place and post on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( ) ; @com.facebook . post ( ) ;
turking/374606	null	play music but only after generating a meme with QUOTED_STRING_0 at the top and QUOTED_STRING_1 at the bottom on imgflip .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_1 , text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374607	null	generate with imgflip a meme with QUOTED_STRING_0 under QUOTED_STRING_1 and then use my speaker to play some music	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_0 , text_top = QUOTED_STRING_1 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374608	null	with the help of imgflip , create a meme with the captions QUOTED_STRING_0 above and QUOTED_STRING_1 underneath , then play songs on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_1 , text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374609	null	use imgflip to generate QUOTED_STRING_0 / QUOTED_STRING_1 memes while playing music .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_1 , text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374610	null	imgflip plays music on my speaker when i generate QUOTED_STRING_0 / QUOTED_STRING_1 memes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_1 , text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374617	null	set my speaker as default audio output if uber eta at work is more than DURATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . work ) filter estimate >= 1 h ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374618	null	obtain eta for uber at work . set my speaker to be default audio output if eta is more than DURATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . work ) filter estimate >= 1 h ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374620	null	my audio output defaults to speaker if uber eta 's at work are more than 1 hr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . work ) filter estimate >= 1 h ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374623	null	get estimate when uber comes only if is greater than DURATION_0 set speaker to preselect audio	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . work ) filter estimate >= 1 h ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374624	null	get time when uber comes and set speaker to DURATION_0 to automatically go to audio .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . work ) filter estimate >= 1 h ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374628	null	what is the wait for an uber , if its over DURATION_0 continue default audio .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . work ) filter estimate >= 1 h ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/374629	null	how long will it take for an uber to come , play regular audio if over an hour .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . work ) filter estimate >= 1 h ; @org.thingpedia.iot.speaker . set_sink ( ) ;
turking/351133	null	open QUOTED_STRING_0 from dropbox , then share QUOTED_STRING_1 on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/351134	null	open QUOTED_STRING_0 file on dropbox then post QUOTED_STRING_1 on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/351135	null	in dropbox , open QUOTED_STRING_0 , then share QUOTED_STRING_1 in linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/351136	null	open the file QUOTED_STRING_0 in dropbox and share the message QUOTED_STRING_1 on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/357821	null	get uber estimates from home and if it 's below CURRENCY_0 , share QUOTED_STRING_0 on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . home ) filter high_estimate <= CURRENCY_0 ; @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372709	null	share QUOTED_STRING_0 on linkedin if my recent instagram pics have QUOTED_STRING_1 as the caption and hashtags HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_1 && contains ( hashtags , HASHTAG_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372710	null	if my recent insta photos have a caption containing QUOTED_STRING_0 and a HASHTAG_0 hashtag use linkedin to share QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 && contains ( hashtags , HASHTAG_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/372711	null	if instagram photos with QUOTED_STRING_0 captions and HASHTAG_0 hashtags are recent update linkedin to QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 && contains ( hashtags , HASHTAG_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/372716	null	find my recent instagram picture that has caption QUOTED_STRING_0 and has hashtag HASHTAG_0 and put it on linkedin with the caption QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 && contains ( hashtags , HASHTAG_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/372717	null	go to my instagram and find the picture with the caption QUOTED_STRING_0 that has the hashtag HASHTAG_0 and share via linkedin and write QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 && contains ( hashtags , HASHTAG_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/372720	null	i want to share the term QUOTED_STRING_0 , on my linkedin , whenever photos on my instagram account contain the caption QUOTED_STRING_1 and also have the hashtag HASHTAG_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_1 && contains ( hashtags , HASHTAG_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/373042	null	share QUOTED_STRING_0 on linkedin once you get etas for uber service at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . home ) ; @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/373095	null	share something on linkedin when QUOTED_STRING_0 content listed in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( ) ;
turking/373096	null	share on linkedin when content from QUOTED_STRING_0 listed in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( ) ;
turking/373097	null	list my QUOTED_STRING_0 in dropbox and share on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( ) ;
turking/373098	null	make a list of dropbox 's QUOTED_STRING_0 content . after that , share something on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( ) ;
turking/373099	null	share something on linkedin after listing the stuff from QUOTED_STRING_0 in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( ) ;
turking/373101	null	share something on my linkedin after the QUOTED_STRING_0 content is listed in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( ) ;
