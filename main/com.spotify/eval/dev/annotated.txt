====
# online/spotify-1
U: turn off repeat.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.player_repeat(repeat=enum(off));
====
# online/spotify-110
U: play the song stairway to heaven
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => ((@com.spotify.song()) filter id =~ "stairway to heaven") => @com.spotify.play(playable=id);
====
# online/spotify-114
U: what track is currently playing on spotify?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.get_currently_playing() => notify;
====
# online/spotify-35
U: play something by the smashing pumpkins
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.playable(), contains(artists, null^^com.spotify:artist("smashing pumpkins"))) => @com.spotify.play(playable=id);
====
# online/1674005
U: resume my spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.player_play();
====
# online/1675050
U: play songs by the beatles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song(), contains(artists, null^^com.spotify:artist("beatles"))) => @com.spotify.play(playable=id);
====
# online/1678056
U: set shuffle on
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.player_shuffle(shuffle=enum(on));
====
# online/16013786
U: find me songs of kanye west
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song(), contains(artists, null^^com.spotify:artist("kanye west"))) => notify;
====
# online/32582189
U: play the song not afraid
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => ((@com.spotify.song()) filter id =~ "not afraid") => @com.spotify.play(playable=id);
====
# 2
U: what is drake's most popular song ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.song(), contains(artists, null^^com.spotify:artist("drake"))))[1] => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (sort popularity desc of (@com.spotify(id="com.spotify-001").song(), contains(artists,"spotify:artist:3TVXtAsR1Inumwj472S9r4"^^com.spotify:artist("Drake"))))[1] => notify
C: #[results=[
C:   { id="spotify:track:127QTOFJsJQp5LbJbu3A1y"^^com.spotify:song("Toosie Slide"), artists=["spotify:artist:3TVXtAsR1Inumwj472S9r4"^^com.spotify:artist("Drake")], release_date=new Date("2020-04-03T00:00:00.000Z"), popularity=93, energy=45, danceability=83 }
C: ]];
A: his most popular song right now is toosie slide . would you like to play this song ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify(id="com.spotify-001").play(playable="spotify:track:127QTOFJsJQp5LbJbu3A1y"^^com.spotify:song("Toosie Slide"))
AT: #[confirm=enum(proposed)];
U: i don't know that song . when was it released ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [release_date] of (sort popularity desc of (@com.spotify(id="com.spotify-001").song(), id == "spotify:track:127QTOFJsJQp5LbJbu3A1y"^^com.spotify:song("Toosie Slide") && contains(artists,"spotify:artist:3TVXtAsR1Inumwj472S9r4"^^com.spotify:artist("Drake"))))[1] => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (sort popularity desc of (@com.spotify(id="com.spotify-001").song(), contains(artists,"spotify:artist:3TVXtAsR1Inumwj472S9r4"^^com.spotify:artist("Drake"))))[1] => notify
C: #[results=[
C:   { id="spotify:track:127QTOFJsJQp5LbJbu3A1y"^^com.spotify:song("Toosie Slide"), artists=["spotify:artist:3TVXtAsR1Inumwj472S9r4"^^com.spotify:artist("Drake")], release_date=new Date("2020-04-03T00:00:00.000Z"), popularity=93, energy=45, danceability=83 }
C: ]];
C: now => [release_date] of (sort popularity desc of (@com.spotify(id="com.spotify-001").song(), id == "spotify:track:127QTOFJsJQp5LbJbu3A1y"^^com.spotify:song("Toosie Slide") && contains(artists,"spotify:artist:3TVXtAsR1Inumwj472S9r4"^^com.spotify:artist("Drake"))))[1] => notify
C: #[results=[
C:   { id="spotify:track:127QTOFJsJQp5LbJbu3A1y"^^com.spotify:song("Toosie Slide"), release_date=new Date("2020-04-03T00:00:00.000Z") }
C: ]];
A: toosie slide was released on april 3rd 2020 .
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: ok thanks, goodbye .
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# 5
U: hi, i'm having a party later would the song despacito be good for dancing .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [danceability] of (@com.spotify.song(), id =~ "despacito") => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => [danceability] of (@com.spotify(id="com.spotify-001").song(), id =~ "despacito") => notify
C: #[results=[
C:   { id="spotify:track:6habFhsOp2NvshLv26DqMb"^^com.spotify:song("Despacito"), danceability=65 }
C: ]];
A: the danceability is 65 out of 100 . would you like me to play this song ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify(id="com.spotify-001").play(playable="spotify:track:6habFhsOp2NvshLv26DqMb"^^com.spotify:song("Despacito"))
AT: #[confirm=enum(proposed)];
U: no thank you, maybe later .
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# 6
U: who was the song 7 rings written by ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.song()), id =~ "7 rings") => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => [artists] of ((@com.spotify(id="com.spotify-001").song()), id =~ "7 rings") => notify
C: #[results=[
C:   { id="spotify:track:6ocbgoVGwYJhOv1GgI9NsF"^^com.spotify:song("7 rings"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")] },
C:   { id="spotify:track:0YEg2JfkMeJ1hTYqop4A5o"^^com.spotify:song("7 Rings"), artists=["spotify:artist:00YTqRClk82aMchQQpYMd5"^^com.spotify:artist("Our Last Night"), "spotify:artist:4gO25bbcu1eFNi8uDCvJFS"^^com.spotify:artist("Derek DiScanio")] },
C:   { id="spotify:track:2fOmk4x4OJZsjK60kjW7KZ"^^com.spotify:song("7 Rings"), artists=["spotify:artist:1Vvvx45Apu6dQqwuZQxtgW"^^com.spotify:artist("Kidz Bop Kids")] },
C:   { id="spotify:track:6ocbgoVGwYJhOv1GgI9NsF"^^com.spotify:song("7 rings"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")] },
C:   { id="spotify:track:6va6SjWz457IOZidBppAhz"^^com.spotify:song("7 rings - live"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")] },
C:   { id="spotify:track:6AyI8UGx8Y4peb7pLOy2pf"^^com.spotify:song("7 rings (feat. 2 Chainz) - Remix"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:17lzZA2AlOHwCwFALHttmp"^^com.spotify:artist("2 Chainz")] }
C: ]];
A: 7 rings was written by ariana grande . would you like me to play this song ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify(id="com.spotify-001").play(playable="spotify:track:6ocbgoVGwYJhOv1GgI9NsF"^^com.spotify:song("7 rings"))
AT: #[confirm=enum(proposed)];
U: no thank you . what other songs has she released ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify(id="com.spotify-001").song()), contains(artists, "spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")) => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => [artists] of ((@com.spotify(id="com.spotify-001").song()), id =~ "7 rings") => notify
C: #[results=[
C:   { id="spotify:track:6ocbgoVGwYJhOv1GgI9NsF"^^com.spotify:song("7 rings"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")] },
C:   { id="spotify:track:0YEg2JfkMeJ1hTYqop4A5o"^^com.spotify:song("7 Rings"), artists=["spotify:artist:00YTqRClk82aMchQQpYMd5"^^com.spotify:artist("Our Last Night"), "spotify:artist:4gO25bbcu1eFNi8uDCvJFS"^^com.spotify:artist("Derek DiScanio")] },
C:   { id="spotify:track:2fOmk4x4OJZsjK60kjW7KZ"^^com.spotify:song("7 Rings"), artists=["spotify:artist:1Vvvx45Apu6dQqwuZQxtgW"^^com.spotify:artist("Kidz Bop Kids")] },
C:   { id="spotify:track:6ocbgoVGwYJhOv1GgI9NsF"^^com.spotify:song("7 rings"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")] },
C:   { id="spotify:track:6va6SjWz457IOZidBppAhz"^^com.spotify:song("7 rings - live"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")] },
C:   { id="spotify:track:6AyI8UGx8Y4peb7pLOy2pf"^^com.spotify:song("7 rings (feat. 2 Chainz) - Remix"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:17lzZA2AlOHwCwFALHttmp"^^com.spotify:artist("2 Chainz")] }
C: ]];
C: now => (@com.spotify(id="com.spotify-001").song()), contains(artists, "spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")) => notify
C: #[results=[
C:   { id="spotify:track:2qT1uLXPVPzGgFOx4jtEuo"^^com.spotify:song("no tears left to cry"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2018-08-17T00:00:00.000Z"), popularity=81, energy=71, danceability=69 },
C:   { id="spotify:track:3e9HZxeyfWwjeyPAMmWSSQ"^^com.spotify:song("thank u, next"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2019-02-08T00:00:00.000Z"), popularity=84, energy=65, danceability=71 },
C:   { id="spotify:track:6ocbgoVGwYJhOv1GgI9NsF"^^com.spotify:song("7 rings"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2019-02-08T00:00:00.000Z"), popularity=86, energy=31, danceability=77 },
C:   { id="spotify:track:6va6SjWz457IOZidBppAhz"^^com.spotify:song("7 rings - live"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2019-12-23T00:00:00.000Z"), popularity=54, energy=73, danceability=44 },
C:   { id="spotify:track:6AyI8UGx8Y4peb7pLOy2pf"^^com.spotify:song("7 rings (feat. 2 Chainz) - Remix"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:17lzZA2AlOHwCwFALHttmp"^^com.spotify:artist("2 Chainz")], release_date=new Date("2019-02-01T00:00:00.000Z"), popularity=52, energy=34, danceability=78 },
C:   { id="spotify:track:4HBZA5flZLE435QTztThqH"^^com.spotify:song("Stuck with U (with Justin Bieber)"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-05-08T00:00:00.000Z"), popularity=93, energy=45, danceability=59 },
C:   { id="spotify:track:6ocbgoVGwYJhOv1GgI9NsF"^^com.spotify:song("7 rings"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2019-02-08T00:00:00.000Z"), popularity=86, energy=31, danceability=77 },
C:   { id="spotify:track:0Ryd8975WihbObpp5cPW1t"^^com.spotify:song("boyfriend (with Social House)"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:5UjifI1TYefXWn9GdqDOHl"^^com.spotify:artist("Social House")], release_date=new Date("2019-08-02T00:00:00.000Z"), popularity=81, energy=79, danceability=4 },
C:   { id="spotify:track:4kV4N9D1iKVxx1KLvtTpjS"^^com.spotify:song("break up with your girlfriend, i'm bored"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2019-02-08T00:00:00.000Z"), popularity=80, energy=55, danceability=72 },
C:   { id="spotify:track:5OCJzvD7sykQEKHH7qAC3C"^^com.spotify:song("God is a woman"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2018-08-17T00:00:00.000Z"), popularity=79, energy=65, danceability=60 }
C: ]]
C: #[count=25];
A: i found stuck with u(with justin bieber), no tears left to cry, and thank u, next . would you like more songs ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_three;
U: no . out of those 3 songs which one is the most popular ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify(id="com.spotify-001").song(), contains(artists, "spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"))))[1] => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => [artists] of ((@com.spotify(id="com.spotify-001").song()), id =~ "7 rings") => notify
C: #[results=[
C:   { id="spotify:track:6ocbgoVGwYJhOv1GgI9NsF"^^com.spotify:song("7 rings"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")] },
C:   { id="spotify:track:0YEg2JfkMeJ1hTYqop4A5o"^^com.spotify:song("7 Rings"), artists=["spotify:artist:00YTqRClk82aMchQQpYMd5"^^com.spotify:artist("Our Last Night"), "spotify:artist:4gO25bbcu1eFNi8uDCvJFS"^^com.spotify:artist("Derek DiScanio")] },
C:   { id="spotify:track:2fOmk4x4OJZsjK60kjW7KZ"^^com.spotify:song("7 Rings"), artists=["spotify:artist:1Vvvx45Apu6dQqwuZQxtgW"^^com.spotify:artist("Kidz Bop Kids")] },
C:   { id="spotify:track:6ocbgoVGwYJhOv1GgI9NsF"^^com.spotify:song("7 rings"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")] },
C:   { id="spotify:track:6va6SjWz457IOZidBppAhz"^^com.spotify:song("7 rings - live"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")] },
C:   { id="spotify:track:6AyI8UGx8Y4peb7pLOy2pf"^^com.spotify:song("7 rings (feat. 2 Chainz) - Remix"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:17lzZA2AlOHwCwFALHttmp"^^com.spotify:artist("2 Chainz")] }
C: ]];
C: now => (@com.spotify(id="com.spotify-001").song()), contains(artists, "spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")) => notify
C: #[results=[
C:   { id="spotify:track:2qT1uLXPVPzGgFOx4jtEuo"^^com.spotify:song("no tears left to cry"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2018-08-17T00:00:00.000Z"), popularity=81, energy=71, danceability=69 },
C:   { id="spotify:track:3e9HZxeyfWwjeyPAMmWSSQ"^^com.spotify:song("thank u, next"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2019-02-08T00:00:00.000Z"), popularity=84, energy=65, danceability=71 },
C:   { id="spotify:track:6ocbgoVGwYJhOv1GgI9NsF"^^com.spotify:song("7 rings"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2019-02-08T00:00:00.000Z"), popularity=86, energy=31, danceability=77 },
C:   { id="spotify:track:6va6SjWz457IOZidBppAhz"^^com.spotify:song("7 rings - live"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2019-12-23T00:00:00.000Z"), popularity=54, energy=73, danceability=44 },
C:   { id="spotify:track:6AyI8UGx8Y4peb7pLOy2pf"^^com.spotify:song("7 rings (feat. 2 Chainz) - Remix"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:17lzZA2AlOHwCwFALHttmp"^^com.spotify:artist("2 Chainz")], release_date=new Date("2019-02-01T00:00:00.000Z"), popularity=52, energy=34, danceability=78 },
C:   { id="spotify:track:4HBZA5flZLE435QTztThqH"^^com.spotify:song("Stuck with U (with Justin Bieber)"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-05-08T00:00:00.000Z"), popularity=93, energy=45, danceability=59 },
C:   { id="spotify:track:6ocbgoVGwYJhOv1GgI9NsF"^^com.spotify:song("7 rings"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2019-02-08T00:00:00.000Z"), popularity=86, energy=31, danceability=77 },
C:   { id="spotify:track:0Ryd8975WihbObpp5cPW1t"^^com.spotify:song("boyfriend (with Social House)"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:5UjifI1TYefXWn9GdqDOHl"^^com.spotify:artist("Social House")], release_date=new Date("2019-08-02T00:00:00.000Z"), popularity=81, energy=79, danceability=4 },
C:   { id="spotify:track:4kV4N9D1iKVxx1KLvtTpjS"^^com.spotify:song("break up with your girlfriend, i'm bored"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2019-02-08T00:00:00.000Z"), popularity=80, energy=55, danceability=72 },
C:   { id="spotify:track:5OCJzvD7sykQEKHH7qAC3C"^^com.spotify:song("God is a woman"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande")], release_date=new Date("2018-08-17T00:00:00.000Z"), popularity=79, energy=65, danceability=60 }
C: ]]
C: #[count=25];
C: now => (sort popularity desc of (@com.spotify(id="com.spotify-001").song(), contains(artists, "spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"))))[1] => notify
C: #[results=[
C:   { id="spotify:track:4HBZA5flZLE435QTztThqH"^^com.spotify:song("Stuck with U (with Justin Bieber)"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-05-08T00:00:00.000Z"), popularity=93, energy=45, danceability=59 }
C: ]]
C: #[count=25];
A: stuck with u(with justin bieber) is the most popular . is there anything else i can help you with ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: nope, bye .
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# snips-nlu/spotify-3
U: play the Música Da Série De Filmes O Hobbit album by Alex Otaola
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "música da série de filmes o hobbit" && contains(artists, null^^com.spotify:artist("alex otaola"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-5
U: Play The Soft Parade .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "soft parade") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-9
U: Please play me Jerry Lee Lewis's If You Say So track .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("jerry lee lewis")) && id =~ "if you say so") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-10
U: play the newest by Exuma
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("exuma")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-11
U: Play the album alas y raíces by Dave Pybus .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "alas y raíces" && contains(artists, null^^com.spotify:artist("dave pybus"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-12
U: play music by Helen Ward
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("helen ward")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-14
U: Plan an album by Roni Duani .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("roni duani")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-16
U: Play the best music by Arthur Johnston .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("arthur johnston")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-17
U: Play the song gangsta? by Siavash Ghomayshi
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("siavash ghomayshi")) && id =~ "gangsta") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-24
U: Play Marche Lorraine by Rachael Lampa
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("rachael lampa")) && id =~ "marche lorraine") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-25
U: Play some soul music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "soul") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-26
U: Play Robin Hood Rescuing Three Squires by Bhupinder Singh
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("bhupinder singh")) && id =~ "robin hood rescuing three squires") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-30
U: play Shake Your Head
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "shake your head") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-35
U: Play Inside The Eye by twinkie clark
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("inside the eye") && contains(artists, null^^com.spotify:artist("twinkie clark"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-39
U: Play Alone, Again from Mike Viola
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("alone, again") && contains(artists, null^^com.spotify:artist("mike viola"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-43
U: Please play the newest music by Evil Jared Hasselhoff
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("evil jared hasselhoff")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-46
U: Can you play a top 5 song by Manos Hadjidakis
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("manos hadjidakis")))[1 : 5] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-48
U: Play music by Antonella Barba from the album Bath
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "bath" && contains(artists, null^^com.spotify:artist("antonella barba"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-52
U: Play Out From Under from Hurricane Chris
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("hurricane chris")) && id =~ "out from under") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-54
U: Play One Way Ticket by Ray Kennedy .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ray kennedy")) && id =~ "one way ticket") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-65
U: play music by Don Reno
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("don reno")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-79
U: Play celtic music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "celtic") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-80
U: play Moustapha Amar Make It Rain
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("moustapha amar")) && id =~ "make it rain") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-84
U: Play music from artist Ashley
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ashley")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-85
U: play Miguelito top charting album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.album() filter contains(artists, null^^com.spotify:artist("miguelito")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-89
U: play songs by Wise
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("wise")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-93
U: Play something by Brian Chase .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("brian chase")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-97
U: Play a tune from Space Mandino .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("space mandino")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-99
U: Find me music by Kaori Utatsuki off the album that has top twenty hits
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.album() filter contains(artists, null^^com.spotify:artist("kaori utatsuki")))[1 : 20] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-101
U: Play some thrash metal .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "thrash metal") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-105
U: Play the artist Joe
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("joe")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-106
U: play some Prabha Atre
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("prabha atre")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-113
U: Play Sense Tu from Ebi Hamedi
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ebi hamedi")) && id =~ "sense tu") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-120
U: Play some symphonic rock .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "symphonic rock") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-130
U: play music by Shinji Miyazaki
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("shinji miyazaki")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-135
U: Play Water Under The Bridge by Hariprasad Chaurasia .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("hariprasad chaurasia")) && id =~ "water under the bridge") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-137
U: I want to hear Shooby Taylor's Tearing Up The Album Charts .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("tearing up the album charts") && contains(artists, null^^com.spotify:artist("shooby taylor"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-140
U: Play Circus Farm by Deana Carter .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("deana carter")) && id =~ "circus farm") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-142
U: play music by Bryan Maclean
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("bryan maclean")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-147
U: Play tune from Sonny Stitt
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("sonny stitt")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-150
U: Play Tomorrow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "tomorrow") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-151
U: Can you play a sound track by Sissieretta Jones
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("sissieretta jones")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-153
U: I want to hear Sarban's greatest hits
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("sarban")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-159
U: Play Ciribiribin by Sandeep Khare
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("sandeep khare")) && id =~ "ciribiribin") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-163
U: Play the top 5 by Akira The Don .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("akira the don")))[1 : 5] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-166
U: play The Necromancer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "necromancer") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-167
U: Can you play Under The Anheuser Bush by Pete Doherty
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("pete doherty")) && id =~ "under the anheuser bush") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-170
U: Play Sound Of Love from Papa Mali
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("papa mali")) && id =~ "sound of love") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-173
U: Play Magic Time by Phoebus
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("magic time") && contains(artists, null^^com.spotify:artist("phoebus"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-174
U: Play Johnny Gimble
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("johnny gimble")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-177
U: Play a tune by Andrew Findon
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("andrew findon")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-179
U: Play some chanson music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "chanson") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-182
U: Play music by Young Steff
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("young steff")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-187
U: Play music by Janet Paschal
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("janet paschal")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-188
U: Play Praise The Lord And Pass The Ammunition .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "praise the lord and pass the ammunition") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-191
U: Play music by Damien Rice
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("damien rice")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-194
U: Play some Tony Grant .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("tony grant")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-195
U: play Andy White
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("andy white")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-200
U: play Robin Trower Unravel
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("robin trower")) && id =~ "unravel") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-203
U: Play the album Vibrations by Marion Elise Raven
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "vibrations" && contains(artists, null^^com.spotify:artist("marion elise raven"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-205
U: play Jawad Ahmad
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("jawad ahmad")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-211
U: play Darude
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("darude")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-213
U: Play 2gether by Jade Puget
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("2 gether") && contains(artists, null^^com.spotify:artist("jade puget"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-214
U: play Wow by Jon Theodore
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("jon theodore")) && id =~ "wow") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-215
U: play Doctor Fink if i could choose
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("doctor fink")) && id =~ "if i could choose") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-217
U: Can I hear a tune from Vladimir Vysotski?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("vladimir vysotski")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-218
U: Please play Different Slanguages by Fred Labour .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("different slanguages") && contains(artists, null^^com.spotify:artist("fred labour"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-225
U: play the album a kiss before you go by Bt
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "a kiss before you go" && contains(artists, null^^com.spotify:artist("bt"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-227
U: Play some salsa music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "salsa") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-228
U: Play top Rosanne Cash
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("rosanne cash")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-231
U: Play Midnight Special
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "midnight special") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-233
U: play Takes Place In Your Work Space by Eddie Kendricks
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("takes place in your work space") && contains(artists, null^^com.spotify:artist("eddie kendricks"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-240
U: Play tribal
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "tribal") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-243
U: Repeat the track of music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_repeat(repeat=enum track);
====
# snips-nlu/spotify-247
U: Play Martha My Dear by shannon .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("shannon")) && id =~ "martha my dear") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-248
U: play the greatest Adrian Kowanek music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("adrian kowanek")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-250
U: I'd like to listen to Space music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "space") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-251
U: play the last Niney The Observer song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("niney the observer")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-253
U: Play industrial music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "industrial") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-254
U: Play always by walter parazaider .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("walter parazaider")) && id =~ "always") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-264
U: Play music from the track She Came In Through The Bathroom Window
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "she came in through the bathroom window") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-265
U: play some best selling rave songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains~(genres, "rave"))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-267
U: Play the newest stuff by blowfly
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("blowfly")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-273
U: play Clifford Brown All Stars by Michael Balzary
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("clifford brown all stars") && contains(artists, null^^com.spotify:artist("michael balzary"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-275
U: Play any chanson
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "chanson") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-277
U: Play Leanne Dobinson Right To Dream
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("leanne dobinson")) && id =~ "right to dream") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-278
U: play The Happiest Days Of Our Lives by Tommy Emmanuel
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("tommy emmanuel")) && id =~ "happiest days of our lives") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-279
U: Please play This Is The Day by Brian Robertson .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("this is the day") && contains(artists, null^^com.spotify:artist("brian robertson"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-281
U: Play a new tune by louis silvers .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("louis silvers")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-282
U: Play me a song by Steve Hackett from Manuel
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter album == null^^com.spotify:album("manuel") && contains(artists, null^^com.spotify:artist("steve hackett")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-285
U: play my tribute by Billy Cox
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("billy cox")) && id =~ "my tribute") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-295
U: Play the newest music by Gladys Knight
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("gladys knight")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-296
U: play Hora Din Moldova by Yamazaki Maso
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("yamazaki maso")) && id =~ "hora din moldova") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-299
U: Play me the track Mama Liked The Roses
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "mama liked the roses") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-302
U: Play some music from Roberto Carlos
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("roberto carlos")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-306
U: Play A Chaos Of Desire from Dan Snaith
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("a chaos of desire") && contains(artists, null^^com.spotify:artist("dan snaith"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-307
U: Play music by Country Dick Montana .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("country dick montana")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-320
U: play music by Billy Powell
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("billy powell")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-322
U: Play some fun-punk
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "fun-punk") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-325
U: I want to hear popular music from Martin Lopez
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("martin lopez"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-330
U: Play Lorenzo Palacios Quispe
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("lorenzo palacios quispe")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-335
U: Play some Glenn Miller .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("glenn miller")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-336
U: Can I hear a song by David Hodges?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("david hodges")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-338
U: Play some P. J. Proby
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("p. j. proby")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-340
U: Play The Lamentation Of Cloris
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "lamentation of cloris") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-346
U: Play me a song from Luxury Liner
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter album == null^^com.spotify:album("luxury liner") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-352
U: Please play good music by Will Oldham .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("will oldham")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-354
U: play Vanlose Stairway by Janove Ottesen
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("janove ottesen")) && id =~ "vanlose stairway") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-356
U: Play music from the top 5 from artist Kenia Arias
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("kenia arias")))[1 : 5] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-358
U: Play some bass music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "bass") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-373
U: Play me Gil Parris's A Cup Of Coffee, A Sandwich And You
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("gil parris")) && id =~ "a cup of coffee, a sandwich and you") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-381
U: play some synthpop
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "synthpop") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-386
U: Play some Robbie Merrill .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("robbie merrill")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-390
U: Play new music from Liang Wern Fook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("liang wern fook"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-392
U: play By The Sleepy Lagoon by Greg Kurstin
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("greg kurstin")) && id =~ "by the sleepy lagoon") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-394
U: Play some gangsta music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "gangsta") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-398
U: Play Eve
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("eve")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-400
U: Play some Psychedelic Rock .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "psychedelic rock") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-407
U: Play the red room sessions from chris cunningham
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("red room sessions") && contains(artists, null^^com.spotify:artist("chris cunningham"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-410
U: Play music from Tommy Ridgley .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("tommy ridgley")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-411
U: play All Of Your Toys by Chris Ledoux
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("chris ledoux")) && id =~ "all of your toys") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-412
U: Play music by Fidel Nadal sorted by newest .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("fidel nadal")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-415
U: Play Dave Wyndorf album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("dave wyndorf")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-417
U: Play me something by Funtwo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("funtwo")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-418
U: Play some The Lady Is A Tramp from Timour Moutsouraev
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("timour moutsouraev")) && id =~ "lady is a tramp") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-422
U: Can you play a song by Ken
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("ken")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-425
U: Play Bald by Kaskade .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("kaskade")) && id =~ "bald") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-430
U: Play some Gospel music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "gospel") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-431
U: Play satire
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "satire") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-434
U: Play me some Terror music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "terror") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-438
U: Play some Rumba Africana .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "rumba africana") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-440
U: Play a top five song by Pete Candoli .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("pete candoli")))[1 : 5] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-443
U: Can you play me some Pop-folk music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "pop-folk") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-453
U: play Bra Vibrationer by Dean
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("dean")) && id =~ "bra vibrationer") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-456
U: I want to hear the album Insult To Injury by Narayana Tirtha .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "insult to injury" && contains(artists, null^^com.spotify:artist("narayana tirtha"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-457
U: play latest Shaggy music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("shaggy")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-463
U: Play That Would Be Something by Eden Ahbez
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("eden ahbez")) && id =~ "that would be something") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-464
U: Please play Every Woman In Me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("every woman in me")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-465
U: Play some Ven A Mi
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "ven a mi") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-468
U: play some gotye
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("gotye")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-469
U: play This Is Colour by Panda Bear
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("panda bear")) && id =~ "this is colour") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-470
U: Play songs by Cheryl Wheeler
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("cheryl wheeler")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-472
U: Please play me something by New Wave Of American Heavy Metal
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "new wave of american heavy metal") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-474
U: Play me the best Charles Neidich song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("charles neidich")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-481
U: Play the Ricky Wilson album Spectral Dusk
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "spectral dusk" && contains(artists, null^^com.spotify:artist("ricky wilson"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-482
U: Play Red Barchetta by Blind Lemon Jefferson .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("blind lemon jefferson")) && id =~ "red barchetta") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-483
U: Play the track R U Professional by Roberto Carlos Braga
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("roberto carlos braga")) && id =~ "r u professional") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-488
U: Play The Fool On The Hill by Khwaja Ghulam Farid
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("khwaja ghulam farid")) && id =~ "fool on the hill") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-490
U: Play something by Chris Knight
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("chris knight")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-494
U: Play Chantal Kreviazuk, Sister Ray
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("chantal kreviazuk")) && id =~ "sister ray") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-496
U: play Only Hope by Graham Bonnet
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("graham bonnet")) && id =~ "only hope") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-498
U: Play gothic music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "gothic") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-499
U: I want to hear Song For Adam
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "song for adam") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-505
U: play songs by Sarah Harding
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("sarah harding")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-506
U: Play Maggot Brain by Albano Carrisi
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("albano carrisi")) && id =~ "maggot brain") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-508
U: I want to hear the top Tim Madison
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("tim madison")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-510
U: Play the best songs by Jes Brieden
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("jes brieden")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-511
U: Play me a song by Kevin Cadogan
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("kevin cadogan")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-515
U: Please play a song by Everlast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("everlast")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-517
U: Play music by Paul Mccartney
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("paul mccartney")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-519
U: Play easy listening
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "easy listening") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-523
U: play Lily, Rosemary And The Jack Of Hearts by Chris Goss
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("chris goss")) && id =~ "lily, rosemary and the jack of hearts") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-525
U: Play Brenda Kahn's Rushall Station .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("rushall station") && contains(artists, null^^com.spotify:artist("brenda kahn"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-526
U: play the top five songs by Isaac Hayes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("isaac hayes")))[1 : 5] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-530
U: Play top 20 from frank farian
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("frank farian")))[1 : 20] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-532
U: Play some psychadelic music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "psychadelic") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-533
U: Play some Geir Jenssen .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("geir jenssen")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-540
U: Please play Kabhi Jo Baadal Barse by Ruth Lorenzo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ruth lorenzo")) && id =~ "kabhi jo baadal barse") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-544
U: play a sound track by Tom Thacker
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("tom thacker")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-545
U: Play some Laurie Anderson .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("laurie anderson")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-549
U: Play the track Grow Old With Me by artist Chloe Rose Lattanzi
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("chloe rose lattanzi")) && id =~ "grow old with me") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-551
U: play Kings Of The Wild Frontier by Andrea Bocelli
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("kings of the wild frontier") && contains(artists, null^^com.spotify:artist("andrea bocelli"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-555
U: Play Bob Hilliard top twenty music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("bob hilliard")))[1 : 20] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-559
U: I want to hear Techno-industrial music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "techno-industrial") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-561
U: Play Julie Driscoll
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("julie driscoll")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-564
U: play songs by Sammy Fain
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("sammy fain")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-569
U: play some Alte Kameraden music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "alte kameraden") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-573
U: Play genre opera
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "opera") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-578
U: I want to hear Box Of Rain by Skeets Mcdonald
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("skeets mcdonald")) && id =~ "box of rain") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-579
U: Please play Casino Boogie
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "casino boogie") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-583
U: Play something by Louisiana Blues
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("louisiana blues")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-584
U: Play new Ian Mclagan
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ian mclagan"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-588
U: Play Before I Grew Up To Love You by Wafah Dufour
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("wafah dufour")) && id =~ "before i grew up to love you") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-593
U: Play Fight On, State .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "fight on, state") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-595
U: Play the top five Cemil Bey songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("cemil bey")))[1 : 5] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-597
U: play music by Francis Healy
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("francis healy")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-603
U: Play Rei Momo newest album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.album() filter id =~ "rei momo")[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-608
U: Play Punk Rock music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "punk rock") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-609
U: Play something by Louis Nelson Delisle .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("louis nelson delisle")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-613
U: Play Revival music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "revival") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-615
U: play the song Si No Te Hubiera Conocido by Haidar Salim
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("haidar salim")) && id =~ "si no te hubiera conocido") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-617
U: Open the playlist from Sergei Chatschatrjan
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("sergei chatschatrjan"));
====
# snips-nlu/spotify-619
U: play the Gary Chaw album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("gary chaw")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-620
U: Play me some grunge music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "grunge") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-622
U: Play The Garden Of Allah  from Wade Mainer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("wade mainer")) && id =~ "garden of allah") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-623
U: Play Alles Heeft Ritme by Liu Tianhua .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("liu tianhua")) && id =~ "alles heeft ritme") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-624
U: Play the best Vanessa Peters songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("vanessa peters")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-625
U: Play That Stubborn Kinda Fellow by Michael Amott
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("that stubborn kinda fellow") && contains(artists, null^^com.spotify:artist("michael amott"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-628
U: Play Andy Williams Sings Rodgers And Hammerstein by elica todorova
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("andy williams sings rodgers and hammerstein") && contains(artists, null^^com.spotify:artist("elica todorova"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-629
U: Play Tujiko Noriko's Ten Years And Running .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("ten years and running") && contains(artists, null^^com.spotify:artist("tujiko noriko"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-631
U: Play christian gangsta rap
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "christian gangsta rap") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-641
U: play the most popular Miles Jones track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("miles jones")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-644
U: Play slow rock music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "slow rock") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-647
U: Play the song I Get Ideas as performed by Richard Kruspe
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("richard kruspe")) && id =~ "i get ideas") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-653
U: Play the tune by Adam Yauch
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("adam yauch")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-657
U: Play a popular Gurdas Maan track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("gurdas maan"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-660
U: Play the top 20 music by merz
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("merz")))[1 : 20] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-662
U: Play a Mike Osborne song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("mike osborne")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-665
U: Play Elysium from Ryan Cayabyab
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("elysium") && contains(artists, null^^com.spotify:artist("ryan cayabyab"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-666
U: play Matt Walker tunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("matt walker")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-677
U: play an Masaki Aiba tune
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("masaki aiba")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-678
U: play Morning Song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("morning song")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-681
U: play Hardcore music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "hardcore") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-683
U: play Wait Until Tomorrow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "wait until tomorrow") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-687
U: Play me a bluegrass song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains~(genres, "bluegrass") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-690
U: Play pop
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "pop") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-694
U: Play Michael Angelo Batio
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("michael angelo batio")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-701
U: Play In Every Dream Home A Heartache by vincent paul abbott
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("vincent paul abbott")) && id =~ "in every dream home a heartache") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-704
U: Play the best song by Henry Rollins .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("henry rollins")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-715
U: play the last track by Shavo Odadjian
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("shavo odadjian")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-716
U: Play Brotherhood by Ock Joo-hyun
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("brotherhood") && contains(artists, null^^com.spotify:artist("ock joo-hyun"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-717
U: play latest George Ducas music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("george ducas")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-719
U: play I Could Write A Book
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "i could write a book") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-720
U: listen to acapella
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "acapella") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-726
U: I want to listen to Speed Metal Symphony
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("speed metal symphony")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-734
U: Please play Got The Time
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "got the time") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-746
U: Play some Dave Pearce .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("dave pearce")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-747
U: play track Her Majesty
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "her majesty") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-748
U: I want to hear the newest music from The Railway Children
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("railway children")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-750
U: I want to hear Vegetables by pharrell williams
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("pharrell williams")) && id =~ "vegetables") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-751
U: Play the album Making Evening And Night by Cevin Key
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "making evening and night" && contains(artists, null^^com.spotify:artist("cevin key"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-755
U: Play the Mother Lode by Tamio Okuda
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("mother lode") && contains(artists, null^^com.spotify:artist("tamio okuda"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-759
U: Play me a song by Stephen Jones
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("stephen jones")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-762
U: Play some Game music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "game") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-766
U: play some grunge
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "grunge") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-767
U: Play some Sam Moore .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("sam moore")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-768
U: play Mikazuki Sunset
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "mikazuki sunset") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-771
U: play Peja tunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("peja")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-774
U: Play the track titled Faget
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "faget") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-775
U: Play the top song by Jack Grisham
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("jack grisham")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-776
U: Please play Jag Vill Leva I Europa by porta
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("porta")) && id =~ "jag vill leva i europa") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-781
U: play a song by Fats Waller
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("fats waller")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-784
U: Play some music by Daniel Carter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("daniel carter")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-787
U: Can you play a sonata
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "sonata") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-792
U: Play some dance music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "dance") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-798
U: Play music by Ian Haugland
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ian haugland")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-799
U: Play some Drum & Bass
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "drum & bass") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-803
U: Can you play Crossover?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "crossover") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-806
U: play the album Everybody Happy by Lee Aaron
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "everybody happy" && contains(artists, null^^com.spotify:artist("lee aaron"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-809
U: play the album How Insensitive
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "how insensitive") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-811
U: Play Used To Love Her by Dara .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("dara")) && id =~ "used to love her") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-813
U: play music by Cass Elliot
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("cass elliot")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-815
U: Play On My Own
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "on my own") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-816
U: Play Nick Hexum latest album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.album() filter contains(artists, null^^com.spotify:artist("nick hexum")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-819
U: Play the sound track by Ferry Corsten
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("ferry corsten")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-824
U: play Say A Word by La India
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("la india")) && id =~ "say a word") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-826
U: Play music from Paul Landers
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("paul landers")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-827
U: Play Taiwan Is Good by Kotoko .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("kotoko")) && id =~ "taiwan is good") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-828
U: I'm in the mood to listen to meditative music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "meditative") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-829
U: Play Hughie Graham by Vidyadhar Vyas
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("vidyadhar vyas")) && id =~ "hughie graham") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-834
U: play the track The Wizard And I
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "wizard and i") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-841
U: play Addicted To You by Hank Ballard
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("hank ballard")) && id =~ "addicted to you") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-843
U: Play music by Keren Woodward
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("keren woodward")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-846
U: Play the song Little Robin Redbreast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "little robin redbreast") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-847
U: Play music from the artist Irma Pane
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("irma pane")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-849
U: Play the music of Tupac Shakur
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("tupac shakur")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-852
U: Play the music genre Synthpop
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "synthpop") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-857
U: Play some showtunes music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "showtunes") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-859
U: play There Must Be More To Life Than This
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "there must be more to life than this") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-862
U: Play the new music from Wilko Johnson
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("wilko johnson"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-865
U: Play the album Shooting Silvio by Dave Sabo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "shooting silvio" && contains(artists, null^^com.spotify:artist("dave sabo"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-875
U: Play Seaside by Don Cherry .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("seaside") && contains(artists, null^^com.spotify:artist("don cherry"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-878
U: play top tunes by Joseph Utsler
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("joseph utsler")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-879
U: play southern rock tunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains~(genres, "southern rock") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-883
U: Please play songs by Lil Jon
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("lil jon")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-884
U: play Victoria Banks's album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("victoria banks")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-885
U: play a song by Busta Rhymes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("busta rhymes")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-890
U: I want to hear the top 5 Jamie Lidell songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("jamie lidell")))[1 : 5] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-893
U: play Wolves by Larry Gatlin
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("larry gatlin")) && id =~ "wolves") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-894
U: Play That Stubborn Kinda Fellow by Michael Amott
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("that stubborn kinda fellow") && contains(artists, null^^com.spotify:artist("michael amott"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-895
U: play Long Way To Go by Keita Tachibana
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("keita tachibana")) && id =~ "long way to go") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-897
U: Play album from Maureen Mcgovern
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("maureen mcgovern")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-900
U: Play the newest Phil Stacey .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("phil stacey")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-909
U: Play a song off the Nicht Sprechen album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter album == null^^com.spotify:album("nicht sprechen") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-911
U: play Isaac Yamma Slut
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("slut") && contains(artists, null^^com.spotify:artist("isaac yamma"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-918
U: Play the last Wellman Braud album relaesd
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("wellman braud")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-923
U: Play the latest Joan Baez .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("joan baez")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-924
U: Play the album Qr Iii by bobby bare
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "qr iii" && contains(artists, null^^com.spotify:artist("bobby bare"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-925
U: Play Les Pauvres Riches by Pan Mei Chen .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("les pauvres riches") && contains(artists, null^^com.spotify:artist("pan mei chen"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-928
U: I'd like to hear Cry Baby Cry by Ally Kerr .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ally kerr")) && id =~ "cry baby cry") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-929
U: play a top twenty tune by Noor Jehan
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("noor jehan")))[1 : 20] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-931
U: Do you have something like Impossible Is Nothing by Abderrahmane Abdelli?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("abderrahmane abdelli")) && id =~ "impossible is nothing";
====
# snips-nlu/spotify-934
U: Play some gothic rock .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "gothic rock") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-946
U: Can you play a song off the album, jungle
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter album == null^^com.spotify:album("jungle") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-948
U: play songs by Gamble Rogers
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("gamble rogers")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-950
U: Play a tune by Layne Staley
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("layne staley")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-952
U: Play Tanti Auguri A Te from Bruce Gilbert
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("bruce gilbert")) && id =~ "tanti auguri a te") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-956
U: play the greatest james yorkston song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("james yorkston")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-957
U: I want to hear the Live At Slane Castle album by Haifa Wehbe
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "live at slane castle" && contains(artists, null^^com.spotify:artist("haifa wehbe"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-960
U: play Dick Marx
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("dick marx")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-963
U: Play Anweshaa by the new first.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("anweshaa"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-971
U: Play sugar baby by frank beard
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("frank beard")) && id =~ "sugar baby") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-973
U: Play Divine from Vinnie Roslin
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("vinnie roslin")) && id =~ "divine") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-976
U: play No More Sorrow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "no more sorrow") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-980
U: Play track Cabbage by Keiji Haino
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("keiji haino")) && id =~ "cabbage") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-981
U: Play some music by beverley martyn
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("beverley martyn")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-985
U: Play me some folklore music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "folklore") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-990
U: Play the Busco Un Pueblo album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "busco un pueblo") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-996
U: Play some art punk .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "art punk") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1000
U: Play me the most popular Arthur Johnston song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("arthur johnston")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1002
U: play Tonight Only! by Nastya Kamenskih
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("tonight only!") && contains(artists, null^^com.spotify:artist("nastya kamenskih"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1003
U: Play songs by Naomi Schemer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("naomi schemer")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1007
U: Play music by Don Cherry .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("don cherry")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1009
U: Play the album Killer Instinkt
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "killer instinkt") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1013
U: Play some Maynard James Keenan songs from Scenes From The Big Chair
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter album == null^^com.spotify:album("scenes from the big chair") && contains(artists, null^^com.spotify:artist("maynard james keenan")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1024
U: Play me the greatest Howard Levy song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("howard levy")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1037
U: Play some new age music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "new age") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1038
U: I want to hear any top five music from Gene Autry
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("gene autry")))[1 : 5] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1039
U: play music by Vybz Kartel
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("vybz kartel")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1040
U: Can I hear the latest music from Bahar Kizil?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("bahar kizil")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1042
U: Play Humour
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "humour") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1052
U: Play the top twenty from Alexander Braginsky .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("alexander braginsky")))[1 : 20] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1055
U: Play the top 10 by Sankha Chatterjee .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("sankha chatterjee")))[1 : 10] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1056
U: Play music by Nick La Rocca
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("nick la rocca")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1058
U: Play the track That Would Be Something from Eden Ahbez
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("eden ahbez")) && id =~ "that would be something") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1069
U: play some Folk tunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains~(genres, "folk") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1071
U: Play some music by Mutlu
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("mutlu")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1074
U: Play some happy gabber .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "happy gabber") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1075
U: I want to hear some psychedelic rock
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "psychedelic rock") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1082
U: Play prints in the stone by Helen Baylor
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("prints in the stone") && contains(artists, null^^com.spotify:artist("helen baylor"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1085
U: I want to hear some acid punk music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "acid punk") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1086
U: Play some music from Miss Platnum
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("miss platnum")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1087
U: play Christina Milian latest music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("christina milian")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1094
U: Play Richard Fortus' Live Collection .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("live collection") && contains(artists, null^^com.spotify:artist("richard fortus"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1101
U: play Wanted by Erykah Badu
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("erykah badu")) && id =~ "wanted") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1102
U: Play some Christian Rock
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "christian rock") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1103
U: Play some Retro music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "retro") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1105
U: Play Mea Culpa by Rahim Shah
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("mea culpa") && contains(artists, null^^com.spotify:artist("rahim shah"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1106
U: Play Acid Punk music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "acid punk") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1109
U: Play The Birds And The Bees by Ceca .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ceca")) && id =~ "birds and the bees") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1113
U: Play Rap Album One by Gene Vincent .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("rap album one") && contains(artists, null^^com.spotify:artist("gene vincent"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1115
U: I'd like to hear Don Airey's Gonna Raise Hell
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("don airey")) && id =~ "gonna raise hell") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1116
U: Can you play some music by andrew diamond
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("andrew diamond")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1121
U: play some Kansas Joe Mccoy
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("kansas joe mccoy")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1123
U: Play some folk-rock music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "folk-rock") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1132
U: play Sivamani
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("sivamani")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1133
U: Can you play the greatest sarah brightman song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("sarah brightman")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1136
U: play the song Shine A Light
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "shine a light") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1146
U: play Frankie Laine
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("frankie laine")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1148
U: play the top five songs by Gad Elbaz
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("gad elbaz")))[1 : 5] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1153
U: play Fill Yourself With Music by Ray Manzarek
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("fill yourself with music") && contains(artists, null^^com.spotify:artist("ray manzarek"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1154
U: Play Contigo En La Distancia
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "contigo en la distancia") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1155
U: play some dream music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "dream") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1161
U: Play some chanson music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "chanson") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1163
U: Play the latest music by Martin Luther Mccoy
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("martin luther mccoy")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1169
U: play the top twenty tracks of Ron Jarzombek
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("ron jarzombek")))[1 : 20] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1171
U: Play me a tune by john clayton
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("john clayton")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1174
U: can you play some weird music from the noise genre
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "noise") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1176
U: Play Larry Graham sound track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("larry graham")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1178
U: play Roland Alphonso tunes that are most popular
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("roland alphonso")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1179
U: Play Ramakadha by Karl Davydov please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("karl davydov")) && id =~ "ramakadha") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1181
U: Play a tune by Mc Hawking
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("mc hawking")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1194
U: play Bill Evans album The Best Of The 12 Mixes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "best of the 12 mixes" && contains(artists, null^^com.spotify:artist("bill evans"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1199
U: Play Still Life 1
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("still life 1")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1201
U: Play the album Axum
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "axum") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1202
U: I want to hear the Jody Williams sound track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("jody williams")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1203
U: Play Ik Hou Van Jou by Elena Temnikova
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("elena temnikova")) && id =~ "ik hou van jou") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1206
U: Play some tango .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "tango") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1208
U: play satire music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "satire") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1210
U: Please play a song by Ahmad Jamal
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("ahmad jamal")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1214
U: Play some music by Frayser Boy .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("frayser boy")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1217
U: Please play a song off the Curtis Lee album Rough Diamonds
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter album == null^^com.spotify:album("rough diamonds") && contains(artists, null^^com.spotify:artist("curtis lee")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1220
U: Play Elastic Love by Junior Marvin
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("junior marvin")) && id =~ "elastic love") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1222
U: Play These Four Walls by Yummy Bingham .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("these four walls") && contains(artists, null^^com.spotify:artist("yummy bingham"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1225
U: Can I listen to Dj Vibe's top 10?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("dj vibe")))[1 : 10] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1227
U: Lets hear some booty bass
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "booty bass") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1235
U: Play some House music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "house") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1237
U: Play me some Goa
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "goa") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1246
U: play Joshua Homme Belle And Sebastian Write About Love
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("belle and sebastian write about love") && contains(artists, null^^com.spotify:artist("joshua homme"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1248
U: Can you play a song off an album by Shirley Horn
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("shirley horn")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1253
U: Play me a popular song by Koichi Domoto
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("koichi domoto"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1254
U: Play Saturday Nights & Sunday Mornings
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("saturday nights & sunday mornings")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1255
U: Play the album Have Another Ball
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "have another ball") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1260
U: play Neutrons  by Seun Kuti
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("neutrons") && contains(artists, null^^com.spotify:artist("seun kuti"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1262
U: Play the album Will Rap Over Hard Rock For Food
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "will rap over hard rock for food") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1263
U: Play Donna Summer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("donna summer")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1270
U: Play music by Raheem Devaughn .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("raheem devaughn")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1277
U: Play the top caleigh peters .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("caleigh peters")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1278
U: Play new Teo Macero
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("teo macero"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1285
U: I want to listen to Merrily We Roll Along by Marko Desantis .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("marko desantis")) && id =~ "merrily we roll along") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1288
U: Play any song from Rebecca Hewitt
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("rebecca hewitt")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1289
U: Play the Mister Music Man by Gene De Paul .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("gene de paul")) && id =~ "mister music man") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1290
U: Let me hear the top album by the artist, Skin .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.album() filter contains(artists, null^^com.spotify:artist("skin")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1291
U: Play Harel Skaat
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("harel skaat")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1295
U: play the track Asleep In The Deep
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "asleep in the deep") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1302
U: Play teri meri by Josh White
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("josh white")) && id =~ "teri meri") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1309
U: play Isham Jones
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("isham jones")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1310
U: Can you play me some britpop music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "britpop") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1319
U: Play top 50 Peter Frampton songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("peter frampton")))[1 : 50] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1323
U: play Tom Baxter tracks
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("tom baxter")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1333
U: Play music by Daddy Yankee
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("daddy yankee")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1335
U: Play me track September, Gouden Roos by artist daedelus
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("daedelus")) && id =~ "september, gouden roos") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1339
U: Please anything good by Chieko Ochi
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("chieko ochi"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1341
U: Play Apbl98 by Alden Penner .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("apbl98") && contains(artists, null^^com.spotify:artist("alden penner"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1345
U: Play Verjamem track by Hong Junyang .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("hong junyang")) && id =~ "verjamem") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1346
U: Play music by Otis Redding .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("otis redding")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1351
U: Play me a song by Saki Nakajima
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("saki nakajima")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1353
U: Play a top track by Janamanchi Seshadri Sarma
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("janamanchi seshadri sarma")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1355
U: Play music by Sha Money Xl sort by good .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("sha money xl"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1357
U: Play Someday Soon by fiona
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("fiona")) && id =~ "someday soon") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1361
U: Play a top twenty sort by Akinyele .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("akinyele")))[1 : 20] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1368
U: Play Rob Mills album The Golden Archipelago .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "golden archipelago" && contains(artists, null^^com.spotify:artist("rob mills"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1375
U: play Glenn Yarbrough tunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("glenn yarbrough")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1377
U: Play me a tune by Mick Brown
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("mick brown")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1378
U: play The Insoc Ep
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("insoc ep")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1380
U: I need to hear the new Kevin Fowler album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("kevin fowler")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1383
U: Play Stefon Harris's song .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("stefon harris")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1386
U: Play Step Up Your Game by Marc Cohn .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("step up your game") && contains(artists, null^^com.spotify:artist("marc cohn"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1390
U: Play the top five songs from Robert Lockwood Junior .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("robert lockwood junior")))[1 : 5] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1391
U: Play some latin music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "latin") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1393
U: Play me Hier Encore by greydon square
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("greydon square")) && id =~ "hier encore") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1396
U: Play Dj Shadow's A Love Hate Masquerade .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("a love hate masquerade") && contains(artists, null^^com.spotify:artist("dj shadow"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1397
U: play Seven Steps To Heaven by Wikluh Sky
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("wikluh sky")) && id =~ "seven steps to heaven") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1398
U: Play some music from Victor Kunonga .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("victor kunonga")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1401
U: Play March Of The Soviet Tankmen from Gloria Gaither
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("gloria gaither")) && id =~ "march of the soviet tankmen") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1402
U: Play music from the album Evolution Of A Man by Joey Ramone
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "evolution of a man" && contains(artists, null^^com.spotify:artist("joey ramone"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1407
U: Play some Joeri Basjmet .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("joeri basjmet")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1408
U: Play Elliot Easton's album Beautiful
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "beautiful" && contains(artists, null^^com.spotify:artist("elliot easton"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1416
U: Play How Does It Work by Helen Carter .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("how does it work") && contains(artists, null^^com.spotify:artist("helen carter"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1418
U: I want to hear something from Post-punk Revival
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "post-punk revival") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1419
U: Play music from the artist Joe Sample
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("joe sample")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1420
U: Play Dave Joyal
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("dave joyal")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1422
U: I want to hear something from the top fifty by Jose Pasillas
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("jose pasillas")))[1 : 50] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1426
U: play primus
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "primus") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1433
U: play Realization by Randy Jackson
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("realization") && contains(artists, null^^com.spotify:artist("randy jackson"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1434
U: Please play some Bill Evans music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("bill evans")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1436
U: Can you play the greatest songs by Mauro Picotto
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("mauro picotto")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1437
U: Play music by Deenanath Mangeshkar
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("deenanath mangeshkar")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1439
U: Play track Real Talk
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "real talk") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1443
U: listen to Vertexguy track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("vertexguy")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1444
U: Play the most popular stuff by Tina Dico
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("tina dico")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1450
U: Can you play some music from my road trip album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1453
U: Play Oj, Jelena, Jelena, Jabuka Zelena by Ler Lalonde .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ler lalonde")) && id =~ "oj, jelena, jelena, jabuka zelena") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1458
U: Play Pledge by Markus Grosskopf
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("pledge") && contains(artists, null^^com.spotify:artist("markus grosskopf"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1463
U: Play some James Cleveland .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("james cleveland")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1465
U: play the album Wayning Moments by Rabbit Brown
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "wayning moments" && contains(artists, null^^com.spotify:artist("rabbit brown"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1473
U: play some Mike Porcaro
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("mike porcaro")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1476
U: Play music from Hide
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("hide")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1480
U: Play me a track by Steve Souza
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("steve souza")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1483
U: Play me a song by Hank Thompson from Moa Anbessa
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter album == null^^com.spotify:album("moa anbessa") && contains(artists, null^^com.spotify:artist("hank thompson")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1485
U: Play Me Against The World from Glukoza
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("me against the world") && contains(artists, null^^com.spotify:artist("glukoza"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1491
U: play Innovations by Kokia
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("innovations") && contains(artists, null^^com.spotify:artist("kokia"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1493
U: play Fernando Olvera
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("fernando olvera")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1494
U: Can you play something off Johan Larsson's Travelers And Thieves
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("travelers and thieves") && contains(artists, null^^com.spotify:artist("johan larsson"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1495
U: list to the most popular Muireann Nic Amhlaoibh song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("muireann nic amhlaoibh")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1500
U: Play the song Long Live Love
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "long live love") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1502
U: Play the top of emil de cou
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("emil de cou")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1509
U: Play instrumental pop
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "instrumental pop") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1510
U: Play some Hong Junyang .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("hong junyang")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1511
U: Play mere lapsed by Marilyn Moore .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("marilyn moore")) && id =~ "mere lapsed") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1517
U: play music by Rodney Whitaker
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("rodney whitaker")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1519
U: play the latest Thelma Aoyama
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("thelma aoyama")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1520
U: Play some music by Karl Blau .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("karl blau")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1530
U: Play Songs Of Heaven by ami koshimizu
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("songs of heaven") && contains(artists, null^^com.spotify:artist("ami koshimizu"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1541
U: Play music by artist mark ashley
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("mark ashley")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1542
U: Play the top Maynard James Keenan .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("maynard james keenan")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1544
U: Play the most popular song by espen lind
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("espen lind")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1545
U: Play Yuauea by Rick Ross
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("yuauea") && contains(artists, null^^com.spotify:artist("rick ross"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1546
U: Play The Tyranny Of Distance by Willy Mason .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("tyranny of distance") && contains(artists, null^^com.spotify:artist("willy mason"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1551
U: Play Chad I Ginsburg
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("chad i ginsburg")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1557
U: Play the song Drifting On A Reed by Bobby G
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("bobby g")) && id =~ "drifting on a reed") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1565
U: play To Be Still
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("to be still")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1568
U: play the It Could Only Happen With You album by Lawrence
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "it could only happen with you" && contains(artists, null^^com.spotify:artist("lawrence"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1569
U: Play Moondog's Chupacabra .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("chupacabra") && contains(artists, null^^com.spotify:artist("moondog"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1570
U: I'd like to hear some trip-hop
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "trip-hop") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1576
U: play a sound track by Vegard Sverre Tveitan
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("vegard sverre tveitan")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1578
U: I want to hear the album Suites & Sweets
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "suites & sweets") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1580
U: Open The Second Adventure album by Hans Nilsson
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "second adventure" && contains(artists, null^^com.spotify:artist("hans nilsson")));
====
# snips-nlu/spotify-1582
U: I want to hear This Is The Night from Proof
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("proof")) && id =~ "this is the night") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1584
U: Play me a song by Michael Diamond
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("michael diamond")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1588
U: Play Dawn Richard song White Summer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("dawn richard")) && id =~ "white summer") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1592
U: play newest Robert Palmer sound track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("robert palmer")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1595
U: Play some Dj Qbert .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("dj qbert")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1596
U: Play Supernaut by Armand Van Helden
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("armand van helden")) && id =~ "supernaut") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1599
U: Play got to be free by Madeleine Peyroux
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("madeleine peyroux")) && id =~ "got to be free") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1600
U: Play music in the genre soundtrack
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains~(genres, "soundtrack") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1602
U: Play music from Carina Round
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("carina round")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1604
U: Play a song off The Best Of Siouxsie & The Banshees by Faustino Oramas
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter album == null^^com.spotify:album("best of siouxsie & the banshees") && contains(artists, null^^com.spotify:artist("faustino oramas")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1605
U: Play the album, Dance Hall At Louse Point .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "dance hall at louse point") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1606
U: play Lighter by Pamela Jintana Racine
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("pamela jintana racine")) && id =~ "lighter") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1612
U: I'd like to hear Helen Baylor
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("helen baylor")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1614
U: Play Kool Keith Presents Thee Undatakerz by John Mccrea .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("kool keith presents thee undatakerz") && contains(artists, null^^com.spotify:artist("john mccrea"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1629
U: Play Burhøns by Ernie C .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("burhøns") && contains(artists, null^^com.spotify:artist("ernie c"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1636
U: I want to listen to some Aaliyah
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("aaliyah")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1641
U: Play drum & bass music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "drum & bass") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1652
U: I want to hear some The Roches
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("roches")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1656
U: play Soheila Zaland
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("soheila zaland")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1662
U: I need some ambient music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "ambient");
====
# snips-nlu/spotify-1663
U: Play a song by Nash The Slash
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("nash the slash")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1666
U: play the best Elizaveta Khripounova
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("elizaveta khripounova")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1669
U: Play Crazy=genius by The Alchemist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("alchemist")) && id =~ "crazy=genius") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1670
U: Can I listen to merengue style music?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "merengue") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1675
U: Play Soldier Boy from Melody Gardot
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("melody gardot")) && id =~ "soldier boy") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1677
U: Please play Bitch Please Ii
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "bitch please ii") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1678
U: Could you play the album B Men Gahō by Nathaniel Shilkret
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "b men gahō" && contains(artists, null^^com.spotify:artist("nathaniel shilkret"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1680
U: play robin hood and the bishop of hereford by Jon Mayer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("jon mayer")) && id =~ "robin hood and the bishop of hereford") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1686
U: Play the song American Patrol by lauryn hill
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("lauryn hill")) && id =~ "american patrol") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1688
U: Play Junun by Noam Kaniel .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("junun") && contains(artists, null^^com.spotify:artist("noam kaniel"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1689
U: Please play anything by george formby jr
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("george formby jr")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1698
U: Play El Cant Dels Ocells by vini lopez .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("vini lopez")) && id =~ "el cant dels ocells") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1706
U: Play the album Remember Shakti – The Believer .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "remember shakti – the believer") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1712
U: Play any track by Flame
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("flame")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1720
U: Play Lenny Kaye music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("lenny kaye")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1721
U: play Ngola Ritmos top-ten songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("ngola ritmos")))[1 : 10] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1725
U: Play the album Cara De Dios .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "cara de dios") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1727
U: Play Adieu by Al Arsenault
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("al arsenault")) && id =~ "adieu") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1728
U: Play Expresión from Mickey Finn
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("expresión") && contains(artists, null^^com.spotify:artist("mickey finn"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1729
U: play music by Bonobo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("bonobo")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1734
U: Can you play Halloween by Ajinoam Nini
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ajinoam nini")) && id =~ "halloween") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1736
U: play Angelo Amorevoli
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("angelo amorevoli")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1740
U: Play artist Vlada Divljan from something he did that is good
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("vlada divljan")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1741
U: Play the track Pocahontas John Farnham
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("john farnham")) && id =~ "pocahontas") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1742
U: play some popular bryan gregory songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("bryan gregory")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1747
U: Play some Techno
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "techno") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1749
U: play Fereydoun Farrokhzad best track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("fereydoun farrokhzad")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1750
U: Can I listen to music from the Easy Listening genre?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "easy listening") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1752
U: play the top 20 Rita Macneil songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("rita macneil")))[1 : 20] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1755
U: Play a sound track by Mac Dre .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("mac dre")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1759
U: Play the best music from Klaus Badelt .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("klaus badelt")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1766
U: I'd like to hear the last song fro Willa Ford .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("willa ford")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1771
U: play Techno music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "techno") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1772
U: play shara worden
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("shara worden")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1790
U: play a Keith Richards album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("keith richards")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1791
U: Play the track Fight On, State by Yuvan Shankar Raja
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("yuvan shankar raja")) && id =~ "fight on, state") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1794
U: Play Moris Tepper
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("moris tepper")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1797
U: Play Entre Raices Y Antenas by Lynn & Wade Llp .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("entre raices y antenas") && contains(artists, null^^com.spotify:artist("lynn & wade llp"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1798
U: Play some acapella music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "acapella") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1799
U: Play a Paolo Gregoletto song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("paolo gregoletto")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1806
U: Play Who Knows Where The Time Goes? by Grigory Leps
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("grigory leps")) && id =~ "who knows where the time goes?") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1812
U: Play Elitsa Todorova music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("elitsa todorova")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1815
U: Please play some Black Metal music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "black metal") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1822
U: I want to hear Aki Nawaz, play the song fair annie .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("aki nawaz")) && id =~ "fair annie") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1826
U: Play some chanson style music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "chanson") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1830
U: Play a track by Titiyo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("titiyo")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1833
U: Play Is This My World? by Leo Arnaud
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("is this my world") && contains(artists, null^^com.spotify:artist("leo arnaud"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1834
U: Play While The Gate Is Open .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("while the gate is open")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1836
U: Play some Rui Da Silva .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("rui da silva")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1837
U: Play The Cherry-tree Carol by Edwin Mccain
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("edwin mccain")) && id =~ "cherry-tree carol") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1838
U: Play Tomtegubben Som Hade Snuva
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "tomtegubben som hade snuva") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1840
U: Play the song domino by Luca Turilli
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("luca turilli")) && id =~ "domino") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1842
U: play the newest Martin Solveig sound track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("martin solveig")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1845
U: play Mohammed Abdu from top 20
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("mohammed abdu")))[1 : 20] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1846
U: Play the top ten by Andrea Del Rosario .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("andrea del rosario")))[1 : 10] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1854
U: Play rie fu music sorted by the best .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("rie fu"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1860
U: play steve harris False Gestures For A Devious Public album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "false gestures for a devious public" && contains(artists, null^^com.spotify:artist("steve harris"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1862
U: I want to hear a good album from Toni Cottura .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("toni cottura")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1870
U: I need some Hardcore Hip Hop
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "hardcore hip hop");
====
# snips-nlu/spotify-1874
U: play Dj Ozma top songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("dj ozma")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1875
U: PLay a track by deeyah khan .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("deeyah khan")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1881
U: Let me hear the Rave Tapes album from Yuki Koyanagi .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "rave tapes" && contains(artists, null^^com.spotify:artist("yuki koyanagi"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1884
U: Play the song Two Suns In The Sunset by Airi Suzuki
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("airi suzuki")) && id =~ "two suns in the sunset") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1886
U: Play the greatest music by Phoebe Snow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("phoebe snow")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1896
U: Play music off the track Child Maurice
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "child maurice") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1897
U: Play me a song from Voices & Images
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter album == null^^com.spotify:album("voices & images") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1901
U: I'd like to hear a track by Theo Keating .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("theo keating")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1910
U: play ambient music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "ambient") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1911
U: Play the last song by Goldie
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("goldie")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1912
U: Play Pride Of The Prairie from Johnny Burke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("johnny burke")) && id =~ "pride of the prairie") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1914
U: Play the song Le Renouveau
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "le renouveau") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1916
U: play the latest Thelma Aoyama
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("thelma aoyama")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1922
U: I would like to hear a song by Tim Reynolds
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("tim reynolds")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1928
U: Play me Benjamin Kowalewicz's top hits
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("benjamin kowalewicz")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1930
U: Play some music by Mark Heard .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("mark heard")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1931
U: Play Inventions For The New Season
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("inventions for the new season")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1932
U: I want to hear some freestyle music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "freestyle") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1934
U: Play sweet shanghai devil by Teddy Diaz .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("sweet shanghai devil") && contains(artists, null^^com.spotify:artist("teddy diaz"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1937
U: Play music from negerpunk
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "negerpunk") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1938
U: play music by Odd Nosdam
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("odd nosdam")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1939
U: Play music by Susumu Hirasawa .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("susumu hirasawa")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1945
U: I want to hear music from the Lotus Flower album by Andy Mccoy
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "lotus flower" && contains(artists, null^^com.spotify:artist("andy mccoy"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1947
U: Play the song Jingle Bells
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "jingle bells") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1948
U: Please play me some Satire music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "satire") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1950
U: Let me listen to The Music Of Nature album by Paul Draper .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "music of nature" && contains(artists, null^^com.spotify:artist("paul draper"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1957
U: Play the music of Aphex Twin's good Album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.album() filter contains(artists, null^^com.spotify:artist("aphex twin"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1967
U: Play the last Jonny Wickersham song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("jonny wickersham")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1971
U: Play Hættuleg Hljómsveit & Glæpakvendið Stella by Kaori Iida
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("hættuleg hljómsveit & glæpakvendið stella") && contains(artists, null^^com.spotify:artist("kaori iida"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1973
U: Play the track Goodbye Alexander, Goodbye Honey Boy from Ehsaan Noorani
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("ehsaan noorani")) && id =~ "goodbye alexander, goodbye honey boy") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1976
U: I want to hear secrets on parade from Tommy Walter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("secrets on parade") && contains(artists, null^^com.spotify:artist("tommy walter"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1979
U: play music by Christian Bautista
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("christian bautista")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1984
U: Let me hear the Live From The Ghetto album by Beau Jocque .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "live from the ghetto" && contains(artists, null^^com.spotify:artist("beau jocque"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1985
U: Play Turbulence Wild Streetdanz from Jeff Buckley
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("turbulence wild streetdanz") && contains(artists, null^^com.spotify:artist("jeff buckley"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1987
U: Play the greatest Ricky Bell music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ricky bell")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1989
U: Play music by Sarah Connor
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("sarah connor")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1991
U: Play music from Alison Sudol
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("alison sudol")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1992
U: Play Odessa by Maartin Allcock .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("maartin allcock")) && id =~ "odessa") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1995
U: Play the most popular track from Valery Alexandrovich Kipelov
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("valery alexandrovich kipelov")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1999
U: play Roy Orbison tunes now
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("roy orbison")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2003
U: is there something new you can play by Lola Monroe
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("lola monroe")));
====
# snips-nlu/spotify-2004
U: I want to hear something from Post-punk Revival
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "post-punk revival") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2007
U: Play the top music from Epic Mazur .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("epic mazur")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2011
U: Let's listen to Matthew Shipp .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("matthew shipp")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2013
U: put on a Serge Robert track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("serge robert")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2014
U: Play some Hridaynath Mangeshkar
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("hridaynath mangeshkar")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2023
U: Let me hear Wintley Phipps top fifty album .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.album() filter contains(artists, null^^com.spotify:artist("wintley phipps")))[1 : 50] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2025
U: play me some Dom Pachino
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("dom pachino")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2030
U: Put The Silent Enigma album by Yoko Kanno
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "silent enigma" && contains(artists, null^^com.spotify:artist("yoko kanno"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2031
U: Please play Every Woman In Me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("every woman in me")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2034
U: play In The Disco by Danny Hutton
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("danny hutton")) && id =~ "in the disco") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2035
U: Play some lyn paul
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("lyn paul")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2036
U: Play Ocean Beach from paul delay .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("ocean beach") && contains(artists, null^^com.spotify:artist("paul delay"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2038
U: I would like to hear The Worst Is Yet To Come .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "worst is yet to come") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2045
U: Play some klezmer fiddle
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "klezmer fiddle") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2046
U: Play the Broom Of The Cowdenknowes .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "broom of the cowdenknowes") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2048
U: Can you play some decent work by Timour Moutsouraev?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("timour moutsouraev")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2050
U: most popular song of taco ockerse
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("taco ockerse")))[1];
====
# snips-nlu/spotify-2051
U: Play Tennessee Saturday Night by Mr. Porter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("mr. porter")) && id =~ "tennessee saturday night") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2055
U: I want to hear the last album from Frank Iero
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.album() filter contains(artists, null^^com.spotify:artist("frank iero")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2059
U: Can you play some music by Abatte Barihun?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("abatte barihun")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2060
U: I want to hear Shooby Taylor's Tearing Up The Album Charts .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("tearing up the album charts") && contains(artists, null^^com.spotify:artist("shooby taylor"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2062
U: play something new by tansen
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("tansen"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2066
U: Play some Grand Puba .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("grand puba")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2067
U: Play the top fifty by Kate Bush .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("kate bush")))[1 : 50] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2068
U: Play the Stephen Stills album Verge
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "verge" && contains(artists, null^^com.spotify:artist("stephen stills"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2069
U: I need some Hardcore Hip Hop
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "hardcore hip hop") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2071
U: Play Gaston by Daniel De Los Reyes .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("daniel de los reyes")) && id =~ "gaston") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2072
U: Play Man Like Me by heather b.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("man like me") && contains(artists, null^^com.spotify:artist("heather b."))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2074
U: please, a sound track of Jyotsna Radhakrishnan
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("jyotsna radhakrishnan"));
====
# snips-nlu/spotify-2075
U: Play some Darkcore .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "darkcore") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2076
U: i want to listen to Say It Again by Blackstratblues
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("blackstratblues")) && id =~ "say it again") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2079
U: I want to hear music from the top fifty by Yasuhiko Fukuda
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("yasuhiko fukuda")))[1 : 50] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2082
U: I'd like to listen to mark rae
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("mark rae")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2085
U: I wanna listen to Electroclash
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "electroclash") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2089
U: Play the Vic Damone album named Tuonela
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "tuonela" && contains(artists, null^^com.spotify:artist("vic damone"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2096
U: Can you play the Star Tales album by Colleen?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "star tales" && contains(artists, null^^com.spotify:artist("colleen"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2097
U: Play some G. V. Prakash Kumar
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("g. v. prakash kumar")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2107
U: can i lesten to the latest album of T-bone Burnett
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.album() filter contains(artists, null^^com.spotify:artist("t-bone burnett")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2109
U: Play some good music from Jamelia .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("jamelia")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2110
U: Play Alabama Concerto by Kou Shibasaki .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("alabama concerto") && contains(artists, null^^com.spotify:artist("kou shibasaki"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2114
U: Let's listen to the best from Jeff Loomis .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("jeff loomis")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2119
U: I want to hear Nellie Mckay's new music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("nellie mckay"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2120
U: Play Moris Tepper
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("moris tepper")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2124
U: Play Maria Severa Onofriana and sort by most popular .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("maria severa onofriana"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2127
U: Play Too Much Rain by the artist D-loc .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("d-loc")) && id =~ "too much rain") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2129
U: play This Is Colour by Panda Bear
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("panda bear")) && id =~ "this is colour") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2132
U: Play rock like war from Mohammad Reza Lotfi please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("mohammad reza lotfi")) && id =~ "rock like war") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2135
U: Play Ashita E by Ian Anderson
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ian anderson")) && id =~ "ashita e") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2139
U: Play the top 5 track from Boris Liatochinski .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("boris liatochinski")))[1 : 5] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2145
U: Play some fun-punk
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "fun-punk") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2148
U: Play Tom Thacker through a top sort.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("tom thacker"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2150
U: I want to hear from Pepe Marchena song Delaware
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("pepe marchena")) && id =~ "delaware") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2151
U: Play Monts Et Merveilles .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "monts et merveilles") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2155
U: Play some Jerry Dixon
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("jerry dixon")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2157
U: Please play the genre Rock Strumentale .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "rock strumentale") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2161
U: Play some pop music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "pop") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2162
U: Play the greatest hits by Inoj .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("inoj")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2167
U: I wish to listen to Gonna Get Along Without Ya Now by Ian Curtis .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ian curtis")) && id =~ "gonna get along without ya now") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2170
U: Please play With Echoes In The Movement Of Stone by Faith Evans .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("with echoes in the movement of stone") && contains(artists, null^^com.spotify:artist("faith evans"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2173
U: Play Gary Jules's latest music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("gary jules")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2174
U: Let's hear something from Elena Risteska
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("elena risteska")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2177
U: Could you play the album B Men Gahō by Nathaniel Shilkret
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "b men gahō" && contains(artists, null^^com.spotify:artist("nathaniel shilkret"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2178
U: I want to hear music from the Lotus Flower album by Andy Mccoy
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "lotus flower" && contains(artists, null^^com.spotify:artist("andy mccoy"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2181
U: Play some pambiche please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "pambiche") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2183
U: I want to listen to Foreign Affair .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "foreign affair") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2191
U: play Facedown by Maximum Bob
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("facedown") && contains(artists, null^^com.spotify:artist("maximum bob"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2193
U: Play Bad Boy Bill
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("bad boy bill")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2195
U: Play the latest Bobby Darin .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("bobby darin")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2197
U: Play the track Fight On, State by Yuvan Shankar Raja
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("yuvan shankar raja")) && id =~ "fight on, state") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2203
U: I want to hear the album Live In Munich by Laura Love .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "live in munich" && contains(artists, null^^com.spotify:artist("laura love"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2205
U: Play the sound track from Raymond Murray Schafer please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("raymond murray schafer")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2210
U: Play the man who sold the world from Steve Swell
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("man who sold the world") && contains(artists, null^^com.spotify:artist("steve swell"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2211
U: Play biguine music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "biguine") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2212
U: Play the latest Peter Green .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("peter green")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2214
U: Play something from the genre muzyka pop
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "muzyka pop") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2216
U: I want to hear music from the genre Ecossaise
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "ecossaise") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2218
U: I want to hear Aki Nawaz, play the song fair annie .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter contains(artists, null^^com.spotify:artist("aki nawaz")) && id =~ "fair annie") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2221
U: Please play below the lion rock by stereo mike
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("stereo mike")) && id =~ "below the lion rock") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2223
U: Play the album entitled Se Potrei Avere Te .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "se potrei avere te") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2224
U: give me some Last Emperor
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("last emperor")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2225
U: Play some art punk .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "art punk") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2228
U: Play Donny Tourette's Push The Button
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("donny tourette")) && id =~ "push the button") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2229
U: I want to listen to an album from Sibel .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("sibel")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2231
U: Play addicts: black meddle, part ii .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("addicts: black meddle, part ii")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2232
U: Play the best music from Klaus Badelt .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("klaus badelt")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2235
U: Play a Nóta song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains~(genres, "nóta") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2236
U: play on the good ship lollipop by Anthony Hamilton
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("anthony hamilton")) && id =~ "on the good ship lollipop") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2245
U: I want to hear the last album from Carsten Bohn
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.album() filter contains(artists, null^^com.spotify:artist("carsten bohn")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2251
U: play the last Niney The Observer song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("niney the observer")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2253
U: Play One Way Ticket by Ray Kennedy .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ray kennedy")) && id =~ "one way ticket") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2258
U: Please play the last track from abbath
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("abbath")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2261
U: Play music by larry mullen jr.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("larry mullen jr.")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2265
U: Play some Rumba Africana .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "rumba africana") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2268
U: last song by Latifa
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("latifa")))[1];
====
# snips-nlu/spotify-2275
U: I want to listen to the track Close To The Edge
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "close to the edge") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2276
U: I want to listen to some Aaliyah
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("aaliyah")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2277
U: I want to listen to Merrily We Roll Along by Marko Desantis .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("marko desantis")) && id =~ "merrily we roll along") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2278
U: Play the newest Roger Troutman track possible
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("roger troutman")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2279
U: Play some P. J. Proby
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("p. j. proby")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2280
U: Play some diva house .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "diva house") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2281
U: I want to hear the album Picchio Dal Pozzo from Con Hunley
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.album() filter id =~ "picchio dal pozzo" && contains(artists, null^^com.spotify:artist("con hunley"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2282
U: play almost independence day by Vitas
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("vitas")) && id =~ "almost independence day") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2283
U: Play the song from the genre Sunshine Reggae that appeals to me.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains~(genres, "sunshine reggae") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2286
U: Play the track Coma
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "coma") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2287
U: I wish to listen to Roni Duani 's music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("roni duani")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2292
U: Play a sound track from Gregory Douglass .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("gregory douglass")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2295
U: Plaly The Ladybug Transistor by Loreena Mckennitt .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("ladybug transistor") && contains(artists, null^^com.spotify:artist("loreena mckennitt"))) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2296
U: Play the latest music from Mark Knopfler .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("mark knopfler")))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2298
U: Play Tyrants And Wraiths
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ ("tyrants and wraiths")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2299
U: Play Before I Grew Up To Love You by Wafah Dufour
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("wafah dufour")) && id =~ "before i grew up to love you") => @com.spotify.play(playable=id);
====
# schemaorg/16
U: Who sings Closing Time?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.playable()) filter id =~ "closing time") => notify;
====
# schemaorg/110
U: What band sang the song Dancing Queen?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.song()) filter id =~ "dancing queen") => notify;
====
# schemaorg/121
U: Will you play Power in Numbers by Jurrasic 5?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable(), (contains(artists, null^^com.spotify:artist("jurrasic 5")) && id =~ "power in numbers")) => @com.spotify.play(playable=id);
====
# schemaorg/146
U: Find Hunky Dory by David Bowie
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.playable()), (contains(artists, null^^com.spotify:artist("david bowie")) && id =~ "hunky dory") => notify;
====
# schemaorg/148
U: Find Hey Jude by The Beatles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.playable()), (contains(artists, null^^com.spotify:artist("beatles")) && id =~ "hey jude") => notify;
====
# schemaorg/194
U: What is the name of a song that Johnny Cash performs?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song()), contains(artists, null^^com.spotify:artist("johnny cash")) => notify;
====
# schemaorg/196
U: What artist sings the song Never going back again?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.song()) filter id =~ "never going back again") => notify;
====
# schemaorg/198
U: Who sings Carolina in My Mind?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.playable()) filter id =~ "carolina in my mind") => notify;
====
# schemaorg/20
U: Find me Let's Dance by David Bowie
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.playable()), (contains(artists, null^^com.spotify:artist("david bowie")) && id =~ "let 's dance") => notify;
====
# schemaorg/21
U: Find me Freedom by George Michael
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.playable()), (contains(artists, null^^com.spotify:artist("george michael")) && id =~ "freedom") => notify;
====
# schemaorg/27
U: Find me Alanis Morrisette's first LP
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date asc of @com.spotify.album() filter contains(artists, null^^com.spotify:artist("alanis morrisette")))[1];
====
# schemaorg/216
U: Who is the original singer of Impossible?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.playable()) filter id =~ "impossible") => notify;
====
# schemaorg/220
U: Find the song titled I Want it That Way' by the Backstreet Boys.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song()), (contains(artists, null^^com.spotify:artist("backstreet boys")) && id =~ "i want it that way") => notify;
====
# schemaorg/221
U: Find all songs by Micheal Jackson.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song()), contains(artists, null^^com.spotify:artist("micheal jackson")) => notify;
====
# schemaorg/222
U: Search for all songs with the word dance in the title.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song()) filter id =~ "dance" => notify;
====
# schemaorg/226
U: Can you find all songs containing the word Mother?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song()) filter id =~ "mother" => notify;
====
# schemaorg/229
U: How many total tracks are available from the band Rush?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => aggregate count of ((@com.spotify.song()), contains(artists, null^^com.spotify:artist("rush"))) => notify;
====
# schemaorg/259
U: Who sang the song Barracuda?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.song()) filter id =~ "barracuda") => notify;
====
# schemaorg/265
U: Pleases search for Wonderwall by Oasis.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.playable()), (contains(artists, null^^com.spotify:artist("oasis")) && id =~ "wonderwall") => notify;
====
# schemaorg/283
U: Find the Beatles song Hey Jude.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song()), (contains(artists, null^^com.spotify:artist("beatles")) && id =~ "hey jude") => notify;
====
# schemaorg/285
U: Who sings the song called, Have you ever seen the rain?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.song()) filter id =~ "you ever seen the rain") => notify;
====
# schemaorg/288
U: Who sings the song called Long Cool Woman?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.song()) filter id =~ "long cool woman") => notify;
====
# schemaorg/291
U: Who sang Neon Lights?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.playable()) filter id =~ "neon lights") => notify;
====
# schemaorg/2100
U: Which artist sang stairway to heaven
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.playable()) filter id =~ "stairway to heaven") => notify;
====
# schemaorg/2104
U: Who came out with Bohemian Rhapsody
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.playable()) filter id =~ "bohemian rhapsody") => notify;
====
# schemaorg/2120
U: Who sang Girls Just Want to Have Fun?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.playable()) filter id =~ "girls just want to have fun") => notify;
====
# schemaorg/2133
U: Who performed the song Rock Lobster?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.song()) filter id =~ "rock lobster") => notify;
====
# schemaorg/2140
U: Who sings the song Black Magic Woman?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.song()) filter id =~ "black magic woman") => notify;
====
# schemaorg/2142
U: What artist sang the song Rooster?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => [artists] of ((@com.spotify.song()) filter id =~ "rooster") => notify;
====
# online/61768664
U: resume playing
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_play();
====
# online/62109745
U: skip to the next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_next();
====
# online/62109746
U: go to the next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_next();
====
# log/5962
U: play the song "str:QUOTED_STRING::0:" on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "str:QUOTED_STRING::0:") => @com.spotify.play(playable=id);
====
# log/48169
U: play my spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log/18991
U: play something in spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log/65880
U: play run the jewels
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist("run the jewels"))) => @com.spotify.play(playable=id);
====
# log/127245
U: play the song go public service broadcasting
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "go public service broadcasting") => @com.spotify.play(playable=id);
====
# log/116083
U: hey almond, play atrevete
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "atrevete" => @com.spotify.play(playable=id);
====
# log/131332
U: play mary j blige
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("mary j blige")) => @com.spotify.play(playable=id);
====
# log/45717
U: pause music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# log/123571
U: who is eminem
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.artist() filter id =~ "eminem";
====
# log/1456
U: artist chart
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.artist();
====
# log/101017
U: play spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log/76164
U: which are my favourite tracks?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.get_user_top_tracks();
====
# log/59588
U: play a milli on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "milli") => @com.spotify.play(playable=id);
====
# log/101185
U: stop spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# log/62031
U: play madonna on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("madonna")) => @com.spotify.play(playable=id);
====
# log/94849
U: show me the cannibal corpse singer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.artist() filter id =~ "cannibal corpse";
====
# log/100305
U: play pressure of muse on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter contains(artists, null^^com.spotify:artist(" muse")) && id =~ "pressure") => @com.spotify.play(playable=id);
====
# log/116082
U: play on the road again in spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "on the road again") => @com.spotify.play(playable=id);
====
# log/38804
U: play taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("taylor swift")) => @com.spotify.play(playable=id);
====
# log/72340
U: sporify play
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_play();
====
# log/118270
U: play song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() => @com.spotify.play(playable=id);
====
# log/11876
U: play some jazz
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "jazz") => @com.spotify.play(playable=id);
====
# log/87692
U: beyonce
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.artist() filter id =~ "beyonce";
====
# log/136961
U: stop the music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# log/134027
U: play next track on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_next();
====
# log/44250
U: play the songs piano man and uptown girl
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter in_array~(id, ["piano man", "uptown girl"]))[1 : 2] => @com.spotify.play(playable=id);
====
# log/107440
U: continue playback on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_play();
====
# log/19317
U: play toni rommiti
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("toni rommiti")) => @com.spotify.play(playable=id);
====
# log/19980
U: play music on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log/43957
U: pause spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# log/6344
U: play next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_next();
====
# log/1568
U: get top artists
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.artist())[1];
====
# log/43339
U: skip this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_next();
====
# log/5927
U: play the song "str:QUOTED_STRING::0:"
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.song() filter id =~ "str:QUOTED_STRING::0:") => @com.spotify.play(playable=id);
====
# log/6783
U: play some music on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log/7202
U: play the next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_next();
====
# log/17661
U: start spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_play();
====
# log/7508
U: what song is playing?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.get_currently_playing();
====
# log/796
U: sing a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() => @com.spotify.play(playable=id);
====
# log/40980
U: play rihanna
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("rihanna")) => @com.spotify.play(playable=id);
====
# log/88340
U: open the spotify app
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_play();
====
# manual/1
U: play the podcast Chameleon: Hollywood Con Queen
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.show() filter id =~ "Chameleon: Hollywood Con Queen") => @com.spotify.play(playable=id);
====
# manual/2
U: play Making Sense with Sam Harris
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "Making Sense with Sam Harris") => @com.spotify.play(playable=id);
====
# manual/3
U: play the podcast Where Is George Gibney?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.show() filter id =~ "Where Is George Gibney?") => @com.spotify.play(playable=id);
====
# manual/4
U: play Deep Cover: The Drug Wars
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "Deep Cover: The Drug Wars") => @com.spotify.play(playable=id);
====
# manual/5
U: play the podcast Revisionist History
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.show() filter id =~ "Revisionist History") => @com.spotify.play(playable=id);
====
# manual/6
U: play Son Of A Hitman
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "Son Of A Hitman") => @com.spotify.play(playable=id);
====
# manual/7
U: play the podcast Giant
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.show() filter id =~ "Giant") => @com.spotify.play(playable=id);
====
# manual/8
U: play You're Dead To Me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "You're Dead To Me") => @com.spotify.play(playable=id);
====
# manual/9
U: play the podcast Crimetown
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.show() filter id =~ "Crimetown") => @com.spotify.play(playable=id);
====
# manual/10
U: play Soul Music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "Soul Music") => @com.spotify.play(playable=id);
====
# manual/10
U: play the podcast Soul Music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.show() filter id =~ "Soul Music") => @com.spotify.play(playable=id);
====
# manual/11
U: play Who The Hell Is Hamish?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "Who The Hell Is Hamish?") => @com.spotify.play(playable=id);
====
# manual/12
U: play the podcast Unexplained
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.show() filter id =~ "Unexplained") => @com.spotify.play(playable=id);
====
# manual/13
U: play In The Dark
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "In The Dark") => @com.spotify.play(playable=id);
====
# manual/14
U: play the podcast Athletico Mince
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.show() filter id =~ "Athletico Mince") => @com.spotify.play(playable=id);
====
# manual/15
U: play Slow Burn
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "Slow Burn") => @com.spotify.play(playable=id);
====
# manual/16
U: play the podcast Ear Hustle
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.show() filter id =~ "Ear Hustle") => @com.spotify.play(playable=id);
====
# manual/17
U: play The Adam Buxton Podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "Adam Buxton Podcast") => @com.spotify.play(playable=id);
====
# manual/18
U: play the podcast WTF with Marc Maron
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.show() filter id =~ "WTF with Marc Maron") => @com.spotify.play(playable=id);
====
# manual/19
U: play Man In The Window
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "Man In The Window") => @com.spotify.play(playable=id);
====
# manual/20
U: play the podcast Code Switch
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.show() filter id =~ "Code Switch") => @com.spotify.play(playable=id);
====
# manual/21
U: play Reply All
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "Reply All") => @com.spotify.play(playable=id);
====
# manual/22
U: play the podcast Stuff You Should Know
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.show() filter id =~ "Stuff You Should Know") => @com.spotify.play(playable=id);
====
# manual/23
U: play S-Town
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify.playable() filter id =~ "S-Town") => @com.spotify.play(playable=id);
====
# manual/24
U: Play a random song on Spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# manual/25
U: can you really play music?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log-dev/5391
U: play some die atzen
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("die atzen")) => @com.spotify.play(playable=id);
====
# log-dev/5418
U: play the song miss you by "str:QUOTED_STRING::0:"
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("str:QUOTED_STRING::0:")) && id =~ "miss you" => @com.spotify.play(playable=id);
====
# log-dev/5528
U: play call me maybe
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "call me maybe" => @com.spotify.play(playable=id);
====
# log-dev/5446
U: pause playing
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# log-dev/5638
U: find cardigan by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("taylor swift")) && id =~ "cardigan";
====
# log-dev/7067
U: play taylor swift.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("taylor swift")) => @com.spotify.play(playable=id);
====
# log-dev/5300
U: i want to listen to camilla cabello
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("camilla cabello")) => @com.spotify.play(playable=id);
====
# log-dev/5417
U: play miss you by "str:QUOTED_STRING::0:"
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("str:QUOTED_STRING::0:")) && id =~ "miss you" => @com.spotify.play(playable=id);
====
# log-dev/5408
U: play the song all the good things
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter id =~ "all the good things" => @com.spotify.play(playable=id);
====
# log-dev/7194
U: play metallica \
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("metallica")) => @com.spotify.play(playable=id);
====
# log-dev/5343
U: when was boys by charlie xcx released
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [release_date] of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("charlie xcx")) && id =~ "boys";
====
# log-dev/7108
U: play some music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log-dev/5459
U: play the song hello by adele
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("adele")) && id =~ "hello" => @com.spotify.play(playable=id);
====
# log-dev/7516
U: what is the most popular song by james blake on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("james blake")))[1];
====
# log-dev/5203
U: search for jay chou
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.artist() filter id =~ "jay chou";
====
# log-dev/4928
U: play despacito
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "despacito" => @com.spotify.play(playable=id);
====
# log-dev/5188
U: play something by jay chou
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("jay chou")) => @com.spotify.play(playable=id);
====
# log-dev/5793
U: what's the most popular song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song())[1];
====
# log-dev/7148
U: play rolling stones.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("rolling stones")) => @com.spotify.play(playable=id);
====
# log-dev/7526
U: play stranger things vol 1
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "stranger things vol 1" => @com.spotify.play(playable=id);
====
# log-dev/5342
U: when was the most popular song by charlie xcx released
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [release_date] of sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("charlie xcx")))[1];
====
# log-dev/7154
U: stop playing.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# log-dev/7286
U: allman, can you play some music?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log-dev/7336
U: what is the most popular song?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song())[1];
====
# log-dev/7385
U: play spider-man
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "spider-man" => @com.spotify.play(playable=id);
====
# log-dev/5237
U: play gigi d'agostino
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("gigi d 'agostino")) => @com.spotify.play(playable=id);
====
# log-dev/5130
U: play the most popular song right now
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song())[1] => @com.spotify.play(playable=id);
====
# log-dev/5587
U: set shuffle to true
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_shuffle(shuffle=enum on);
====
# log-dev/5079
U: play delicate by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("taylor swift")) && id =~ "delicate" => @com.spotify.play(playable=id);
====
# log-dev/5541
U: play infinity by klaas
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("klaas")) && id =~ "infinity" => @com.spotify.play(playable=id);
====
# log-dev/5147
U: play jj lin
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("jj lin")) => @com.spotify.play(playable=id);
====
# log-dev/5316
U: what songs were released in 13
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter release_date <= new Date("2013-01-01T08:00:00.000Z") + 1year && release_date >= new Date("2013-01-01T08:00:00.000Z");
====
# log-dev/5514
U: play bohemian rhapsody by queen
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("queen")) && id =~ "bohemian rhapsody" => @com.spotify.play(playable=id);
====
# log-dev/7528
U: play the stranger things soundtrack vol 1
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("stranger things soundtrack vol 1")) => @com.spotify.play(playable=id);
====
# log-dev/5607
U: stop playing
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# log-dev/7335
U: what is taylor swift most popular song?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("taylor swift")))[1];
====
# log-dev/5462
U: play the song we are the champions
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter id =~ "we are the champions" => @com.spotify.play(playable=id);
====
# log-dev/5257
U: play the artist gigi d'agostino
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("gigi d 'agostino")) => @com.spotify.play(playable=id);
====
# log-dev/5344
U: what is the release date of boys by charli xcx
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [release_date] of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("charli xcx")) && id =~ "boys";
====
# log-dev/5164
U: play chinese music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "chinese") => @com.spotify.play(playable=id);
====
# log-dev/5304
U: play pillowtalk
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "pillowtalk" => @com.spotify.play(playable=id);
====
# log-dev/5400
U: play summertime sadness by lana del rey
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("lana del rey")) && id =~ "summertime sadness" => @com.spotify.play(playable=id);
====
# log-dev/5060
U: play taylor swift songs from 13
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("taylor swift")) && release_date <= new Date("2013-01-01T08:00:00.000Z") + 1year && release_date >= new Date("2013-01-01T08:00:00.000Z") => @com.spotify.play(playable=id);
====
# log-dev/5432
U: find elton john
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.artist() filter id =~ "elton john";
====
# log-dev/7512
U: play skinny love by bon iver
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("bon iver")) && id =~ "skinny love" => @com.spotify.play(playable=id);
====
# log-dev/5031
U: play the song clocks by coldplay
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("coldplay")) && id =~ "clocks" => @com.spotify.play(playable=id);
====
# log-dev/5588
U: turn shuffle on
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_shuffle(shuffle=enum on);
====
# log-dev/6965
U: play songs by kesha
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("kesha")) => @com.spotify.play(playable=id);
====
# log-dev/7159
U: play.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log-dev/7289
U: almond can you play me some beatles?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("beatles")) => @com.spotify.play(playable=id);
====
# log-dev/7104
U: open spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_play();
====
# log-dev/5294
U: play songs by gigi d'agostino
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("gigi d 'agostino")) => @com.spotify.play(playable=id);
====
# log-dev/7344
U: play the song levan polka
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter id =~ "levan polka" => @com.spotify.play(playable=id);
====
# recording/32b451f55e217fa2cd13db5d302ef7ce
U: play never gonna give you up
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "never gonna give you up" => @com.spotify.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "never gonna give you up")[1] => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:7GhIk7Il098yCjg4BQjzvb"^^com.spotify:playable("Never Gonna Give You Up") }
C: ]]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: try playing from the Spotify app.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play never gonna give you up
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "never gonna give you up" => @com.spotify.play(playable=id);
====
# recording/b2c4a4039f67c3ca39ecf4c6a879e33f
U: play spiderman into the spiderverse
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "spiderman into the spiderverse" => @com.spotify.play(playable=id);
====
# recording/947d13232af093547ecde3fe680de9f6
U: pause playback
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# recording/9338a3e803aa6c25fdf1c950fbb1c98d
U: play a songs from the beatles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("beatles")) => @com.spotify.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^com.spotify:artist("The Beatles")) => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:6dGnYIeXmHdcikdzNNDMm2"^^com.spotify:playable("Here Comes The Sun - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:2EqlS6tkEnglzr7tkKAAYD"^^com.spotify:playable("Come Together - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:7iN1s7xHE4ifF5povM6A48"^^com.spotify:playable("Let It Be - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:3BQHpFgAp4l80e1XslIjNI"^^com.spotify:playable("Yesterday - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:0aym2LBJBk9DAYuHHutrIl"^^com.spotify:playable("Hey Jude - Remastered 2015") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:5jgFfDIR6FR0gvlA56Nakr"^^com.spotify:playable("Blackbird - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:5ZBeML7Lf3FMEVviTyvi8l"^^com.spotify:playable("Twist And Shout - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:3KfbEIOC7YIv90FIfNSZpo"^^com.spotify:playable("In My Life - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:4pbG9SUmWIvsROVLF0zF9s"^^com.spotify:playable("I Want To Hold Your Hand - Remastered 2015") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:7DD7eSuYSC5xk2ArU62esN"^^com.spotify:playable("Help! - Remastered 2009") }
C: ]]
C: #[count=48]
C: #[error=enum player_error];
A: Sorry, failed to play: try playing from the Spotify app.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: who sings love story
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [artists] of @com.spotify.playable() filter id =~ "love story";
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^com.spotify:artist("The Beatles")) => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:6dGnYIeXmHdcikdzNNDMm2"^^com.spotify:playable("Here Comes The Sun - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:2EqlS6tkEnglzr7tkKAAYD"^^com.spotify:playable("Come Together - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:7iN1s7xHE4ifF5povM6A48"^^com.spotify:playable("Let It Be - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:3BQHpFgAp4l80e1XslIjNI"^^com.spotify:playable("Yesterday - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:0aym2LBJBk9DAYuHHutrIl"^^com.spotify:playable("Hey Jude - Remastered 2015") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:5jgFfDIR6FR0gvlA56Nakr"^^com.spotify:playable("Blackbird - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:5ZBeML7Lf3FMEVviTyvi8l"^^com.spotify:playable("Twist And Shout - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:3KfbEIOC7YIv90FIfNSZpo"^^com.spotify:playable("In My Life - Remastered 2009") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:4pbG9SUmWIvsROVLF0zF9s"^^com.spotify:playable("I Want To Hold Your Hand - Remastered 2015") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:7DD7eSuYSC5xk2ArU62esN"^^com.spotify:playable("Help! - Remastered 2009") }
C: ]]
C: #[count=48]
C: #[error=enum player_error];
C: [artists] of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "love story"
C: #[results=[
C:   { id="spotify:track:1vrd6UOGamcKNGnSHJQlSt"^^com.spotify:playable("Love Story"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")] },
C:   { id="spotify:track:3CeCwYWvdfXbZLXFhBrbnf"^^com.spotify:playable("Love Story (Taylor’s Version)"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")] },
C:   { id="spotify:track:2yQZwi1P8AkkxxFhQ8rMEK"^^com.spotify:playable("Greatest Love Story"), artists=["spotify:artist:2lRH2dgU5Kk4Bc5phmII4T"^^com.spotify:artist("LANCO")] },
C:   { id="spotify:track:3pRrL0BfKWY1QdQNzL6v92"^^com.spotify:playable("Love Story meets Love Story (Taylor Swift Remix)"), artists=["spotify:artist:2YQ4MY2VwOMv43C0GemUY5"^^com.spotify:artist("Jon Schmidt")] }
C: ]];
A: I have Love Story or Love Story (Taylor’s Version). All of them are music by Taylor Swift.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_two;
U: what is beatles's top hit
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, null^^com.spotify:artist("beatles")))[1];
====
# recording/a72002e65e77a86dc77c5a25aafebd7c
U: resume playback
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_play();
====
# recording/ad32165c43ae364e5526d44cccddc9bf
U: what are the top 3 most popular tracks?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song())[1 : 3];
====
# recording/b80d26e81180e3a1cf4915e53ade8fc9
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_next();
====
# recording/fd988aa20ddeda677e01b9b40deea17d
U: pause playback
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# recording/7c9271bf1707a5dd2c2e8f816bf745cb
U: play the podcast all the presidents lawyers
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.show() filter id =~ "all the presidents lawyers" => @com.spotify.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyers")[1] => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: you must first click play from inside the Spotify app, and then I will play songs for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play the podcast all the presidents lawyers
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.show() filter id =~ "all the presidents lawyers" => @com.spotify.play(playable=id);
====
# recording/7a3c7291e1eb2b0e67766797e75f05c0
U: play the podcast left right and center
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.show() filter id =~ "left right and center" => @com.spotify.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "left right and center")[1] => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
A: I'm sorry, I cannot find any show matching your request.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_empty_search;
U: play the neoliberal podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "neoliberal" => @com.spotify.play(playable=id);
====
# recording/250ccb85220072d307429f57d3f8e4a7
U: play songs by Cascada
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("cascada")) => @com.spotify.play(playable=id);
====
# recording/bee94e41bf0580b94e41af71a7bb2618
U: play yellow brick road by elton john
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("elton john")) && id =~ "yellow brick road" => @com.spotify.play(playable=id);
====
# recording/afc2f92af98bab956603fefe40b26e49
U: who is the most popular artist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.artist())[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).artist())[1]
C: #[results=[
C:   { id="spotify:artist:4MCBfE4596Uoi2O4DtmEMz"^^com.spotify:artist("Juice WRLD"), genres=["chicago rap", "melodic rap"], popularity=98 }
C: ]];
A: The most popular singers is Juice WRLD. It is a melodic rap singers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: play a song by them
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:4MCBfE4596Uoi2O4DtmEMz"^^com.spotify:artist("Juice WRLD")) => @com.spotify.play(playable=id);
====
# recording/3acc88acea9ac21f32ed8d8dba30b955
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_next();
====
# recording/1acc9cc0461b8d847794755f45ae7ed4
U: what is the current song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.get_currently_playing();
====
# recording/742f3ba422e32d6b46c64347ac8db8e3
U: Resume playback.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_play();
====
# recording/f4fd734d3e364068600082b2762805ae
U: play hello
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "hello" => @com.spotify.play(playable=id);
====
# recording/1470444c4eb284fbda2dbd36869340cb
U: play hello
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "hello" => @com.spotify.play(playable=id);
====
# recording/f31822e71ef3fcd4424852d6b31b716f
U: play hello by adele
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("adele")) && id =~ "hello" => @com.spotify.play(playable=id);
====
# recording/e5fbe9d6b675ad8cae27852fbca0cf8f
U: play me a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() => @com.spotify.play(playable=id);
====
# recording/611f9456aa1beeb9ebaa38ee3b7ae509
U: Stop playing
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# recording/9ac67d07170e6905cf23b976e93a7e6d
U: play the oldest song by the Beatles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date asc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("beatles")))[1] => @com.spotify.play(playable=id);
====
# recording/77e5270220c08aa0b46c4ad8a97accf7
U: play back street boys
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("back street boys")) => @com.spotify.play(playable=id);
====
# recording/c4d968fa9897e14820f3fe65f1e65156
U: play jason mraz
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("jason mraz")) => @com.spotify.play(playable=id);
====
# recording/05cad34d148bce679a4599ac23c2aa6f
U: Play yellow brick Rd.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "yellow brick rd." => @com.spotify.play(playable=id);
====
# recording/113d571d2d28908ce2c44d11f58b2eb2
U: play a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() => @com.spotify.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: try playing from the Spotify app.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: Play a song.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify.play(playable=id);
====
# recording/be4d6e56040ebf45a6ac76f409099e5f
U: play a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() => @com.spotify.play(playable=id);
====
# recording/d5410c78f86b35daabd88c1fe08806dd
U: play me a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() => @com.spotify.play(playable=id);
====
# recording/da4c4602305d625f379ebc3dddc1233c
U: can you play a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() => @com.spotify.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: try playing from the Spotify app.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum disallowed_action];
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:7lPN2DXiMsVn7XUKtOW1CS"^^com.spotify:playable("drivers license") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:31qCy5ZaophVA81wtlwLc4"^^com.spotify:playable("Anyone") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:5Kskr9LcNYa0tpt5f0ZEJx"^^com.spotify:playable("Calling My Phone") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:3Ofmpyhv5UAQ70mENzB277"^^com.spotify:playable("Astronaut In The Ocean") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:0D75ciM842cdUMKSMfAR9y"^^com.spotify:playable("Baila Conmigo (with Rauw Alejandro)") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:5uEYRdEIh9Bo4fpjDd4Na9"^^com.spotify:playable("Goosebumps - Remix") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:2etHQJxIbV0soyPhelVs9Y"^^com.spotify:playable("Best Friend (feat. Doja Cat)") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:1XXimziG1uhM0eDNCZCrUl"^^com.spotify:playable("Up") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:3CeCwYWvdfXbZLXFhBrbnf"^^com.spotify:playable("Love Story (Taylor’s Version)") },
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:43CIWpJaJHRcI4mUSjqgc2"^^com.spotify:playable("Bad Boy (with Young Thug)") }
C: ]]
C: #[count=47]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: try playing from the Spotify app.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify.play(playable=id);
====
# recording/504d2270531a6cc70b5af73874e369b0
U: play another song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_next();
====
# recording/95c2251e40ef3d8fd73de0f4d5fe0285
U: please play me songs from taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("taylor swift")) => @com.spotify.play(playable=id);
====
# recording/05e7114425cb9878f784f0989c7efb81
U: play the most popular song by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("taylor swift")))[1] => @com.spotify.play(playable=id);
====
# recording/0236e208ab3686e63d95fb462db2e187
U: play the most popular song by Queen
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("queen")))[1] => @com.spotify.play(playable=id);
====
# recording/e5b5894cea48dcf953e0dee8b8b015fb
U: What is the biggest hit  by elton john
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("elton john")))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:3PhoLpVuITZKcymswpck5b"^^com.spotify:artist("Elton John")))[1]
C: #[results=[
C:   { id="spotify:track:3gdewACMIVMEWVbyb8O9sY"^^com.spotify:song("Rocket Man (I Think It's Going To Be A Long, Long Time)"), artists=["spotify:artist:3PhoLpVuITZKcymswpck5b"^^com.spotify:artist("Elton John")], album="spotify:album:2ei2X6ghPnw7YRwQtAH075"^^com.spotify:album("Honky Chateau"), genres=["glam rock", "mellow gold", "piano rock", "soft rock"], release_date=new Date("1972-05-19T00:00:00.000Z"), popularity=80, energy=53.2, danceability=60.099999999999994 }
C: ]];
A: The most popular track is Rocket Man (I Think It's Going To Be A Long, Long Time). It is a track in the album Honky Chateau by Elton John.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: what is the biggest hit by Taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, null^^com.spotify:artist("taylor swift")))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:3PhoLpVuITZKcymswpck5b"^^com.spotify:artist("Elton John")))[1]
C: #[results=[
C:   { id="spotify:track:3gdewACMIVMEWVbyb8O9sY"^^com.spotify:song("Rocket Man (I Think It's Going To Be A Long, Long Time)"), artists=["spotify:artist:3PhoLpVuITZKcymswpck5b"^^com.spotify:artist("Elton John")], album="spotify:album:2ei2X6ghPnw7YRwQtAH075"^^com.spotify:album("Honky Chateau"), genres=["glam rock", "mellow gold", "piano rock", "soft rock"], release_date=new Date("1972-05-19T00:00:00.000Z"), popularity=80, energy=53.2, danceability=60.099999999999994 }
C: ]];
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")))[1]
C: #[results=[
C:   { id="spotify:track:0lx2cLdOt3piJbcaXIV74f"^^com.spotify:song("willow"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")], album="spotify:album:2Xoteh7uEpea4TohMxjtaq"^^com.spotify:album("evermore"), genres=["dance pop", "pop"], release_date=new Date("2020-12-11T00:00:00.000Z"), popularity=86, energy=57.4, danceability=39.2 }
C: ]];
A: The most popular track is willow. It is a track in the album evermore by Taylor Swift.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: who sings shake it off
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [artists] of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "shake it off";
====
# recording/f39b42d4f8fe18b504a7c3b28796db4e
U: Name the singer of the Piano man album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [artists] of @com.spotify.album() filter id =~ "piano man";
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [artists] of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "piano man"
C: #[results=[
C:   { id="spotify:album:77ErLrVvYETIlQJHAwhfIH"^^com.spotify:album("Piano Man"), artists=["spotify:artist:6zFYqv1mOsgBRQbae3JJ9e"^^com.spotify:artist("Billy Joel")] },
C:   { id="spotify:album:69wjSAZXZiD2EBia3b3gxL"^^com.spotify:album("Piano Man (Legacy Edition)"), artists=["spotify:artist:6zFYqv1mOsgBRQbae3JJ9e"^^com.spotify:artist("Billy Joel")] },
C:   { id="spotify:album:5EMqbcSQgub9fRFwmcfxa9"^^com.spotify:album("Texas Piano Man"), artists=["spotify:artist:6XtG9W2KkPiQ6n1rlIvTJE"^^com.spotify:artist("Robert Ellis")] }
C: ]];
A: I see Piano Man or Piano Man (Legacy Edition). All of them are albums by Billy Joel.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_two;
U: Name the singer of Bohemian rhapsody
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [artists] of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "bohemian rhapsody";
====
# recording/7d49e2fe7a76411dcd6a1226161e9b5c
U: who is the most popular artist?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.artist())[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).artist())[1]
C: #[results=[
C:   { id="spotify:artist:4MCBfE4596Uoi2O4DtmEMz"^^com.spotify:artist("Juice WRLD"), genres=["chicago rap", "melodic rap"], popularity=98 }
C: ]];
A: The most popular singers is Juice WRLD. It is a melodic rap singers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: play the beatles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, null^^com.spotify:artist("beatles")) => @com.spotify.play(playable=id);
====
# recording/71c8b187b0b9d1e8138d488111c20658
U: play a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() => @com.spotify.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: try playing from the Spotify app.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play queen
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, null^^com.spotify:artist("queen")) => @com.spotify.play(playable=id);
====
# recording/81aaec26692917513ce3b40e47156cf1
U: play the artist queen
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("queen")) => @com.spotify.play(playable=id);
====
# recording/a53d3b895cc837844eba4092fd9ef472
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# recording/80d33327cc713feaf3926422b60fe216
U: pause playing a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# recording/a394f4a87fa8360ff323661eeefec8d9
U: play the queen
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("queen")) => @com.spotify.play(playable=id);
====
# recording/413f8152be0452b8d53581aa4e983a72
U: Play the Queen.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("queen")) => @com.spotify.play(playable=id);
====
# recording/fb9c802f17b5cd878f6f8bb9a12c8685
U: I'd like to hear some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# recording/5406846f342b44666caae34e7da2f40d
U: Play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# recording/f255ad18008e15cf1a8c48fb0fc160a7
U: Play some Taylor Swift on Spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("taylor swift")) => @com.spotify.play(playable=id);
====
# recording/457c2df55c50d009a6753db14bddeeb7
U: What albums does Bon Iver have
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("bon iver"));
====
# recording/4bec91151bd783d285ddbe8fcb149953
U: Play Ether by Mogwai
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("mogwai")) && id =~ "ether" => @com.spotify.play(playable=id);
====
# recording/93e7ac97a596d2561e618201a7fab3c2
U: what is James Blake's top song on Spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("james blake")))[1];
====
# recording/db5d51769b7a44280d5bcad6c9f14410
U: list popular songs by James Blake
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("james blake")));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")))
C: #[results=[
C:   { id="spotify:track:5WfACgyEk4rwdWU3rrzNt1"^^com.spotify:song("Godspeed"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:0qYRbCu2dmz948wOiROlcC"^^com.spotify:album("Godspeed"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-09-11T00:00:00.000Z"), popularity=68, energy=17.4, danceability=39.5 },
C:   { id="spotify:track:4cQrSREMqBSvJ8ZzBZjVb8"^^com.spotify:song("Mile High (feat. Travis Scott & Metro Boomin)"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake"), "spotify:artist:0Y5tJX1MQlPlqiwlOH1tJY"^^com.spotify:artist("Travis Scott"), "spotify:artist:0iEtIxbK0KxaSlF7G42ZOp"^^com.spotify:artist("Metro Boomin")], album="spotify:album:23dKNZpiadggKHrQgHLi3L"^^com.spotify:album("Assume Form"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2019-01-18T00:00:00.000Z"), popularity=67, energy=37, danceability=75.4 },
C:   { id="spotify:track:2IqjKEBiz0CdLKdkXhxw84"^^com.spotify:song("Retrograde"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:53FEYOXnplxBWoQMmWn82U"^^com.spotify:album("Overgrown"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2013-04-08T00:00:00.000Z"), popularity=65, energy=25.1, danceability=53.300000000000004 },
C:   { id="spotify:track:0U9oiRl4hYwORmWwkYihZN"^^com.spotify:song("when the party’s over"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:7saSlN9qdW5wKoN4M9nNRq"^^com.spotify:album("Covers"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-12-11T00:00:00.000Z"), popularity=64, energy=17.1, danceability=46.800000000000004 },
C:   { id="spotify:track:2k0HXdTDW28JFAaS8TaHeA"^^com.spotify:song("Are You Even Real?"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:4k4iHNk6u4RlloqaNXlzwQ"^^com.spotify:album("Are You Even Real?"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-07-08T00:00:00.000Z"), popularity=62, energy=61.9, danceability=28.9 },
C:   { id="spotify:track:0TLAptKgYxe7F0KewWH6X6"^^com.spotify:song("I Need A Forest Fire"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake"), "spotify:artist:4LEiUm1SRbFMgfqnQTwUbQ"^^com.spotify:artist("Bon Iver")], album="spotify:album:1WyrGCkFDlH1xPadZ5qTkL"^^com.spotify:album("The Colour In Anything"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2016-05-05T00:00:00.000Z"), popularity=61, energy=28.999999999999996, danceability=29.299999999999997 },
C:   { id="spotify:track:5teYCP3pROESCEaASCVf5w"^^com.spotify:song("You're Too Precious"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:0hs2pdNq5QXYWsEcAFVO9q"^^com.spotify:album("You're Too Precious"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-04-24T00:00:00.000Z"), popularity=60, energy=47.699999999999996, danceability=68.4 },
C:   { id="spotify:track:3onYsieuDICdVt5ULZSExF"^^com.spotify:song("Barefoot In The Park (feat. ROSALÍA)"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake"), "spotify:artist:7ltDVBr6mKbRvohxheJ9h1"^^com.spotify:artist("ROSALÍA")], album="spotify:album:23dKNZpiadggKHrQgHLi3L"^^com.spotify:album("Assume Form"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2019-01-18T00:00:00.000Z"), popularity=60, energy=63.2, danceability=55.800000000000004 },
C:   { id="spotify:track:6EvUAsfncetT0RcWshHCbl"^^com.spotify:song("I'll Come Too"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:23dKNZpiadggKHrQgHLi3L"^^com.spotify:album("Assume Form"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2019-01-18T00:00:00.000Z"), popularity=57, energy=47.199999999999996, danceability=66.10000000000001 },
C:   { id="spotify:track:0FjyvdAffyJcnvbv3dLFyw"^^com.spotify:song("Before"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:5vqILcEeCT0N1DeJBsLrGE"^^com.spotify:album("Before"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-10-14T00:00:00.000Z"), popularity=57, energy=46.400000000000006, danceability=69.89999999999999 }
C: ]]
C: #[count=37];
A: I have found Godspeed, Mile High (feat. Travis Scott & Metro Boomin) and Retrograde. All of them are uk alternative pop song by James Blake.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_three;
U: what is the most popular song by James Blake on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, null^^com.spotify:artist("james blake")))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")))
C: #[results=[
C:   { id="spotify:track:5WfACgyEk4rwdWU3rrzNt1"^^com.spotify:song("Godspeed"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:0qYRbCu2dmz948wOiROlcC"^^com.spotify:album("Godspeed"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-09-11T00:00:00.000Z"), popularity=68, energy=17.4, danceability=39.5 },
C:   { id="spotify:track:4cQrSREMqBSvJ8ZzBZjVb8"^^com.spotify:song("Mile High (feat. Travis Scott & Metro Boomin)"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake"), "spotify:artist:0Y5tJX1MQlPlqiwlOH1tJY"^^com.spotify:artist("Travis Scott"), "spotify:artist:0iEtIxbK0KxaSlF7G42ZOp"^^com.spotify:artist("Metro Boomin")], album="spotify:album:23dKNZpiadggKHrQgHLi3L"^^com.spotify:album("Assume Form"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2019-01-18T00:00:00.000Z"), popularity=67, energy=37, danceability=75.4 },
C:   { id="spotify:track:2IqjKEBiz0CdLKdkXhxw84"^^com.spotify:song("Retrograde"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:53FEYOXnplxBWoQMmWn82U"^^com.spotify:album("Overgrown"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2013-04-08T00:00:00.000Z"), popularity=65, energy=25.1, danceability=53.300000000000004 },
C:   { id="spotify:track:0U9oiRl4hYwORmWwkYihZN"^^com.spotify:song("when the party’s over"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:7saSlN9qdW5wKoN4M9nNRq"^^com.spotify:album("Covers"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-12-11T00:00:00.000Z"), popularity=64, energy=17.1, danceability=46.800000000000004 },
C:   { id="spotify:track:2k0HXdTDW28JFAaS8TaHeA"^^com.spotify:song("Are You Even Real?"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:4k4iHNk6u4RlloqaNXlzwQ"^^com.spotify:album("Are You Even Real?"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-07-08T00:00:00.000Z"), popularity=62, energy=61.9, danceability=28.9 },
C:   { id="spotify:track:0TLAptKgYxe7F0KewWH6X6"^^com.spotify:song("I Need A Forest Fire"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake"), "spotify:artist:4LEiUm1SRbFMgfqnQTwUbQ"^^com.spotify:artist("Bon Iver")], album="spotify:album:1WyrGCkFDlH1xPadZ5qTkL"^^com.spotify:album("The Colour In Anything"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2016-05-05T00:00:00.000Z"), popularity=61, energy=28.999999999999996, danceability=29.299999999999997 },
C:   { id="spotify:track:5teYCP3pROESCEaASCVf5w"^^com.spotify:song("You're Too Precious"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:0hs2pdNq5QXYWsEcAFVO9q"^^com.spotify:album("You're Too Precious"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-04-24T00:00:00.000Z"), popularity=60, energy=47.699999999999996, danceability=68.4 },
C:   { id="spotify:track:3onYsieuDICdVt5ULZSExF"^^com.spotify:song("Barefoot In The Park (feat. ROSALÍA)"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake"), "spotify:artist:7ltDVBr6mKbRvohxheJ9h1"^^com.spotify:artist("ROSALÍA")], album="spotify:album:23dKNZpiadggKHrQgHLi3L"^^com.spotify:album("Assume Form"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2019-01-18T00:00:00.000Z"), popularity=60, energy=63.2, danceability=55.800000000000004 },
C:   { id="spotify:track:6EvUAsfncetT0RcWshHCbl"^^com.spotify:song("I'll Come Too"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:23dKNZpiadggKHrQgHLi3L"^^com.spotify:album("Assume Form"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2019-01-18T00:00:00.000Z"), popularity=57, energy=47.199999999999996, danceability=66.10000000000001 },
C:   { id="spotify:track:0FjyvdAffyJcnvbv3dLFyw"^^com.spotify:song("Before"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:5vqILcEeCT0N1DeJBsLrGE"^^com.spotify:album("Before"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-10-14T00:00:00.000Z"), popularity=57, energy=46.400000000000006, danceability=69.89999999999999 }
C: ]]
C: #[count=37];
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")))[1]
C: #[results=[
C:   { id="spotify:track:5WfACgyEk4rwdWU3rrzNt1"^^com.spotify:song("Godspeed"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:0qYRbCu2dmz948wOiROlcC"^^com.spotify:album("Godspeed"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-09-11T00:00:00.000Z"), popularity=68, energy=17.4, danceability=39.5 }
C: ]];
A: The most popular song is Godspeed. It is a song in the album Godspeed by James Blake.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: what is the most popular song by Burial on Spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, null^^com.spotify:artist("burial")))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")))
C: #[results=[
C:   { id="spotify:track:5WfACgyEk4rwdWU3rrzNt1"^^com.spotify:song("Godspeed"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:0qYRbCu2dmz948wOiROlcC"^^com.spotify:album("Godspeed"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-09-11T00:00:00.000Z"), popularity=68, energy=17.4, danceability=39.5 },
C:   { id="spotify:track:4cQrSREMqBSvJ8ZzBZjVb8"^^com.spotify:song("Mile High (feat. Travis Scott & Metro Boomin)"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake"), "spotify:artist:0Y5tJX1MQlPlqiwlOH1tJY"^^com.spotify:artist("Travis Scott"), "spotify:artist:0iEtIxbK0KxaSlF7G42ZOp"^^com.spotify:artist("Metro Boomin")], album="spotify:album:23dKNZpiadggKHrQgHLi3L"^^com.spotify:album("Assume Form"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2019-01-18T00:00:00.000Z"), popularity=67, energy=37, danceability=75.4 },
C:   { id="spotify:track:2IqjKEBiz0CdLKdkXhxw84"^^com.spotify:song("Retrograde"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:53FEYOXnplxBWoQMmWn82U"^^com.spotify:album("Overgrown"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2013-04-08T00:00:00.000Z"), popularity=65, energy=25.1, danceability=53.300000000000004 },
C:   { id="spotify:track:0U9oiRl4hYwORmWwkYihZN"^^com.spotify:song("when the party’s over"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:7saSlN9qdW5wKoN4M9nNRq"^^com.spotify:album("Covers"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-12-11T00:00:00.000Z"), popularity=64, energy=17.1, danceability=46.800000000000004 },
C:   { id="spotify:track:2k0HXdTDW28JFAaS8TaHeA"^^com.spotify:song("Are You Even Real?"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:4k4iHNk6u4RlloqaNXlzwQ"^^com.spotify:album("Are You Even Real?"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-07-08T00:00:00.000Z"), popularity=62, energy=61.9, danceability=28.9 },
C:   { id="spotify:track:0TLAptKgYxe7F0KewWH6X6"^^com.spotify:song("I Need A Forest Fire"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake"), "spotify:artist:4LEiUm1SRbFMgfqnQTwUbQ"^^com.spotify:artist("Bon Iver")], album="spotify:album:1WyrGCkFDlH1xPadZ5qTkL"^^com.spotify:album("The Colour In Anything"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2016-05-05T00:00:00.000Z"), popularity=61, energy=28.999999999999996, danceability=29.299999999999997 },
C:   { id="spotify:track:5teYCP3pROESCEaASCVf5w"^^com.spotify:song("You're Too Precious"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:0hs2pdNq5QXYWsEcAFVO9q"^^com.spotify:album("You're Too Precious"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-04-24T00:00:00.000Z"), popularity=60, energy=47.699999999999996, danceability=68.4 },
C:   { id="spotify:track:3onYsieuDICdVt5ULZSExF"^^com.spotify:song("Barefoot In The Park (feat. ROSALÍA)"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake"), "spotify:artist:7ltDVBr6mKbRvohxheJ9h1"^^com.spotify:artist("ROSALÍA")], album="spotify:album:23dKNZpiadggKHrQgHLi3L"^^com.spotify:album("Assume Form"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2019-01-18T00:00:00.000Z"), popularity=60, energy=63.2, danceability=55.800000000000004 },
C:   { id="spotify:track:6EvUAsfncetT0RcWshHCbl"^^com.spotify:song("I'll Come Too"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:23dKNZpiadggKHrQgHLi3L"^^com.spotify:album("Assume Form"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2019-01-18T00:00:00.000Z"), popularity=57, energy=47.199999999999996, danceability=66.10000000000001 },
C:   { id="spotify:track:0FjyvdAffyJcnvbv3dLFyw"^^com.spotify:song("Before"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:5vqILcEeCT0N1DeJBsLrGE"^^com.spotify:album("Before"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-10-14T00:00:00.000Z"), popularity=57, energy=46.400000000000006, danceability=69.89999999999999 }
C: ]]
C: #[count=37];
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")))[1]
C: #[results=[
C:   { id="spotify:track:5WfACgyEk4rwdWU3rrzNt1"^^com.spotify:song("Godspeed"), artists=["spotify:artist:53KwLdlmrlCelAZMaLVZqU"^^com.spotify:artist("James Blake")], album="spotify:album:0qYRbCu2dmz948wOiROlcC"^^com.spotify:album("Godspeed"), genres=["indie soul", "uk alternative pop"], release_date=new Date("2020-09-11T00:00:00.000Z"), popularity=68, energy=17.4, danceability=39.5 }
C: ]];
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:0uCCBpmg6MrPb1KY2msceF"^^com.spotify:artist("Burial")))[1]
C: #[results=[
C:   { id="spotify:track:2MhDAsciLk9txdni5CL8iw"^^com.spotify:song("Her Revolution"), artists=["spotify:artist:0uCCBpmg6MrPb1KY2msceF"^^com.spotify:artist("Burial"), "spotify:artist:7Eu1txygG6nJttLHbZdQOh"^^com.spotify:artist("Four Tet"), "spotify:artist:4CvTDPKA6W06DRfBnZKrau"^^com.spotify:artist("Thom Yorke")], album="spotify:album:4ciK8DtBglOBd0FYznsg98"^^com.spotify:album("Her Revolution / His Rope"), genres=["bass music", "classic dubstep", "electronica", "future garage", "hauntology", "intelligent dance music", "microhouse"], release_date=new Date("2020-12-11T00:00:00.000Z"), popularity=58, energy=51, danceability=46.6 }
C: ]];
A: The most popular song is Her Revolution. It is a song in the album Her Revolution / His Rope.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: play Burial's most popular song on Spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, null^^com.spotify:artist("burial")))[1] => @com.spotify.play(playable=id);
====
# recording/85a71140a96d4e097fb65eff100e1d07
U: play the most popular song by Burial on Spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("burial")))[1] => @com.spotify.play(playable=id);
====
# recording/ed9390e636f5aa46ce8f1477f4729dbd
U: play You Found Me by Sublab on Spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("sublab")) && id =~ "you found me" => @com.spotify.play(playable=id);
====
# recording/5dd58a14d81c354a556bef0c6f86f6d1
U: what's the most popular song right now
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song())[1];
====
# recording/1102362151ed6822db39caa3988ae6ba
U: play Car Radio on Spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "car radio" => @com.spotify.play(playable=id);
====
# recording/07a3ef2a8700e8f5ad8b73941af12c49
U: play Stranger Things Vol 1
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "stranger things vol 1" => @com.spotify.play(playable=id);
====
# recording/75c78238cbb3047c0bc63ad66821bc7f
U: play Stranger Things soundtrack Vol 1
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "stranger things soundtrack vol 1" => @com.spotify.play(playable=id);
====
# recording/c2feb526d4dc82907a00274ea714a7b7
U: play the Stranger Things soundtrack Vol 1
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "stranger things soundtrack vol 1" => @com.spotify.play(playable=id);
====
# recording/68dc2717dbed71c07c64fa7b2571e80b
U: play the Weeknd
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("weeknd")) => @com.spotify.play(playable=id);
====
# recording/522fdeb340088b875930f868c2f24edd
U: play the The Weeknd
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("weeknd")) => @com.spotify.play(playable=id);
====
# recording/534749bbfcb7e85b11d13ae8a852ee25
U: play the Random Access Memories
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "random access memories" => @com.spotify.play(playable=id);
====
# recording/af7849b6072e6822250d897817b2bbb7
U: play the top song by James Blake on Spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("james blake")))[1] => @com.spotify.play(playable=id);
====
# recording/0bccc92072d280ec34c1af7fcf7aa3d9
U: can you really play music?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# recording/4b225ab354a8ca631ce75148f5a15ea0
U: find artist beatles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.artist() filter id =~ "beatles";
====
# recording/02869f193a0c83efc97736d06f7bfedf
U: Resume playback.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_play();
====
# recording/c7996840a8d840610d56785b2a0df5e7
U: play songs by the weeknd
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("weeknd")) => @com.spotify.play(playable=id);
====
# recording/9c67cdd2eff46bdf57ee7552502dcdd3
U: play songs by the weeknd
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("weeknd")) => @com.spotify.play(playable=id);
====
# recording/4a5b94e10e1ce7e96cc6ce911499e173
U: what is the most popular rock song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains~(genres, "rock"))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains~(genres, "rock"))[1]
C: #[results=[
C:   { id="spotify:track:2QjOHCTQ1Jl3zawyYOpxh6"^^com.spotify:song("Sweater Weather"), artists=["spotify:artist:77SW9BnxLY8rJ0RciFqkHh"^^com.spotify:artist("The Neighbourhood")], album="spotify:album:4xkM0BwLM9H2IUcbYzpcBI"^^com.spotify:album("I Love You."), genres=["modern alternative rock", "modern rock", "pop"], release_date=new Date("2013-04-19T00:00:00.000Z"), popularity=88, energy=80.7, danceability=61.199999999999996 }
C: ]];
A: The most popular track is Sweater Weather. It is a track in the album I Love You. By The Neighbourhood.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: what is the most popular taiwanese song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains~(genres, "taiwanese"))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains~(genres, "rock"))[1]
C: #[results=[
C:   { id="spotify:track:2QjOHCTQ1Jl3zawyYOpxh6"^^com.spotify:song("Sweater Weather"), artists=["spotify:artist:77SW9BnxLY8rJ0RciFqkHh"^^com.spotify:artist("The Neighbourhood")], album="spotify:album:4xkM0BwLM9H2IUcbYzpcBI"^^com.spotify:album("I Love You."), genres=["modern alternative rock", "modern rock", "pop"], release_date=new Date("2013-04-19T00:00:00.000Z"), popularity=88, energy=80.7, danceability=61.199999999999996 }
C: ]];
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains~(genres, "taiwanese"))[1]
C: #[results=[
C:   { id="spotify:track:2YA5IfmQwAmVzHRP3SVnEd"^^com.spotify:song("浪子回頭"), artists=["spotify:artist:6g641431O1Xkl7HAs2yFEg"^^com.spotify:artist("EggPlantEgg")], album="spotify:album:5SGhMGsRdfFKlFjsE9L3V5"^^com.spotify:album("卡通人物"), genres=["mandopop", "taiwan indie", "taiwan pop", "taiwanese indie"], release_date=new Date("2017-11-04T00:00:00.000Z"), popularity=58, energy=48.8, danceability=47.3 }
C: ]];
A: The most popular track is 浪子回頭. It is a track in the album 卡通人物 by EggPlantEgg.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: play juice wrld
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^com.spotify:artist("juice wrld")) => @com.spotify.play(playable=id);
====
# recording/df62065a89b14ea949eae744fc570aa0
U: play juice wrld
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("juice wrld")) => @com.spotify.play(playable=id);
====
# recording/bb0e9cbfc4ff9facd55de07d0a335fc3
U: play the playlist songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playlist() filter id =~ "songs" => @com.spotify.play(playable=id);
====
# recording/178d96e2b7d4d7692cc54c5a23f2c291
U: play the playlist named songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playlist() filter id =~ "songs" => @com.spotify.play(playable=id);
====
# recording/dd581d6c5f943a9a81bd6e3883a43136
U: play the bealtes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("bealtes")) => @com.spotify.play(playable=id);
====
# recording/b15bbdb99667ff74f3fedb617a0a0475
U: play the beatles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("beatles")) => @com.spotify.play(playable=id);
====
# recording/952871f8af90ae8691163ce7d67ff88e
U: what's the most popular song by the beatles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("beatles")))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(popularity desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^com.spotify:artist("The Beatles")))[1]
C: #[results=[
C:   { id="spotify:track:6dGnYIeXmHdcikdzNNDMm2"^^com.spotify:song("Here Comes The Sun - Remastered 2009"), artists=["spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^com.spotify:artist("The Beatles")], album="spotify:album:0ETFjACtuP2ADo6LFhL6HN"^^com.spotify:album("Abbey Road (Remastered)"), genres=["beatlesque", "british invasion", "classic rock", "merseybeat", "psychedelic rock", "rock"], release_date=new Date("1969-09-26T00:00:00.000Z"), popularity=81, energy=54, danceability=55.7 }
C: ]];
A: The most popular track is Here Comes The Sun - Remastered 2009. It is a track in the album Abbey Road (Remastered) by The Beatles.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: play rap songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains~(genres, "rap") => @com.spotify.play(playable=id);
====
# recording/8f2d9948e31b7a790db4d325e4282551
U: play the playlist today's top hits
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playlist() filter id =~ "today's top hits" => @com.spotify.play(playable=id);
====
# recording/803d88cbfa2834fa6580676404b41bc7
U: play rap
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "rap") => @com.spotify.play(playable=id);
====
# recording/1a05836a3e782a28906aee141f38293f
U: play Taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("taylor swift")) => @com.spotify.play(playable=id);
====
# recording/53029617fc0982c622243d05c04b2f95
U: play Taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("taylor swift")) => @com.spotify.play(playable=id);
====
# recording/0aac13734ff86b26d08182d3bb62a127
U: Can you play me music by the weekend?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("weekend")) => @com.spotify.play(playable=id);
====
# recording/ea215f97db3e2fa24fb90a11837fb772
U: Can you play me music by the weekend?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("weekend")) => @com.spotify.play(playable=id);
====
# recording/9fc2db81382ba42e67515f3b5cec54c4
U: Allman, can you play some music?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# recording/0194a1eacee1a358cc63fe9c19739acd
U: Skip this song.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_next();
====
# recording/5ca82488f9fe478b98bdaae35492915a
U: i want to listen to new order
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("new order")) => @com.spotify.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0yNLKJebCb8Aueb54LYya3"^^com.spotify:artist("New Order")) => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: try playing from the Spotify app.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: i want to listen to dead mau5
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^com.spotify:artist("dead mau5")) => @com.spotify.play(playable=id);
====
# recording/242e09544f9019caa251b95048cd08c1
U: i want to listen to deadmau5
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("deadmau5")) => @com.spotify.play(playable=id);
====
# recording/2390ec2a54ffa2dd645d6551ce654413
U: music to the tree of life
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "tree of life" => @com.spotify.play(playable=id);
====
# recording/9031c8820dfe359fa597b3d393246c16
U: what is rihanna's latest song?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("rihanna")))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:5pKCCKE2ajJHZ9KAiaK11H"^^com.spotify:artist("Rihanna")))[1]
C: #[results=[
C:   { id="spotify:track:6mulQVtiyAO551KgUuJI8Q"^^com.spotify:song("BELIEVE IT"), artists=["spotify:artist:2HPaUgqeutzr3jx5a9WyDV"^^com.spotify:artist("PARTYNEXTDOOR"), "spotify:artist:5pKCCKE2ajJHZ9KAiaK11H"^^com.spotify:artist("Rihanna")], album="spotify:album:44tafm4490xYqhfQKvMD4r"^^com.spotify:album("BELIEVE IT"), genres=["pop", "pop rap", "r&b", "rap", "toronto rap", "trap", "urban contemporary"], release_date=new Date("2020-03-26T00:00:00.000Z"), popularity=50, energy=70, danceability=43 }
C: ]];
A: The most recent song is BELIEVE IT. It is a song in the album BELIEVE IT by Rihanna.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: can you play it?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:track:6mulQVtiyAO551KgUuJI8Q"^^com.spotify:song("BELIEVE IT"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:5pKCCKE2ajJHZ9KAiaK11H"^^com.spotify:artist("Rihanna")))[1]
C: #[results=[
C:   { id="spotify:track:6mulQVtiyAO551KgUuJI8Q"^^com.spotify:song("BELIEVE IT"), artists=["spotify:artist:2HPaUgqeutzr3jx5a9WyDV"^^com.spotify:artist("PARTYNEXTDOOR"), "spotify:artist:5pKCCKE2ajJHZ9KAiaK11H"^^com.spotify:artist("Rihanna")], album="spotify:album:44tafm4490xYqhfQKvMD4r"^^com.spotify:album("BELIEVE IT"), genres=["pop", "pop rap", "r&b", "rap", "toronto rap", "trap", "urban contemporary"], release_date=new Date("2020-03-26T00:00:00.000Z"), popularity=50, energy=70, danceability=43 }
C: ]];
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:track:6mulQVtiyAO551KgUuJI8Q"^^com.spotify:song("BELIEVE IT"))
C: #[results=[]]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: you must first click play from inside the Spotify app, and then I will play songs for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: can you try playing it now?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:track:6mulQVtiyAO551KgUuJI8Q"^^com.spotify:song("BELIEVE IT"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:5pKCCKE2ajJHZ9KAiaK11H"^^com.spotify:artist("Rihanna")))[1]
C: #[results=[
C:   { id="spotify:track:6mulQVtiyAO551KgUuJI8Q"^^com.spotify:song("BELIEVE IT"), artists=["spotify:artist:2HPaUgqeutzr3jx5a9WyDV"^^com.spotify:artist("PARTYNEXTDOOR"), "spotify:artist:5pKCCKE2ajJHZ9KAiaK11H"^^com.spotify:artist("Rihanna")], album="spotify:album:44tafm4490xYqhfQKvMD4r"^^com.spotify:album("BELIEVE IT"), genres=["pop", "pop rap", "r&b", "rap", "toronto rap", "trap", "urban contemporary"], release_date=new Date("2020-03-26T00:00:00.000Z"), popularity=50, energy=70, danceability=43 }
C: ]];
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:track:6mulQVtiyAO551KgUuJI8Q"^^com.spotify:song("BELIEVE IT"))
C: #[results=[]]
C: #[error=enum disallowed_action];
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:track:6mulQVtiyAO551KgUuJI8Q"^^com.spotify:song("BELIEVE IT"))
C: #[results=[
C:   { device="XXXXXXXX"^^com.spotify:device, playable="spotify:track:6mulQVtiyAO551KgUuJI8Q"^^com.spotify:playable("BELIEVE IT") }
C: ]]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: you must first click play from inside the Spotify app, and then I will play songs for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: please try playing it again
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:track:6mulQVtiyAO551KgUuJI8Q"^^com.spotify:song("BELIEVE IT"));
====
# recording/b5366564777e4d4805c4e10eb87c195d
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# recording/e68775988dd2a297e60f199c98cb792d
U: turn shuffle on
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_shuffle(shuffle=enum on);
====
# recording/8a3d0aa0d06f5f136de47610a5b561e6
U: who sings the album evermore
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [artists] of @com.spotify.album() filter id =~ "evermore";
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [artists] of @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "evermore"
C: #[results=[
C:   { id="spotify:album:2Xoteh7uEpea4TohMxjtaq"^^com.spotify:album("evermore"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")] },
C:   { id="spotify:album:1obdMwQYqDQTJLLBGFsFoP"^^com.spotify:album("Evermore"), artists=["spotify:artist:2CiO7xWdwPMDlVwlt9qa1f"^^com.spotify:artist("WYS"), "spotify:artist:0CF9CnQbK6uS8u78KVnIPv"^^com.spotify:artist("Sweet Medicine")] },
C:   { id="spotify:album:6AORtDjduMM3bupSWzbTSG"^^com.spotify:album("evermore (deluxe version)"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")] }
C: ]];
A: Evermore is an album by Taylor Swift.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: what else does she sing
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift"));
====
# log-dev/7923
U: stop music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# log-dev/7921
U: play iron maiden on spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("iron maiden")) => @com.spotify.play(playable=id);
====
# log-dev/7916
U: irone maiden on spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("irone maiden")) => @com.spotify.play(playable=id);
====
# log-dev/7915
U: turn on spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_play();
====
# log-dev/7912
U: play irone maiden on spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("irone maiden")) => @com.spotify.play(playable=id);
====
# log-dev/7911
U: see some airon maiden from spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("airon maiden"));
====
# log-dev/7792
U: play folklore
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "folklore" => @com.spotify.play(playable=id);
====
# log-dev/7791
U: what albums are by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("taylor swift"));
====
# log-dev/7677
U: play ily
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "ily" => @com.spotify.play(playable=id);
====
# log-dev/7676
U: play i l y
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "i l y" => @com.spotify.play(playable=id);
====
# log-dev/7672
U: play sitting on the dock of the bay.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "sitting on the dock of the bay" => @com.spotify.play(playable=id);
====
# log-dev/7670
U: play fly me to the moon.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "fly me to the moon" => @com.spotify.play(playable=id);
====
# log-dev/7647
U: pewter play some music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log-dev/7623
U: play ily.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "ily" => @com.spotify.play(playable=id);
====
# log-dev/7611
U: play i love you baby.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "i love you baby" => @com.spotify.play(playable=id);
====
# log-dev/7599
U: can you play latest songs by rihanna?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("rihanna")))[1] => @com.spotify.play(playable=id);
====
# log-dev/7598
U: can you play believe it by rihanna
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("rihanna")) && id =~ "believe it" => @com.spotify.play(playable=id);
====
# log-dev/7569
U: can you play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log-dev/7551
U: play songs by tez cadey
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("tez cadey")) => @com.spotify.play(playable=id);
====
# log-dev/7549
U: play the playlist aperitivo time
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playlist() filter id =~ "aperitivo time" => @com.spotify.play(playable=id);
====
# log-dev/7548
U: play aperitivo time
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "aperitivo time" => @com.spotify.play(playable=id);
====
# log-dev/7544
U: play cascada
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("cascada")) => @com.spotify.play(playable=id);
====
# log-dev/7541
U: play nelly furtado
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("nelly furtado")) => @com.spotify.play(playable=id);
====
# log-dev/7540
U: play nelli furtado
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("nelli furtado")) => @com.spotify.play(playable=id);
====
# log-dev/7539
U: play the song all good things
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter id =~ "all good things" => @com.spotify.play(playable=id);
====
# log-dev/7518
U: play burial's most popular song on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("burial")))[1] => @com.spotify.play(playable=id);
====
# log-dev/7517
U: what is the most popular song by burial on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("burial")))[1];
====
# log-dev/7355
U: play never gonna give you up.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "never gonna give you up" => @com.spotify.play(playable=id);
====
# log-dev/7353
U: play the songs.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() => @com.spotify.play(playable=id);
====
# log-dev/7352
U: what is the most popular artist?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.artist())[1];
====
# log-dev/7345
U: play the playlist aperitivo time.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playlist() filter id =~ "aperitivo time" => @com.spotify.play(playable=id);
====
# log-dev/7343
U: play the song levon polka.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter id =~ "levon polka" => @com.spotify.play(playable=id);
====
# log-dev/7339
U: play megalovania.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "megalovania" => @com.spotify.play(playable=id);
====
# log-dev/7337
U: what are the top 3 most popular songs?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song())[1 : 3];
====
# log-dev/7333
U: go to the next song.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_next();
====
# log-dev/7331
U: play the previous song.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_previous();
====
# log-dev/7330
U: play the next song.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_next();
====
# log-dev/7315
U: show me my top tracks.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.get_user_top_tracks();
====
# log-dev/7281
U: bush almond play music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log-dev/7279
U: almond play me some music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log-dev/7256
U: play lily allen.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("lily allen")) => @com.spotify.play(playable=id);
====
# log-dev/7251
U: play the most recent taylor swift song.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("taylor swift")))[1] => @com.spotify.play(playable=id);
====
# log-dev/7216
U: play metallica
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("metallica")) => @com.spotify.play(playable=id);
====
# recording/8873e94e06440dd9d5d018e51390e6ea
U: let's listen some music!
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# recording/80a8af7f1f827859cd3d89e2c783a0a9
U: Play waving flag on this computer.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "waving flag" => @com.spotify.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "waving flag")[1] => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: Do the last command.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "waving flag" => @com.spotify.play(playable=id);
====
# recording/ef9eed3d8de76b17f92a7c04dbc56595
U: Play waving flag on this computer.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "waving flag" => @com.spotify.play(playable=id);
====
# recording/113bb13954f5ecf844768f5717b1a2b0
U: Play waving flag by Khan on Spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("khan")) && id =~ "waving flag" => @com.spotify.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:6mQfAAqZGBzIfrmlZCeaYT"^^com.spotify:artist("Chaka Khan")) && id =~ "waving flag")[1] => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
A: Sorry, there are no music matching your request.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_empty_search;
U: Play waving flag by KHAAN on this computer.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^com.spotify:artist("khaan")) && id =~ "waving flag" => @com.spotify.play(playable=id);
====
# recording/528e9810202c3415584e134d31fda0d2
U: Turn shuffle on.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_shuffle(shuffle=enum on);
====
# log/158258
U: change music to lounge
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "lounge") => @com.spotify.play(playable=id);
====
# log/158067
U: play tickle me pink, madeline
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "tickle me pink , madeline" => @com.spotify.play(playable=id);
====
# log/158060
U: play madeline by pink
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("pink")) && id =~ "madeline" => @com.spotify.play(playable=id);
====
# log/158058
U: play madeline song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter id =~ "madeline" => @com.spotify.play(playable=id);
====
# log/158056
U: play sia song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("sia")) => @com.spotify.play(playable=id);
====
# log/158055
U: play sia
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("sia")) => @com.spotify.play(playable=id);
====
# log/158028
U: play love story by taylor
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("taylor")) && id =~ "love story" => @com.spotify.play(playable=id);
====
# log/158026
U: play love story by swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("swift")) && id =~ "love story" => @com.spotify.play(playable=id);
====
# log/158025
U: play love story swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("swift")) && id =~ "love story" => @com.spotify.play(playable=id);
====
# online/spotify-103
U: play funky tunes playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playlist(), id =~ "funky tunes" => @com.spotify.play(playable=id);
====
# 7
U: i'm feeling nostalgic. play me a song from the 1980s .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song()), (release_date >= new Date("1980-01-01T08:00:00.000Z") && release_date <= new Date("1980-01-01T08:00:00.000Z") + 10year) => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (@com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song()), (release_date >= new Date("1980-01-01T08:00:00.000Z") && release_date <= new Date("1980-01-01T08:00:00.000Z") + 10year) => notify
C: #[results=[
C:   { id="spotify:track:2374M0fQpWi3dLnB54qaLX"^^com.spotify:song("Africa"), artists=["spotify:artist:0PFtn5NtBbbUNbU9EAmIWF"^^com.spotify:artist("TOTO")], release_date=new Date("1982-04-08T00:00:00.000Z"), popularity=83, energy=37, danceability=67 },
C:   { id="spotify:track:0mHyWYXmmCB9iQyK18m3FQ"^^com.spotify:song("Hello"), artists=["spotify:artist:3gMaNLQm7D9MornNILzdSl"^^com.spotify:artist("Lionel Richie")], release_date=new Date("1983-01-01T00:00:00.000Z"), popularity=59, energy=24, danceability=48 },
C:   { id="spotify:track:5tVA6TkbaAH9QMITTQRrNv"^^com.spotify:song("Free Fallin'"), artists=["spotify:artist:2UZMlIwnkgAEDBsw1Rejkn"^^com.spotify:artist("Tom Petty")], release_date=new Date("1989-01-01T00:00:00.000Z"), popularity=78, energy=44, danceability=62 },
C:   { id="spotify:track:4RvWPyQ5RL0ao9LPZeSouE"^^com.spotify:song("Everybody Wants To Rule The World"), artists=["spotify:artist:4bthk9UfsYUYdcFyqxmSUU"^^com.spotify:artist("Tears For Fears")], release_date=new Date("1985-02-25T00:00:00.000Z"), popularity=81, energy=79, danceability=64 },
C:   { id="spotify:track:2tUBqZG2AbRi7Q0BIrVrEj"^^com.spotify:song("I Wanna Dance with Somebody (Who Loves Me)"), artists=["spotify:artist:6XpaIBNiVzIetEPCWDvAFP"^^com.spotify:artist("Whitney Houston")], release_date=new Date("1987-06-02T00:00:00.000Z"), popularity=81, energy=82, danceability=70 },
C:   { id="spotify:track:4bHsxqR3GMrXTxEPLuK5ue"^^com.spotify:song("Don't Stop Believin'"), artists=["spotify:artist:0rvjqX7ttXeg3mTy8Xscbt"^^com.spotify:artist("Journey")], release_date=new Date("1981-01-01T00:00:00.000Z"), popularity=80, energy=74, danceability=5 },
C:   { id="spotify:track:37ZJ0p5Jm13JPevGcx4SkF"^^com.spotify:song("Livin' On A Prayer"), artists=["spotify:artist:58lV9VcRSjABbAbfWS6skp"^^com.spotify:artist("Bon Jovi")], release_date=new Date("1986-08-16T00:00:00.000Z"), popularity=82, energy=88, danceability=53 },
C:   { id="spotify:track:08mG3Y1vljYA6bvDt4Wqkj"^^com.spotify:song("Back In Black"), artists=["spotify:artist:711MCceyCBcFnzjGY4Q7Un"^^com.spotify:artist("AC/DC")], release_date=new Date("1980-07-25T00:00:00.000Z"), popularity=82, energy=7, danceability=31 },
C:   { id="spotify:track:7snQQk1zcKl8gZ92AnueZW"^^com.spotify:song("Sweet Child O' Mine"), artists=["spotify:artist:3qm84nBOXUEQ2vnTfUTTFC"^^com.spotify:artist("Guns N' Roses")], release_date=new Date("1987-07-21T00:00:00.000Z"), popularity=74, energy=95, danceability=44 },
C:   { id="spotify:track:43btz2xjMKpcmjkuRsvxyg"^^com.spotify:song("Jack & Diane"), artists=["spotify:artist:3lPQ2Fk5JOwGWAF3ORFCqH"^^com.spotify:artist("John Mellencamp")], release_date=new Date("1982-01-01T00:00:00.000Z"), popularity=75, energy=41, danceability=81 }
C: ]]
C: #[count=20];
A: i found africa by toto . would you like me to play this song ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:track:2374M0fQpWi3dLnB54qaLX"^^com.spotify:song("Africa"))
AT: #[confirm=enum(proposed)];
U: actually, why don't we try the '70s instead .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song()), (release_date >= new Date("1970-01-01T08:00:00.000Z") && release_date <= new Date("1970-01-01T08:00:00.000Z") + 10year) => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (@com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song()), (release_date >= new Date("1980-01-01T08:00:00.000Z") && release_date <= new Date("1980-01-01T08:00:00.000Z") + 10year) => notify
C: #[results=[
C:   { id="spotify:track:2374M0fQpWi3dLnB54qaLX"^^com.spotify:song("Africa"), artists=["spotify:artist:0PFtn5NtBbbUNbU9EAmIWF"^^com.spotify:artist("TOTO")], release_date=new Date("1982-04-08T00:00:00.000Z"), popularity=83, energy=37, danceability=67 },
C:   { id="spotify:track:0mHyWYXmmCB9iQyK18m3FQ"^^com.spotify:song("Hello"), artists=["spotify:artist:3gMaNLQm7D9MornNILzdSl"^^com.spotify:artist("Lionel Richie")], release_date=new Date("1983-01-01T00:00:00.000Z"), popularity=59, energy=24, danceability=48 },
C:   { id="spotify:track:5tVA6TkbaAH9QMITTQRrNv"^^com.spotify:song("Free Fallin'"), artists=["spotify:artist:2UZMlIwnkgAEDBsw1Rejkn"^^com.spotify:artist("Tom Petty")], release_date=new Date("1989-01-01T00:00:00.000Z"), popularity=78, energy=44, danceability=62 },
C:   { id="spotify:track:4RvWPyQ5RL0ao9LPZeSouE"^^com.spotify:song("Everybody Wants To Rule The World"), artists=["spotify:artist:4bthk9UfsYUYdcFyqxmSUU"^^com.spotify:artist("Tears For Fears")], release_date=new Date("1985-02-25T00:00:00.000Z"), popularity=81, energy=79, danceability=64 },
C:   { id="spotify:track:2tUBqZG2AbRi7Q0BIrVrEj"^^com.spotify:song("I Wanna Dance with Somebody (Who Loves Me)"), artists=["spotify:artist:6XpaIBNiVzIetEPCWDvAFP"^^com.spotify:artist("Whitney Houston")], release_date=new Date("1987-06-02T00:00:00.000Z"), popularity=81, energy=82, danceability=70 },
C:   { id="spotify:track:4bHsxqR3GMrXTxEPLuK5ue"^^com.spotify:song("Don't Stop Believin'"), artists=["spotify:artist:0rvjqX7ttXeg3mTy8Xscbt"^^com.spotify:artist("Journey")], release_date=new Date("1981-01-01T00:00:00.000Z"), popularity=80, energy=74, danceability=5 },
C:   { id="spotify:track:37ZJ0p5Jm13JPevGcx4SkF"^^com.spotify:song("Livin' On A Prayer"), artists=["spotify:artist:58lV9VcRSjABbAbfWS6skp"^^com.spotify:artist("Bon Jovi")], release_date=new Date("1986-08-16T00:00:00.000Z"), popularity=82, energy=88, danceability=53 },
C:   { id="spotify:track:08mG3Y1vljYA6bvDt4Wqkj"^^com.spotify:song("Back In Black"), artists=["spotify:artist:711MCceyCBcFnzjGY4Q7Un"^^com.spotify:artist("AC/DC")], release_date=new Date("1980-07-25T00:00:00.000Z"), popularity=82, energy=7, danceability=31 },
C:   { id="spotify:track:7snQQk1zcKl8gZ92AnueZW"^^com.spotify:song("Sweet Child O' Mine"), artists=["spotify:artist:3qm84nBOXUEQ2vnTfUTTFC"^^com.spotify:artist("Guns N' Roses")], release_date=new Date("1987-07-21T00:00:00.000Z"), popularity=74, energy=95, danceability=44 },
C:   { id="spotify:track:43btz2xjMKpcmjkuRsvxyg"^^com.spotify:song("Jack & Diane"), artists=["spotify:artist:3lPQ2Fk5JOwGWAF3ORFCqH"^^com.spotify:artist("John Mellencamp")], release_date=new Date("1982-01-01T00:00:00.000Z"), popularity=75, energy=41, danceability=81 }
C: ]]
C: #[count=20];
C: now => (@com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song()), (release_date >= new Date("1970-01-01T08:00:00.000Z") && release_date <= new Date("1970-01-01T08:00:00.000Z") + 10year) => notify
C: #[results=[
C:   { id="spotify:track:6vmAgl2y9MpoZKrVUXrPe5"^^com.spotify:song("Hello Darlin'"), artists=["spotify:artist:7gi3jmwpUpNWdswT8eEprF"^^com.spotify:artist("Conway Twitty")], release_date=new Date("1970-03-23T00:00:00.000Z"), popularity=60, energy=23, danceability=27 },
C:   { id="spotify:track:0ofHAoxe9vBkTCp2UQIavz"^^com.spotify:song("Dreams - 2004 Remaster"), artists=["spotify:artist:08GQAI4eElDnROBrJRGE0X"^^com.spotify:artist("Fleetwood Mac")], release_date=new Date("1977-02-04T00:00:00.000Z"), popularity=80, energy=49, danceability=82 },
C:   { id="spotify:track:7e89621JPkKaeDSTQ3avtg"^^com.spotify:song("Sweet Home Alabama"), artists=["spotify:artist:4MVyzYMgTwdP7Z49wAZHx0"^^com.spotify:artist("Lynyrd Skynyrd")], release_date=new Date("1974-04-15T00:00:00.000Z"), popularity=82, energy=60, danceability=59 },
C:   { id="spotify:track:2RlgNHKcydI9sayD2Df2xp"^^com.spotify:song("Mr. Blue Sky"), artists=["spotify:artist:7jefIIksOi1EazgRTfW2Pk"^^com.spotify:artist("Electric Light Orchestra")], release_date=new Date("1977-01-01T00:00:00.000Z"), popularity=81, energy=33, danceability=38 },
C:   { id="spotify:track:3gdewACMIVMEWVbyb8O9sY"^^com.spotify:song("Rocket Man (I Think It's Going To Be A Long, Long Time)"), artists=["spotify:artist:3PhoLpVuITZKcymswpck5b"^^com.spotify:artist("Elton John")], release_date=new Date("1972-05-19T00:00:00.000Z"), popularity=81, energy=53, danceability=60 },
C:   { id="spotify:track:7tFiyTwD0nx5a1eklYtX2J"^^com.spotify:song("Bohemian Rhapsody - 2011 Mix"), artists=["spotify:artist:1dfeR4HaWDbWqFHLkxsg1d"^^com.spotify:artist("Queen")], release_date=new Date("1975-11-21T00:00:00.000Z"), popularity=74, energy=40, danceability=39 },
C:   { id="spotify:track:40riOy7x9W7GXjyGp4pjAv"^^com.spotify:song("Hotel California - 2013 Remaster"), artists=["spotify:artist:0ECwFtbIWEVNwjlrfc6xoL"^^com.spotify:artist("Eagles")], release_date=new Date("1976-12-08T00:00:00.000Z"), popularity=82, energy=50, danceability=57 },
C:   { id="spotify:track:7hQJA50XrCWABAu5v6QZ4i"^^com.spotify:song("Don't Stop Me Now - 2011 Mix"), artists=["spotify:artist:1dfeR4HaWDbWqFHLkxsg1d"^^com.spotify:artist("Queen")], release_date=new Date("1978-11-10T00:00:00.000Z"), popularity=74, energy=86, danceability=56 },
C:   { id="spotify:track:1bp2IO61zbQrbWNmKKxg3f"^^com.spotify:song("The Joker"), artists=["spotify:artist:6QtGlUje9TIkLrgPZrESuk"^^com.spotify:artist("Steve Miller Band")], release_date=new Date("1973-01-01T00:00:00.000Z"), popularity=77, energy=44, danceability=59 },
C:   { id="spotify:track:2TVxnKdb3tqe1nhQWwwZCO"^^com.spotify:song("Tiny Dancer"), artists=["spotify:artist:3PhoLpVuITZKcymswpck5b"^^com.spotify:artist("Elton John")], release_date=new Date("1971-11-05T00:00:00.000Z"), popularity=79, energy=42, danceability=41 }
C: ]]
C: #[count=21];
A: i found dreams by fleetwood mac . should i play this instead ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:track:0ofHAoxe9vBkTCp2UQIavz"^^com.spotify:song("Dreams - 2004 Remaster"))
AT: #[confirm=enum(proposed)];
U: absolutely, i love this song .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:track:0ofHAoxe9vBkTCp2UQIavz"^^com.spotify:song("Dreams - 2004 Remaster"));
====
# snips-nlu/spotify-34
U: play laura love songs from 1959
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("laura love")) && release_date >= makeDate(1959, 1, 1) && release_date <= makeDate(1959, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-71
U: Play music from 2002
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2002, 1, 1) && release_date <= makeDate(2002, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-91
U: I want to hear Ready by Frankenstein Drag Queens From Planet 13
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), id =~ ("ready") && contains(artists, null^^com.spotify:artist("frankenstein drag queens from planet 13")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-110
U: play a 1994 tune by Lena Horne
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1994, 1, 1) && release_date <= makeDate(1994, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("lena horne")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-117
U: play something from 1981
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1981, 1, 1) && release_date <= makeDate(1981, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-144
U: Play music from 2015
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2015, 1, 1) && release_date <= makeDate(2015, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-145
U: Play music from 1964
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1964, 1, 1) && release_date <= makeDate(1964, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-160
U: play some 1991 Dave Barker
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1991, 1, 1) && release_date <= makeDate(1991, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("dave barker")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-168
U: Play any song from 2001
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2001, 1, 1) && release_date <= makeDate(2001, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-175
U: play music from 1981
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1981, 1, 1) && release_date <= makeDate(1981, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-183
U: Play Barbra Streisand music from 1997 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("barbra streisand")) && release_date >= makeDate(1997, 1, 1) && release_date <= makeDate(1997, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-235
U: play 1970 trunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1970, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-237
U: Play a track from 1985 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1985, 1, 1) && release_date <= makeDate(1985, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-280
U: play Abhijeet Bhattacharya from 1986
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("abhijeet bhattacharya")) && release_date >= makeDate(1986, 1, 1) && release_date <= makeDate(1986, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-284
U: Play Dj Drama from the 1976
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("dj drama")) && release_date >= makeDate(1976, 1, 1) && release_date <= makeDate(1976, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-304
U: Play some music from 1995
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1995, 1, 1) && release_date <= makeDate(1995, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-324
U: Play Hasan Saltik from 2004
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("hasan saltik")) && release_date >= makeDate(2004, 1, 1) && release_date <= makeDate(2004, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-333
U: Play me a song from 1976 by Bennie Moten
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1976, 1, 1) && release_date <= makeDate(1976, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("bennie moten")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-357
U: Lets hear some 2009 music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2009, 1, 1) && release_date <= makeDate(2009, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-371
U: Play a track from 1959 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1959, 1, 1) && release_date <= makeDate(1959, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-399
U: Play music from 2011 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2011, 1, 1) && release_date <= makeDate(2011, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-420
U: Please play some music from 1996
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1996, 1, 1) && release_date <= makeDate(1996, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-435
U: Play music from 2010 by Jason Donovan
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2010, 1, 1) && release_date <= makeDate(2010, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("jason donovan")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-437
U: Play Giovanni Battista Guadagnini's 1982 tracks .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("giovanni battista guadagnini")) && release_date >= makeDate(1982, 1, 1) && release_date <= makeDate(1982, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-444
U: Play that new song from 1970
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1970, 1, 1) + 1year))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-489
U: Play the best songs of 2016
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 1, 1) + 1year) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-520
U: play Robert Stoddard from 1988
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("robert stoddard")) && release_date >= makeDate(1988, 1, 1) && release_date <= makeDate(1988, 1, 1) + 1year => @com.spotify.play(playable=id);
====
====
# snips-nlu/spotify-528
U: Play 2011 music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2011, 1, 1) && release_date <= makeDate(2011, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-536
U: Play me a 2003 song by Charles Neidich
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2003, 1, 1) && release_date <= makeDate(2003, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("charles neidich")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-552
U: Play an album from 1987 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.album(), release_date >= makeDate(1987, 1, 1) && release_date <= makeDate(1987, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-553
U: Play music from 1960
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1960, 1, 1) + 1year => @com.spotify.play(playable=id);
====
====
# snips-nlu/spotify-565
U: Play music from the year 1964
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1964, 1, 1) && release_date <= makeDate(1964, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-581
U: Play an Asha Bhosle song from around 1964
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("asha bhosle")) && release_date >= makeDate(1964, 1, 1) && release_date <= makeDate(1964, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-590
U: Play some good music from 2012 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song(), release_date >= makeDate(2012, 1, 1) && release_date <= makeDate(2012, 1, 1) + 1year) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-592
U: Play the top hits of 2016
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.song(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 1, 1) + 1year))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-612
U: play the 2014 album from la lupe
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.album(), release_date >= makeDate(2014, 1, 1) && release_date <= makeDate(2014, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("la lupe")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-646
U: Will you play me the most popular sound track from 2006
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.song(), release_date >= makeDate(2006, 1, 1) && release_date <= makeDate(2006, 1, 1) + 1year))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-667
U: play Solange 2016 album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.album(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-685
U: Play the top 1991 sound track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1991, 1, 1) && release_date <= makeDate(1991, 1, 1) + 1year))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-696
U: play dj kentaro from the year 1994
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("dj kentaro")) && release_date >= makeDate(1994, 1, 1) && release_date <= makeDate(1994, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-702
U: Play the newest released song from 1951
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1951, 1, 1) && release_date <= makeDate(1951, 1, 1) + 1year))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-718
U: play a tune from 1962
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1962, 1, 1) && release_date <= makeDate(1962, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-721
U: Play music from 2005 by Justin Broadrick
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2005, 1, 1) && release_date <= makeDate(2005, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("justin broadrick")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-722
U: Play the best 1981 sound track from Ric Fierabracci
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1981, 1, 1) && release_date <= makeDate(1981, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("ric fierabracci"))))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-764
U: I want to hear a good song from 2016
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 1, 1) + 1year) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-772
U: Play a Wendy Carlos song from 2002
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("wendy carlos")) && release_date >= makeDate(2002, 1, 1) && release_date <= makeDate(2002, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-830
U: Give me an album from 1972 to listen to.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.album(), release_date >= makeDate(1972, 1, 1) && release_date <= makeDate(1972, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-844
U: Play music by Paulinho Da Viola from 1965
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("paulinho da viola")) && release_date >= makeDate(1965, 1, 1) && release_date <= makeDate(1965, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-851
U: Play Tina Cousins from 1956
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("tina cousins")) && release_date >= makeDate(1956, 1, 1) && release_date <= makeDate(1956, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-853
U: Play me songs from 1955
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1955, 1, 1) && release_date <= makeDate(1955, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-858
U: play music from 2014
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2014, 1, 1) && release_date <= makeDate(2014, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-866
U: I want to hear music from carman from the 1966 album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.album(), contains(artists, null^^com.spotify:artist("carman")) && release_date >= makeDate(1966, 1, 1) && release_date <= makeDate(1966, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-869
U: Play Vic Ruggiero music from 2007
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("vic ruggiero")) && release_date >= makeDate(2007, 1, 1) && release_date <= makeDate(2007, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-916
U: Play music from 1958 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1958, 1, 1) && release_date <= makeDate(1958, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-926
U: Play some 1987 Edie Brickell .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1987, 1, 1) && release_date <= makeDate(1987, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("edie brickell")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-954
U: Play some Paulinho Da Viola from 1965 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("paulinho da viola")) && release_date >= makeDate(1965, 1, 1) && release_date <= makeDate(1965, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-966
U: Play me a song from 2008
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2008, 1, 1) && release_date <= makeDate(2008, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-986
U: play Paula Campbell music from 1993
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("paula campbell")) && release_date >= makeDate(1993, 1, 1) && release_date <= makeDate(1993, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-995
U: Play a song from 2003
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2003, 1, 1) && release_date <= makeDate(2003, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-997
U: Can I hear tod ashley music from 1953?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("tod ashley")) && release_date >= makeDate(1953, 1, 1) && release_date <= makeDate(1953, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1001
U: Please play an album from 1987
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.album(), release_date >= makeDate(1987, 1, 1) && release_date <= makeDate(1987, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1022
U: play music from 1950
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1950, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1030
U: I want to hear that tune from 2010
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2010, 1, 1) && release_date <= makeDate(2010, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1047
U: Play the greatest 1966 album out there
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.album(), release_date >= makeDate(1966, 1, 1) && release_date <= makeDate(1966, 1, 1) + 1year))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1079
U: Play 1958 by wayne petti
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1958, 1, 1) && release_date <= makeDate(1958, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("wayne petti")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1080
U: Play something from 1985 by Billy Werner
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1985, 1, 1) && release_date <= makeDate(1985, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("billy werner")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1108
U: Play me a song from 1972 by Sweet Emma Barrett
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1972, 1, 1) && release_date <= makeDate(1972, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("sweet emma barrett")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1124
U: Play the latest 1973 album by Peter Derose .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.album(), release_date >= makeDate(1973, 1, 1) && release_date <= makeDate(1973, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("peter derose"))))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1129
U: Play a sound track from 1952 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1952, 1, 1) && release_date <= makeDate(1952, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1138
U: Play me a song by Avispa Music from 1965
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("avispa music")) && release_date >= makeDate(1965, 1, 1) && release_date <= makeDate(1965, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1165
U: Play some songs from 1958
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1958, 1, 1) && release_date <= makeDate(1958, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1180
U: Can you play a sound track from 1963?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1963, 1, 1) && release_date <= makeDate(1963, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1200
U: Play a song by Alasdair Roberts from 1996
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("alasdair roberts")) && release_date >= makeDate(1996, 1, 1) && release_date <= makeDate(1996, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1211
U: play Vivian Stanshall from 1962
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("vivian stanshall")) && release_date >= makeDate(1962, 1, 1) && release_date <= makeDate(1962, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1213
U: Play music from 1977
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1977, 1, 1) && release_date <= makeDate(1977, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1224
U: play the album by Paul Barker playing the greatest from 1978
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.album(), contains(artists, null^^com.spotify:artist("paul barker")) && release_date >= makeDate(1978, 1, 1) && release_date <= makeDate(1978, 1, 1) + 1year))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1230
U: Play Henrie Mutuku album from 1957
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.album(), contains(artists, null^^com.spotify:artist("henrie mutuku")) && release_date >= makeDate(1957, 1, 1) && release_date <= makeDate(1957, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1232
U: play some 2002 music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2002, 1, 1) && release_date <= makeDate(2002, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1233
U: I want to hear that track from 1991
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1991, 1, 1) && release_date <= makeDate(1991, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1249
U: play top twenty song from 2015
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.song(), release_date >= makeDate(2015, 1, 1) && release_date <= makeDate(2015, 1, 1) + 1year))[1:20] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1256
U: Play music from Clark Kent in the year 1987
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("clark kent")) && release_date >= makeDate(1987, 1, 1) && release_date <= makeDate(1987, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1261
U: Play some music from 1985 by Rolf Harris
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1985, 1, 1) && release_date <= makeDate(1985, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("rolf harris")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1268
U: play a track from 2004
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2004, 1, 1) && release_date <= makeDate(2004, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1274
U: play the greatest 1972 album by Wes Dakus
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.album(), release_date >= makeDate(1972, 1, 1) && release_date <= makeDate(1972, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("wes dakus"))))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1281
U: Play me the greatest track of 1966
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1966, 1, 1) && release_date <= makeDate(1966, 1, 1) + 1year))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1307
U: Play the last sound track by Soko from around 1975
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), contains(artists, null^^com.spotify:artist("soko")) && release_date >= makeDate(1975, 1, 1) && release_date <= makeDate(1975, 1, 1) + 1year))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1311
U: Play a song from 1973 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1973, 1, 1) && release_date <= makeDate(1973, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1314
U: Play a new song from 1976 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1976, 1, 1) && release_date <= makeDate(1976, 1, 1) + 1year))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1321
U: Play me a song from 2016
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1326
U: I want to hear music from 1975
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1975, 1, 1) && release_date <= makeDate(1975, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1329
U: play a top fifty 1965 album by Ski
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.album(), release_date >= makeDate(1965, 1, 1) && release_date <= makeDate(1965, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("ski"))))[1:50] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1358
U: Play the most popular sound track from the 2006
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.song(), release_date >= makeDate(2006, 1, 1) && release_date <= makeDate(2006, 1, 1)+1year))[1] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1359
U: Play tuomas holopainen's The 21 Project .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("tuomas holopainen")) && id =~ ("the 21 project") => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1384
U: Play a song from 2013 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2013, 1, 1) && release_date <= makeDate(2013, 1, 1)+1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1385
U: play 1951 tunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1951, 1, 1) && release_date <= makeDate(1951, 1, 1)+1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1425
U: play something from 1971 by John Bonham
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1971, 1, 1) && release_date <= makeDate(1971, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("john bonham")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1429
U: play 1977 good track tunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now =>  (@com.spotify.song(), release_date >= makeDate(1977, 1, 1) && release_date <= makeDate(1977, 1, 1) + 1year) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1445
U: Play any song from 2006
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2006, 1, 1) && release_date <= makeDate(2006, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1459
U: Play music from 1999
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1999, 1, 1) && release_date <= makeDate(1999, 1, 1)+1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1486
U: Play some music from 1962 from Adeyto
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1962, 1, 1) && release_date <= makeDate(1962, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("adeyto")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1499
U: Play me a 1990 sound track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1990, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1515
U: Play music from 2016 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1567
U: play music by Charlie Adams from 1954
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("charlie adams")) && release_date >= makeDate(1954, 1, 1) && release_date <= makeDate(1954, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1571
U: Play a 2001 tune
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2001, 1, 1) && release_date <= makeDate(2001, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1613
U: Play music from 1989 by Maya .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1989, 1, 1) && release_date <= makeDate(1989, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("maya")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1623
U: Play paul ortiz music from 1990
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("paul ortiz")) && release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1990, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1631
U: Proceed with music from 2003 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2003, 1, 1) && release_date <= makeDate(2003, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1650
U: Play all music Alan released in 1997
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("alan")) && release_date >= makeDate(1997, 1, 1) && release_date <= makeDate(1997, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1657
U: Play music year 2016 by artist Michiru Yamane
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("michiru yamane")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1674
U: Wish to hear music from the year 1996
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1996, 1, 1) && release_date <= makeDate(1996, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1714
U: Please play a song for me from 1959
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1959, 1, 1) && release_date <= makeDate(1959, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1751
U: Play a 1991 song by Anila Mirza
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1991, 1, 1) && release_date <= makeDate(1991, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("anila mirza")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1758
U: Play some 2011 music by Dan Healy .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2011, 1, 1) && release_date <= makeDate(2011, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("dan healy")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1761
U: Listen to music from 1975
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1975, 1, 1) && release_date <= makeDate(1975, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1764
U: play a tune from 2000 by Bronislau Kaper
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2000, 1, 1) && release_date <= makeDate(2000, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("bronislau kaper")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1765
U: Play a song from 1994 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1994, 1, 1) && release_date <= makeDate(1994, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1773
U: Play a top-50 tune from 1982 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1982, 1, 1) && release_date <= makeDate(1982, 1, 1) + 1year))[1:50] => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1777
U: play the music track of 1998
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1998, 1, 1) && release_date <= makeDate(1998, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1778
U: Play some music by Jody Williams from 2001
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("jody williams")) && release_date >= makeDate(2001, 1, 1) && release_date <= makeDate(2001, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1793
U: Play a song from 1950
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1950, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1823
U: Play music from 1958
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1958, 1, 1) && release_date <= makeDate(1958, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1828
U: Play music from 1964 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1964, 1, 1) && release_date <= makeDate(1964, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1841
U: Play a rock track from 1984
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains~(genres, "rock") && release_date >= makeDate(1984, 1, 1) && release_date <= makeDate(1984, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1847
U: Play a 2007 track from Adam Jones
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2007, 1, 1) && release_date <= makeDate(2007, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("adam jones")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1858
U: play anything from 1970
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1970, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1885
U: Play music from 2015
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(2015, 1, 1) && release_date <= makeDate(2015, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1887
U: Play me a song by Carol Arnauld from 2003
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("carol arnauld")) && release_date >= makeDate(2003, 1, 1) && release_date <= makeDate(2003, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1890
U: Please play me a popular track from 1984 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1984, 1, 1) && release_date <= makeDate(1984, 1, 1) + 1year) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1905
U: Can you play some music from 1999
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1999, 1, 1) && release_date <= makeDate(1999, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1909
U: Play Randy Castillo's music from 1952 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("randy castillo")) && release_date >= makeDate(1952, 1, 1) && release_date <= makeDate(1952, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1920
U: Play me a 1986 Jim Root
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1986, 1, 1) && release_date <= makeDate(1986, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("jim root")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1927
U: play a tune from 1973
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1973, 1, 1) && release_date <= makeDate(1973, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1958
U: Play me some music from 1999
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1999, 1, 1) && release_date <= makeDate(1999, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1968
U: play Luis Alfonzo Larrain from 1995
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("luis alfonzo larrain")) && release_date >= makeDate(1995, 1, 1) && release_date <= makeDate(1995, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1983
U: Play some music from 1989 by Sanjeev Abhyankar .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1989, 1, 1) && release_date <= makeDate(1989, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("sanjeev abhyankar")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1986
U: play music from the year 1979
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1979, 1, 1) && release_date <= makeDate(1979, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1993
U: Play music from 1954
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1954, 1, 1) && release_date <= makeDate(1954, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1997
U: play 2007 tunes by Bunny Berigan
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2007, 1, 1) && release_date <= makeDate(2007, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("bunny berigan")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2005
U: Song from Brian Chase in 2004
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("brian chase")) && release_date >= makeDate(2004, 1, 1) && release_date <= makeDate(2004, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2044
U: Play a tune from 2007 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2007, 1, 1) && release_date <= makeDate(2007, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2049
U: Play some 1988 Harry T. Burleigh
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1988, 1, 1) && release_date <= makeDate(1988, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("harry t. burleigh")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2054
U: let's listen to the 1986 sound track by Mike Park
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1986, 1, 1) && release_date <= makeDate(1986, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("mike park")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2065
U: play music from 1974
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1974, 1, 1) && release_date <= makeDate(1974, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2078
U: I would like to hear music from 1993
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1993, 1, 1) && release_date <= makeDate(1993, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2133
U: Play something by the artist Jenifer from 2003
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("jenifer")) && release_date >= makeDate(2003, 1, 1) && release_date <= makeDate(2003, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2146
U: I want to hear an album from 2010
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.album(), release_date >= makeDate(2010, 1, 1) && release_date <= makeDate(2010, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2152
U: I want to hear music from carman from the 1966 album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.album(), contains(artists, null^^com.spotify:artist("carman")) && release_date >= makeDate(1966, 1, 1) && release_date <= makeDate(1966, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2154
U: Play some 1983 Jon Brooks
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1983, 1, 1) && release_date <= makeDate(1983, 1, 1) + 1year && contains(artists, null^^com.spotify:artist("jon brooks")) => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2164
U: Play a tune from 1973 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1973, 1, 1) && release_date <= makeDate(1973, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2213
U: Something by Danielle Polanco in 1986
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("danielle polanco")) && release_date >= makeDate(1986, 1, 1) && release_date <= makeDate(1986, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2269
U: An interesting piece from 1991 please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1991, 1, 1) && release_date <= makeDate(1991, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2284
U: I want to listen to martina mcbride music from 1995
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), contains(artists, null^^com.spotify:artist("martina mcbride")) && release_date >= makeDate(1995, 1, 1) && release_date <= makeDate(1995, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-2293
U: Play music from 1972
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.playable(), release_date >= makeDate(1972, 1, 1) && release_date <= makeDate(1972, 1, 1) + 1year => @com.spotify.play(playable=id);
====
# snips-nlu/spotify-1732
U: Play Miami 2017 by Rodney Whitaker
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.playable(), id =~ "miami 2017" && contains(artists, null^^com.spotify:artist("rodney whitaker"))) => @com.spotify.play(playable=id);
====
# log/8326
U: notify you when the currently playing track name changes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.spotify.get_currently_playing());
====
# recording/7563f4171a03964d8e8b186fe9ffe424
U: pause playback
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_pause();
====
# recording/f8c0bd632461107384cc95e929fa593b
U: can you play some music?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# recording/f380c66fa6a6e8f1b58a72344cf253e0
U: play my playlist songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playlist() => @com.spotify.play(playable=id);
====
# recording/11b8d8c569d4bc5d9ad737bcacc8de56
U: add this to playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.get_currently_playing() => @com.spotify.add_song_to_playlist(song=id);
====
# recording/61759f28c85549af58394e5794d978b8
U: add this song to playlist named songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.get_currently_playing() => @com.spotify.add_song_to_playlist(playlist="songs", song=id);
====
# recording/726dce685c1bd77f6cf40fb5e93621cd
U: add despacito to playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter id =~ "despacito" => @com.spotify.add_song_to_playlist(song=id);
====
# recording/84f4e7ea25a3107230fdf09a96765a74
U: add despacito to songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter id =~ "despacito" => @com.spotify.add_song_to_playlist(playlist="songs", song=id);
====
# recording/fe6df6731e918208f88363b6e5ea5e6d
U: add despacito to a playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter id =~ "despacito" => @com.spotify.add_song_to_playlist(song=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter id =~ "despacito")[1] => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
A: What playlist do you want to add to?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(playlist);
AT: (@com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter id =~ "despacito")[1] => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
U: my playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: (@com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter id =~ "despacito")[1] => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="my playlist", song=id);
====
# recording/05b170cac1b5c691cfb52c2267974b6b
U: music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable();
====
# log-dev/5315
U: play songs from 13
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter release_date <= new Date("2013-01-01T08:00:00.000Z") + 1year && release_date >= new Date("2013-01-01T08:00:00.000Z") => @com.spotify.play(playable=id);
====
# log-dev/5750
U: play pop music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "pop") => @com.spotify.play(playable=id);
====
# log-dev/5045
U: play radioactive by imagine dragons
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("imagine dragons")) && id =~ "radioactive" => @com.spotify.play(playable=id);
====
# log-dev/9190
U: acdc
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.artist() filter id =~ "acdc";
====
# log-dev/8251
U: play the playlist classics
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playlist() filter id =~ "classics" => @com.spotify.play(playable=id);
====
# log-dev/4330
U: play the previous song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.player_previous();
====
# log-dev/8876
U: play queen
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("queen")) => @com.spotify.play(playable=id);
====
# log-dev/7183
U: what is currently playing?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.get_currently_playing();
====
# log-dev/5096
U: play the album the wall
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter id =~ "the wall" => @com.spotify.play(playable=id);
====
# log-dev/7145
U: play megadeth tornado of souls
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("megadeth")) && id =~ "tornado of souls" => @com.spotify.play(playable=id);
====
# log-dev/8443
U: play sara bareilles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("sara bareilles")) => @com.spotify.play(playable=id);
====
# log-dev/5789
U: what's the latest song by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("taylor swift")))[1];
====
# log-dev/8417
U: play viva la vida
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "viva la vida" => @com.spotify.play(playable=id);
====
# log-dev/5127
U: play taylor swift's most popular song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("taylor swift")))[1] => @com.spotify.play(playable=id);
====
# log-dev/9418
U: play dance monkey
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "dance monkey" => @com.spotify.play(playable=id);
====
# log-dev/5405
U: play all the good things
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "all the good things" => @com.spotify.play(playable=id);
====
# log-dev/5366
U: play lady gaga
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("lady gaga")) => @com.spotify.play(playable=id);
====
# log-dev/5074
U: play the latest song by kanye
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("kanye")))[1] => @com.spotify.play(playable=id);
====
# log-dev/5530
U: find call me maybe by carly rae japsen
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("carly rae japsen")) && id =~ "call me maybe";
====
# log-dev/5771
U: get me songs with popular under 13
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter popularity <= 13;
====
# log-dev/5339
U: play the most popular song by charlie xcx
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("charlie xcx")))[1] => @com.spotify.play(playable=id);
====
# log-dev/5390
U: play some atzen
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("atzen")) => @com.spotify.play(playable=id);
====
# log-dev/4967
U: play me music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() => @com.spotify.play(playable=id);
====
# log-dev/5469
U: play uptown funk
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "uptown funk" => @com.spotify.play(playable=id);
====
# log-dev/5299
U: play the most recent song by rihanna
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("rihanna")))[1] => @com.spotify.play(playable=id);
====
# log-dev/5321
U: play some daft punk
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("daft punk")) => @com.spotify.play(playable=id);
====
# log-dev/5298
U: play the most recent song by sia
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("sia")))[1] => @com.spotify.play(playable=id);
====
# log-dev/6951
U: play the album reputation by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.album() filter contains(artists, null^^com.spotify:artist("taylor swift")) && id =~ "reputation" => @com.spotify.play(playable=id);
====
# log-dev/5186
U: play as long as you love me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "as long as you love me" => @com.spotify.play(playable=id);
====
# log-dev/6322
U: play fa fa by guster
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("guster")) && id =~ "fa fa" => @com.spotify.play(playable=id);
====
# log-dev/5214
U: play ariana grande
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("ariana grande")) => @com.spotify.play(playable=id);
====
# log-dev/5568
U: play happy songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains~(genres, "happy") => @com.spotify.play(playable=id);
====
# log-dev/8423
U: play sunday morning.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "sunday morning" => @com.spotify.play(playable=id);
====
# log-dev/5026
U: play the latest by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("taylor swift")))[1] => @com.spotify.play(playable=id);
====
# log-dev/4973
U: play a song release by drake
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("drake")) => @com.spotify.play(playable=id);
====
# log-dev/5204
U: yes, show me information of jay chou
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.artist() filter id == null^^com.spotify:artist("jay chou");
====
# log-dev/8754
U: d rock classic.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "rock classic");
====
# log-dev/6961
U: what's the most recent song by cardi b
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @com.spotify.song() filter contains(artists, null^^com.spotify:artist("cardi b")))[1];
====
# log-dev/5132
U: play the most popular song of 13
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.song() filter release_date <= new Date("2013-01-01T08:00:00.000Z") + 1year && release_date >= new Date("2013-01-01T08:00:00.000Z"))[1] => @com.spotify.play(playable=id);
====
# log-dev/5071
U: play the most popular by justin bieber
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("justin bieber")))[1] => @com.spotify.play(playable=id);
====
# log-dev/8038
U: play metallica on spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains(artists, null^^com.spotify:artist("metallica")) => @com.spotify.play(playable=id);
====
# log-dev/5779
U: play most energetic songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(energy desc of @com.spotify.song())[1] => @com.spotify.play(playable=id);
====
# log-dev/8823
U: play i love you baby
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "i love you baby" => @com.spotify.play(playable=id);
====
# log/4978
U: play song by imagine dragons
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.song() filter contains(artists, null^^com.spotify:artist("imagine dragons")) => @com.spotify.play(playable=id);
====
# log/7977
U: classical music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter contains~(genres, "classical");
====
# log/110487
U: play my daily mix 1 on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.playable() filter id =~ "daily mix 1" => @com.spotify.play(playable=id);
